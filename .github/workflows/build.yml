on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code.
        uses: actions/checkout@v2
      - name: Install nix.
        uses: cachix/install-nix-action@v13
         with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Setup Nix Binary caches
        run: |
          echo "substituters        = https://hydra.iohk.io https://iohk.cachix.org https://cache.nixos.org/" > /etc/nix/nix.conf
          echo "trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=" >> /etc/nix/nix.conf
      - name: Cache install Nix packages
        uses: rikhuijzer/cache-install@v1.0.8
        with:
          key: nix-${{ hashFiles('nix/packages.nix') }}
          nix_file: 'nix/packages.nix'
      - name: Accessing the cache.
        uses: actions/cache@v2
        with:
          path: |
            ~/.cabal/store
            dist-newstyle
          key: cabal-cache-${{ github.sha }}
          restore-keys: |
            cabal-cache
            new-cabal
      - name: Cabal update.
        run: |
          cd .. # It's important to cd out of the root, otherwise cabal will try to build deps in the cabal.project file
          cabal update
      - name: Chmod test script.
        run: |
          chmod u+x tests/run-tests.sh
      - name: Build and test.
        run: |
          nix-shell --run "./tests/run-tests.sh --ci"
      - name: Archive test artifacts.
        uses: actions/upload-artifact@v2
        with:
          name: test-artifacts
          path: |
            tests/*.artifact
          retention-days: 5
