[{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToOutputDatum\">ToOutputDatum</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toOutputDatum\">toOutputDatum</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:OutputDatum\" title=\"PlutusLedgerApi.V2.Tx\">OutputDatum</a></li></ul>","name":"ToOutputDatum toOutputDatum","module":"Cooked.Conversion.ToOutputDatum","link":"Cooked-Conversion-ToOutputDatum.html#t:ToOutputDatum"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToScript\">ToScript</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toScript\">toScript</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a></li></ul>","name":"ToScript toScript","module":"Cooked.Conversion.ToScript","link":"Cooked-Conversion-ToScript.html#t:ToScript"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToScriptHash\">ToScriptHash</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toScriptHash\">toScriptHash</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a></li></ul>","name":"ToScriptHash toScriptHash","module":"Cooked.Conversion.ToScriptHash","link":"Cooked-Conversion-ToScriptHash.html#t:ToScriptHash"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToValue\">ToValue</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toValue\">toValue</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a></li></ul>","name":"ToValue toValue","module":"Cooked.Conversion.ToValue","link":"Cooked-Conversion-ToValue.html#t:ToValue"},{"display_html":"<a href=\"#v:quickTokenName\">quickTokenName</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>","name":"quickTokenName","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:quickTokenName"},{"display_html":"<a href=\"#v:quickAssetClass\">quickAssetClass</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:AssetClass\" title=\"PlutusLedgerApi.V1.Value\">AssetClass</a>","name":"quickAssetClass","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:quickAssetClass"},{"display_html":"<a href=\"#v:quickValue\">quickValue</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"quickValue","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:quickValue"},{"display_html":"<a href=\"#v:permanentTokenName\">permanentTokenName</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>","name":"permanentTokenName","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:permanentTokenName"},{"display_html":"<a href=\"#v:permanentAssetClass\">permanentAssetClass</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:AssetClass\" title=\"PlutusLedgerApi.V1.Value\">AssetClass</a>","name":"permanentAssetClass","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:permanentAssetClass"},{"display_html":"<a href=\"#v:permanentValue\">permanentValue</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"permanentValue","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:permanentValue"},{"display_html":"<a href=\"#v:quickCurrencyPolicy\">quickCurrencyPolicy</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>","name":"quickCurrencyPolicy","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:quickCurrencyPolicy"},{"display_html":"<a href=\"#v:quickCurrencyPolicyV3\">quickCurrencyPolicyV3</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>","name":"quickCurrencyPolicyV3","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:quickCurrencyPolicyV3"},{"display_html":"<a href=\"#v:quickCurrencySymbol\">quickCurrencySymbol</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:CurrencySymbol\" title=\"PlutusLedgerApi.V1.Value\">CurrencySymbol</a>","name":"quickCurrencySymbol","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:quickCurrencySymbol"},{"display_html":"<a href=\"#v:permanentCurrencyPolicy\">permanentCurrencyPolicy</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>","name":"permanentCurrencyPolicy","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:permanentCurrencyPolicy"},{"display_html":"<a href=\"#v:permanentCurrencyPolicyV3\">permanentCurrencyPolicyV3</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>","name":"permanentCurrencyPolicyV3","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:permanentCurrencyPolicyV3"},{"display_html":"<a href=\"#v:permanentCurrencySymbol\">permanentCurrencySymbol</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:CurrencySymbol\" title=\"PlutusLedgerApi.V1.Value\">CurrencySymbol</a>","name":"permanentCurrencySymbol","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:permanentCurrencySymbol"},{"display_html":"<a href=\"#v:currencySymbolFromLanguageAndMP\">currencySymbolFromLanguageAndMP</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Ledger-Plutus-Language.html#t:Language\" title=\"Cardano.Ledger.Plutus.Language\">Language</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:CurrencySymbol\" title=\"PlutusLedgerApi.V1.Value\">CurrencySymbol</a>","name":"currencySymbolFromLanguageAndMP","module":"Cooked.Currencies","link":"Cooked-Currencies.html#v:currencySymbolFromLanguageAndMP"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Ltl\">Ltl</a> a<ul class=\"subs\"><li>= <a href=\"#v:LtlTruth\">LtlTruth</a></li><li>| <a href=\"#v:LtlFalsity\">LtlFalsity</a></li><li>| <a href=\"#v:LtlAtom\">LtlAtom</a> a</li><li>| <a href=\"#v:LtlOr\">LtlOr</a> (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a) (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a)</li><li>| <a href=\"#v:LtlAnd\">LtlAnd</a> (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a) (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a)</li><li>| <a href=\"#v:LtlNext\">LtlNext</a> (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a)</li><li>| <a href=\"#v:LtlUntil\">LtlUntil</a> (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a) (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a)</li><li>| <a href=\"#v:LtlRelease\">LtlRelease</a> (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a) (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a)</li></ul>","name":"Ltl LtlTruth LtlFalsity LtlAtom LtlOr LtlAnd LtlNext LtlUntil LtlRelease","module":"Cooked.Ltl","link":"Cooked-Ltl.html#t:Ltl"},{"display_html":"<a href=\"#v:nowLater\">nowLater</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Semigroup.html#t:Monoid\" title=\"Distribution.Compat.Semigroup\">Monoid</a> a =&gt; <a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a -&gt; [(a, <a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a)]","name":"nowLater","module":"Cooked.Ltl","link":"Cooked-Ltl.html#v:nowLater"},{"display_html":"<a href=\"#v:nowLaterList\">nowLaterList</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Semigroup.html#t:Monoid\" title=\"Distribution.Compat.Semigroup\">Monoid</a> a =&gt; [<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a] -&gt; [(a, [<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a])]","name":"nowLaterList","module":"Cooked.Ltl","link":"Cooked-Ltl.html#v:nowLaterList"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LtlOp\">LtlOp</a> (modification :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (builtin :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:StartLtl\">StartLtl</a> :: <a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> modification -&gt; <a href=\"Cooked-Ltl.html#t:LtlOp\" title=\"Cooked.Ltl\">LtlOp</a> modification builtin ()</li><li><a href=\"#v:StopLtl\">StopLtl</a> :: <a href=\"Cooked-Ltl.html#t:LtlOp\" title=\"Cooked.Ltl\">LtlOp</a> modification builtin ()</li><li><a href=\"#v:Builtin\">Builtin</a> :: builtin a -&gt; <a href=\"Cooked-Ltl.html#t:LtlOp\" title=\"Cooked.Ltl\">LtlOp</a> modification builtin a</li></ul>","name":"LtlOp Builtin StartLtl StopLtl","module":"Cooked.Ltl","link":"Cooked-Ltl.html#t:LtlOp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Staged\">Staged</a> (op :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:Return\">Return</a> :: a -&gt; <a href=\"Cooked-Ltl.html#t:Staged\" title=\"Cooked.Ltl\">Staged</a> op a</li><li><a href=\"#v:Instr\">Instr</a> :: op a -&gt; (a -&gt; <a href=\"Cooked-Ltl.html#t:Staged\" title=\"Cooked.Ltl\">Staged</a> op b) -&gt; <a href=\"Cooked-Ltl.html#t:Staged\" title=\"Cooked.Ltl\">Staged</a> op b</li></ul>","name":"Staged Return Instr","module":"Cooked.Ltl","link":"Cooked-Ltl.html#t:Staged"},{"display_html":"<a href=\"#v:interpLtl\">interpLtl</a> :: <a href=\"Cooked-Ltl.html#t:InterpLtl\" title=\"Cooked.Ltl\">InterpLtl</a> modification builtin m =&gt; <a href=\"Cooked-Ltl.html#t:Staged\" title=\"Cooked.Ltl\">Staged</a> (<a href=\"Cooked-Ltl.html#t:LtlOp\" title=\"Cooked.Ltl\">LtlOp</a> modification builtin) a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:StateT\" title=\"Cardano.Prelude\">StateT</a> [<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> modification] m a","name":"interpLtl","module":"Cooked.Ltl","link":"Cooked-Ltl.html#v:interpLtl"},{"display_html":"<a href=\"#v:interpLtlAndPruneUnfinished\">interpLtlAndPruneUnfinished</a> :: <a href=\"Cooked-Ltl.html#t:InterpLtl\" title=\"Cooked.Ltl\">InterpLtl</a> modification builtin m =&gt; <a href=\"Cooked-Ltl.html#t:Staged\" title=\"Cooked.Ltl\">Staged</a> (<a href=\"Cooked-Ltl.html#t:LtlOp\" title=\"Cooked.Ltl\">LtlOp</a> modification builtin) a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:StateT\" title=\"Cardano.Prelude\">StateT</a> [<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> modification] m a","name":"interpLtlAndPruneUnfinished","module":"Cooked.Ltl","link":"Cooked-Ltl.html#v:interpLtlAndPruneUnfinished"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:MonadPlus\" title=\"Distribution.Compat.Prelude\">MonadPlus</a> m =&gt; <a href=\"#t:InterpLtl\">InterpLtl</a> modification builtin m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:interpBuiltin\">interpBuiltin</a> :: builtin a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:StateT\" title=\"Cardano.Prelude\">StateT</a> [<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> modification] m a</li></ul>","name":"InterpLtl interpBuiltin","module":"Cooked.Ltl","link":"Cooked-Ltl.html#t:InterpLtl"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"#t:MonadModal\">MonadModal</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:Modification\">Modification</a> m :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a></li><li><a href=\"#v:modifyLtl\">modifyLtl</a> :: <a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> (<a href=\"Cooked-Ltl.html#t:Modification\" title=\"Cooked.Ltl\">Modification</a> m) -&gt; m a -&gt; m a</li></ul>","name":"MonadModal Modification modifyLtl","module":"Cooked.Ltl","link":"Cooked-Ltl.html#t:MonadModal"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:GenerateTxError\">GenerateTxError</a><ul class=\"subs\"><li>= <a href=\"#v:ToCardanoError\">ToCardanoError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:ToCardanoError\" title=\"Ledger.Tx.CardanoAPI.Internal\">ToCardanoError</a></li><li>| <a href=\"#v:TxBodyError\">TxBodyError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:TxBodyError\" title=\"Cardano.Api\">TxBodyError</a></li><li>| <a href=\"#v:GenerateTxErrorGeneral\">GenerateTxErrorGeneral</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li></ul>","name":"GenerateTxError TxBodyError ToCardanoError GenerateTxErrorGeneral","module":"Cooked.MockChain.GenerateTx.Common","link":"Cooked-MockChain-GenerateTx-Common.html#t:GenerateTxError"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TxGen\">TxGen</a> context a = <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:ReaderT\" title=\"Cardano.Prelude\">ReaderT</a> context (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:GenerateTxError\" title=\"Cooked.MockChain.GenerateTx.Common\">GenerateTxError</a>) a","name":"TxGen","module":"Cooked.MockChain.GenerateTx.Common","link":"Cooked-MockChain-GenerateTx-Common.html#t:TxGen"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Transform\">Transform</a> a b <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:transform\">transform</a> :: a -&gt; b</li></ul>","name":"Transform transform","module":"Cooked.MockChain.GenerateTx.Common","link":"Cooked-MockChain-GenerateTx-Common.html#t:Transform"},{"display_html":"<a href=\"#v:throwOnLookup\">throwOnLookup</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Ord\" title=\"Distribution.Compat.Prelude\">Ord</a> k =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; k -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> k a -&gt; <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:TxGen\" title=\"Cooked.MockChain.GenerateTx.Common\">TxGen</a> context a","name":"throwOnLookup","module":"Cooked.MockChain.GenerateTx.Common","link":"Cooked-MockChain-GenerateTx-Common.html#v:throwOnLookup"},{"display_html":"<a href=\"#v:throwOnString\">throwOnString</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:TxGen\" title=\"Cooked.MockChain.GenerateTx.Common\">TxGen</a> context a","name":"throwOnString","module":"Cooked.MockChain.GenerateTx.Common","link":"Cooked-MockChain-GenerateTx-Common.html#v:throwOnString"},{"display_html":"<a href=\"#v:throwOnToCardanoErrorOrApply\">throwOnToCardanoErrorOrApply</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; (a -&gt; b) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:ToCardanoError\" title=\"Ledger.Tx.CardanoAPI.Internal\">ToCardanoError</a> a -&gt; <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:TxGen\" title=\"Cooked.MockChain.GenerateTx.Common\">TxGen</a> context b","name":"throwOnToCardanoErrorOrApply","module":"Cooked.MockChain.GenerateTx.Common","link":"Cooked-MockChain-GenerateTx-Common.html#v:throwOnToCardanoErrorOrApply"},{"display_html":"<a href=\"#v:throwOnToCardanoError\">throwOnToCardanoError</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:ToCardanoError\" title=\"Ledger.Tx.CardanoAPI.Internal\">ToCardanoError</a> a -&gt; <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:TxGen\" title=\"Cooked.MockChain.GenerateTx.Common\">TxGen</a> context a","name":"throwOnToCardanoError","module":"Cooked.MockChain.GenerateTx.Common","link":"Cooked-MockChain-GenerateTx-Common.html#v:throwOnToCardanoError"},{"display_html":"<a href=\"#v:liftTxGen\">liftTxGen</a> :: <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:Transform\" title=\"Cooked.MockChain.GenerateTx.Common\">Transform</a> context' context =&gt; <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:TxGen\" title=\"Cooked.MockChain.GenerateTx.Common\">TxGen</a> context a -&gt; <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:TxGen\" title=\"Cooked.MockChain.GenerateTx.Common\">TxGen</a> context' a","name":"liftTxGen","module":"Cooked.MockChain.GenerateTx.Common","link":"Cooked-MockChain-GenerateTx-Common.html#v:liftTxGen"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ShowBS\">ShowBS</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:showBS\">showBS</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Builtins-Internal.html#t:BuiltinString\" title=\"PlutusTx.Builtins.Internal\">BuiltinString</a></li></ul>","name":"ShowBS showBS","module":"Cooked.ShowBS","link":"Cooked-ShowBS.html#t:ShowBS"},{"display_html":"<a href=\"#v:alwaysTrueValidator\">alwaysTrueValidator</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:TypedValidator\" title=\"Ledger.Typed.Scripts\">TypedValidator</a> a","name":"alwaysTrueValidator","module":"Cooked.Validators","link":"Cooked-Validators.html#v:alwaysTrueValidator"},{"display_html":"<a href=\"#v:alwaysFalseValidator\">alwaysFalseValidator</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:TypedValidator\" title=\"Ledger.Typed.Scripts\">TypedValidator</a> a","name":"alwaysFalseValidator","module":"Cooked.Validators","link":"Cooked-Validators.html#v:alwaysFalseValidator"},{"display_html":"<a href=\"#v:alwaysFalseProposingValidator\">alwaysFalseProposingValidator</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>","name":"alwaysFalseProposingValidator","module":"Cooked.Validators","link":"Cooked-Validators.html#v:alwaysFalseProposingValidator"},{"display_html":"<a href=\"#v:alwaysTrueProposingValidator\">alwaysTrueProposingValidator</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>","name":"alwaysTrueProposingValidator","module":"Cooked.Validators","link":"Cooked-Validators.html#v:alwaysTrueProposingValidator"},{"display_html":"<a href=\"#v:mkProposingScript\">mkProposingScript</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Code.html#t:CompiledCode\" title=\"PlutusTx.Code\">CompiledCode</a> (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:BuiltinData\" title=\"PlutusLedgerApi.V1\">BuiltinData</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:BuiltinData\" title=\"PlutusLedgerApi.V1\">BuiltinData</a> -&gt; ()) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>","name":"mkProposingScript","module":"Cooked.Validators","link":"Cooked-Validators.html#v:mkProposingScript"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockContract\">MockContract</a>","name":"MockContract","module":"Cooked.Validators","link":"Cooked-Validators.html#t:MockContract"},{"display_html":"<a href=\"#v:flattenValueI\">flattenValueI</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Iso.html#t:Iso-39-\" title=\"Optics.Iso\">Iso'</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> [(<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:AssetClass\" title=\"PlutusLedgerApi.V1.Value\">AssetClass</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)]","name":"flattenValueI","module":"Cooked.ValueUtils","link":"Cooked-ValueUtils.html#v:flattenValueI"},{"display_html":"<a href=\"#v:adaL\">adaL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Ada.html#t:Ada\" title=\"Plutus.Script.Utils.Ada\">Ada</a>","name":"adaL","module":"Cooked.ValueUtils","link":"Cooked-ValueUtils.html#v:adaL"},{"display_html":"<a href=\"#v:lovelace\">lovelace</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"lovelace","module":"Cooked.ValueUtils","link":"Cooked-ValueUtils.html#v:lovelace"},{"display_html":"<a href=\"#v:ada\">ada</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"ada","module":"Cooked.ValueUtils","link":"Cooked-ValueUtils.html#v:ada"},{"display_html":"<a href=\"#v:knownWallets\">knownWallets</a> :: [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"knownWallets","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:knownWallets"},{"display_html":"<a href=\"#v:wallet\">wallet</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>","name":"wallet","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:wallet"},{"display_html":"<a href=\"#v:walletPKHashToId\">walletPKHashToId</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>","name":"walletPKHashToId","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletPKHashToId"},{"display_html":"<a href=\"#v:walletPK\">walletPK</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Crypto.html#t:PubKey\" title=\"Ledger.Crypto\">PubKey</a>","name":"walletPK","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletPK"},{"display_html":"<a href=\"#v:walletStakingPK\">walletStakingPK</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Crypto.html#t:PubKey\" title=\"Ledger.Crypto\">PubKey</a>","name":"walletStakingPK","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletStakingPK"},{"display_html":"<a href=\"#v:walletPKHash\">walletPKHash</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a>","name":"walletPKHash","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletPKHash"},{"display_html":"<a href=\"#v:walletStakingPKHash\">walletStakingPKHash</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a>","name":"walletStakingPKHash","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletStakingPKHash"},{"display_html":"<a href=\"#v:walletAddress\">walletAddress</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a>","name":"walletAddress","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletAddress"},{"display_html":"<a href=\"#v:walletSK\">walletSK</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"Cooked-Wallet.html#t:PrivateKey\" title=\"Cooked.Wallet\">PrivateKey</a>","name":"walletSK","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletSK"},{"display_html":"<a href=\"#v:walletStakingSK\">walletStakingSK</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Wallet.html#t:PrivateKey\" title=\"Cooked.Wallet\">PrivateKey</a>","name":"walletStakingSK","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletStakingSK"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Wallet\">Wallet</a> = <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-CardanoWallet.html#t:MockWallet\" title=\"Ledger.CardanoWallet\">MockWallet</a>","name":"Wallet","module":"Cooked.Wallet","link":"Cooked-Wallet.html#t:Wallet"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:PrivateKey\">PrivateKey</a> = <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Crypto-Wallet.html#t:XPrv\" title=\"Cardano.Crypto.Wallet\">XPrv</a>","name":"PrivateKey","module":"Cooked.Wallet","link":"Cooked-Wallet.html#t:PrivateKey"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToPubKeyHash\">ToPubKeyHash</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toPubKeyHash\">toPubKeyHash</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a></li></ul>","name":"ToPubKeyHash toPubKeyHash","module":"Cooked.Conversion.ToPubKeyHash","link":"Cooked-Conversion-ToPubKeyHash.html#t:ToPubKeyHash"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToCredential\">ToCredential</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toCredential\">toCredential</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a></li></ul>","name":"ToCredential toCredential","module":"Cooked.Conversion.ToCredential","link":"Cooked-Conversion-ToCredential.html#t:ToCredential"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsAbstractOutput\">IsAbstractOutput</a> o","name":"IsAbstractOutput","module":"Cooked.Output","link":"Cooked-Output.html#t:IsAbstractOutput"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:OwnerType\">OwnerType</a> o","name":"OwnerType","module":"Cooked.Output","link":"Cooked-Output.html#t:OwnerType"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:DatumType\">DatumType</a> o","name":"DatumType","module":"Cooked.Output","link":"Cooked-Output.html#t:DatumType"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:ValueType\">ValueType</a> o","name":"ValueType","module":"Cooked.Output","link":"Cooked-Output.html#t:ValueType"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:ReferenceScriptType\">ReferenceScriptType</a> o","name":"ReferenceScriptType","module":"Cooked.Output","link":"Cooked-Output.html#t:ReferenceScriptType"},{"display_html":"<a href=\"#v:outputOwnerL\">outputOwnerL</a> :: <a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> o =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> o (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> o)","name":"outputOwnerL","module":"Cooked.Output","link":"Cooked-Output.html#v:outputOwnerL"},{"display_html":"<a href=\"#v:outputStakingCredentialL\">outputStakingCredentialL</a> :: <a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> o =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> o (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:StakingCredential\" title=\"Ledger\">StakingCredential</a>)","name":"outputStakingCredentialL","module":"Cooked.Output","link":"Cooked-Output.html#v:outputStakingCredentialL"},{"display_html":"<a href=\"#v:outputDatumL\">outputDatumL</a> :: <a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> o =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> o (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> o)","name":"outputDatumL","module":"Cooked.Output","link":"Cooked-Output.html#v:outputDatumL"},{"display_html":"<a href=\"#v:outputValueL\">outputValueL</a> :: <a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> o =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> o (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> o)","name":"outputValueL","module":"Cooked.Output","link":"Cooked-Output.html#v:outputValueL"},{"display_html":"<a href=\"#v:outputReferenceScriptL\">outputReferenceScriptL</a> :: <a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> o =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> o (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> o))","name":"outputReferenceScriptL","module":"Cooked.Output","link":"Cooked-Output.html#v:outputReferenceScriptL"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IsTxInfoOutput\">IsTxInfoOutput</a> o = (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> o, <a href=\"Cooked-Conversion-ToCredential.html#t:ToCredential\" title=\"Cooked.Conversion.ToCredential\">ToCredential</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> o), <a href=\"Cooked-Conversion-ToOutputDatum.html#t:ToOutputDatum\" title=\"Cooked.Conversion.ToOutputDatum\">ToOutputDatum</a> (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> o), <a href=\"Cooked-Conversion-ToValue.html#t:ToValue\" title=\"Cooked.Conversion.ToValue\">ToValue</a> (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> o), <a href=\"Cooked-Conversion-ToScriptHash.html#t:ToScriptHash\" title=\"Cooked.Conversion.ToScriptHash\">ToScriptHash</a> (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> o))","name":"IsTxInfoOutput","module":"Cooked.Output","link":"Cooked-Output.html#t:IsTxInfoOutput"},{"display_html":"<a href=\"#v:outputAddress\">outputAddress</a> :: (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> o, <a href=\"Cooked-Conversion-ToCredential.html#t:ToCredential\" title=\"Cooked.Conversion.ToCredential\">ToCredential</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> o)) =&gt; o -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a>","name":"outputAddress","module":"Cooked.Output","link":"Cooked-Output.html#v:outputAddress"},{"display_html":"<a href=\"#v:outputOutputDatum\">outputOutputDatum</a> :: (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> o, <a href=\"Cooked-Conversion-ToOutputDatum.html#t:ToOutputDatum\" title=\"Cooked.Conversion.ToOutputDatum\">ToOutputDatum</a> (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> o)) =&gt; o -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:OutputDatum\" title=\"PlutusLedgerApi.V2.Tx\">OutputDatum</a>","name":"outputOutputDatum","module":"Cooked.Output","link":"Cooked-Output.html#v:outputOutputDatum"},{"display_html":"<a href=\"#v:outputValue\">outputValue</a> :: (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> o, <a href=\"Cooked-Conversion-ToValue.html#t:ToValue\" title=\"Cooked.Conversion.ToValue\">ToValue</a> (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> o)) =&gt; o -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"outputValue","module":"Cooked.Output","link":"Cooked-Output.html#v:outputValue"},{"display_html":"<a href=\"#v:outputReferenceScriptHash\">outputReferenceScriptHash</a> :: (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> o, <a href=\"Cooked-Conversion-ToScriptHash.html#t:ToScriptHash\" title=\"Cooked.Conversion.ToScriptHash\">ToScriptHash</a> (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> o)) =&gt; o -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>","name":"outputReferenceScriptHash","module":"Cooked.Output","link":"Cooked-Output.html#v:outputReferenceScriptHash"},{"display_html":"<a href=\"#v:outputTxOut\">outputTxOut</a> :: <a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> o =&gt; o -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>","name":"outputTxOut","module":"Cooked.Output","link":"Cooked-Output.html#v:outputTxOut"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ConcreteOutput\">ConcreteOutput</a> ownerType datumType valueType referenceScriptType <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:ConcreteOutput\">ConcreteOutput</a> :: {..} -&gt; <a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> ownerType datumType valueType referenceScriptType</li></ul>","name":"ConcreteOutput ConcreteOutput concreteOutputOwner concreteOutputStakingCredential concreteOutputDatum concreteOutputValue concreteOutputReferenceScript","module":"Cooked.Output","link":"Cooked-Output.html#t:ConcreteOutput"},{"display_html":"<a href=\"#v:toOutputWithReferenceScriptHash\">toOutputWithReferenceScriptHash</a> :: <a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out =&gt; out -&gt; <a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>","name":"toOutputWithReferenceScriptHash","module":"Cooked.Output","link":"Cooked-Output.html#v:toOutputWithReferenceScriptHash"},{"display_html":"<a href=\"#v:isOutputWithoutDatum\">isOutputWithoutDatum</a> :: <a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out =&gt; out -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) () (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out))","name":"isOutputWithoutDatum","module":"Cooked.Output","link":"Cooked-Output.html#v:isOutputWithoutDatum"},{"display_html":"<a href=\"#v:isOutputWithInlineDatum\">isOutputWithInlineDatum</a> :: <a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out =&gt; out -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a> (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out))","name":"isOutputWithInlineDatum","module":"Cooked.Output","link":"Cooked-Output.html#v:isOutputWithInlineDatum"},{"display_html":"<a href=\"#v:isOutputWithDatumHash\">isOutputWithDatumHash</a> :: <a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out =&gt; out -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out))","name":"isOutputWithDatumHash","module":"Cooked.Output","link":"Cooked-Output.html#v:isOutputWithDatumHash"},{"display_html":"<a href=\"#v:isOutputWithInlineDatumOfType\">isOutputWithInlineDatumOfType</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:FromData\" title=\"PlutusLedgerApi.V1\">FromData</a> a, <a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out) =&gt; out -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) a (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out))","name":"isOutputWithInlineDatumOfType","module":"Cooked.Output","link":"Cooked-Output.html#v:isOutputWithInlineDatumOfType"},{"display_html":"<a href=\"#v:isScriptOutputFrom\">isScriptOutputFrom</a> :: (<a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out, <a href=\"Cooked-Conversion-ToScriptHash.html#t:ToScriptHash\" title=\"Cooked.Conversion.ToScriptHash\">ToScriptHash</a> s) =&gt; s -&gt; out -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> s (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out))","name":"isScriptOutputFrom","module":"Cooked.Output","link":"Cooked-Output.html#v:isScriptOutputFrom"},{"display_html":"<a href=\"#v:isPKOutputFrom\">isPKOutputFrom</a> :: <a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a> -&gt; out -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a> (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out))","name":"isPKOutputFrom","module":"Cooked.Output","link":"Cooked-Output.html#v:isPKOutputFrom"},{"display_html":"<a href=\"#v:isOnlyAdaOutput\">isOnlyAdaOutput</a> :: <a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out =&gt; out -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Ada.html#t:Ada\" title=\"Plutus.Script.Utils.Ada\">Ada</a> (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out))","name":"isOnlyAdaOutput","module":"Cooked.Output","link":"Cooked-Output.html#v:isOnlyAdaOutput"},{"display_html":"<a href=\"#v:fromAbstractOutput\">fromAbstractOutput</a> :: <a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> out =&gt; out -&gt; <a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out)","name":"fromAbstractOutput","module":"Cooked.Output","link":"Cooked-Output.html#v:fromAbstractOutput"},{"display_html":"<a href=\"#v:isReferenceScriptOutputFrom\">isReferenceScriptOutputFrom</a> :: (<a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out, <a href=\"Cooked-Conversion-ToScriptHash.html#t:ToScriptHash\" title=\"Cooked.Conversion.ToScriptHash\">ToScriptHash</a> s) =&gt; s -&gt; out -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>)","name":"isReferenceScriptOutputFrom","module":"Cooked.Output","link":"Cooked-Output.html#v:isReferenceScriptOutputFrom"},{"display_html":"<a href=\"#v:isStakingCredentialOutputFrom\">isStakingCredentialOutputFrom</a> :: (<a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out, <a href=\"Cooked-Conversion-ToCredential.html#t:ToCredential\" title=\"Cooked.Conversion.ToCredential\">ToCredential</a> cred) =&gt; cred -&gt; out -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out))","name":"isStakingCredentialOutputFrom","module":"Cooked.Output","link":"Cooked-Output.html#v:isStakingCredentialOutputFrom"},{"display_html":"<a href=\"#v:isEmptyStakingCredentialOutput\">isEmptyStakingCredentialOutput</a> :: <a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out =&gt; out -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out))","name":"isEmptyStakingCredentialOutput","module":"Cooked.Output","link":"Cooked-Output.html#v:isEmptyStakingCredentialOutput"},{"display_html":"<a href=\"#v:isPKOutput\">isPKOutput</a> :: <a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out =&gt; out -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a> (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out))","name":"isPKOutput","module":"Cooked.Output","link":"Cooked-Output.html#v:isPKOutput"},{"display_html":"<a href=\"#v:isScriptOutput\">isScriptOutput</a> :: <a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> out =&gt; out -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a> (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out))","name":"isScriptOutput","module":"Cooked.Output","link":"Cooked-Output.html#v:isScriptOutput"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToAddress\">ToAddress</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toAddress\">toAddress</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a></li></ul>","name":"ToAddress toAddress","module":"Cooked.Conversion.ToAddress","link":"Cooked-Conversion-ToAddress.html#t:ToAddress"},{"display_html":"module <a href=\"Cooked-Conversion-ToValue.html\">Cooked.Conversion.ToValue</a>","name":"","module":"Cooked.Conversion","link":""},{"display_html":"module <a href=\"Cooked-Conversion-ToScriptHash.html\">Cooked.Conversion.ToScriptHash</a>","name":"","module":"Cooked.Conversion","link":""},{"display_html":"module <a href=\"Cooked-Conversion-ToScript.html\">Cooked.Conversion.ToScript</a>","name":"","module":"Cooked.Conversion","link":""},{"display_html":"module <a href=\"Cooked-Conversion-ToPubKeyHash.html\">Cooked.Conversion.ToPubKeyHash</a>","name":"","module":"Cooked.Conversion","link":""},{"display_html":"module <a href=\"Cooked-Conversion-ToOutputDatum.html\">Cooked.Conversion.ToOutputDatum</a>","name":"","module":"Cooked.Conversion","link":""},{"display_html":"module <a href=\"Cooked-Conversion-ToCredential.html\">Cooked.Conversion.ToCredential</a>","name":"","module":"Cooked.Conversion","link":""},{"display_html":"module <a href=\"Cooked-Conversion-ToAddress.html\">Cooked.Conversion.ToAddress</a>","name":"","module":"Cooked.Conversion","link":""},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Hashable\">Hashable</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toHash\">toHash</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.V1\">BuiltinByteString</a></li></ul>","name":"Hashable toHash","module":"Cooked.Pretty.Hashable","link":"Cooked-Pretty-Hashable.html#t:Hashable"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PrettyCookedOpts\">PrettyCookedOpts</a> = <a href=\"#v:PrettyCookedOpts\">PrettyCookedOpts</a> {<ul class=\"subs\"><li><a href=\"#v:pcOptPrintTxHashes\">pcOptPrintTxHashes</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptPrintTxOutRefs\">pcOptPrintTxOutRefs</a> :: <a href=\"Cooked-Pretty-Options.html#t:PCOptTxOutRefs\" title=\"Cooked.Pretty.Options\">PCOptTxOutRefs</a></li><li><a href=\"#v:pcOptPrintDefaultTxOpts\">pcOptPrintDefaultTxOpts</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptNumericUnderscores\">pcOptNumericUnderscores</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptHashes\">pcOptHashes</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedHashOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedHashOpts</a></li></ul>}","name":"PrettyCookedOpts PrettyCookedOpts pcOptPrintTxHashes pcOptPrintTxOutRefs pcOptPrintDefaultTxOpts pcOptNumericUnderscores pcOptHashes","module":"Cooked.Pretty.Options","link":"Cooked-Pretty-Options.html#t:PrettyCookedOpts"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PrettyCookedHashOpts\">PrettyCookedHashOpts</a> = <a href=\"#v:PrettyCookedHashOpts\">PrettyCookedHashOpts</a> {<ul class=\"subs\"><li><a href=\"#v:pcOptHashLength\">pcOptHashLength</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a></li><li><a href=\"#v:pcOptHashNames\">pcOptHashNames</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.V1\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li><li><a href=\"#v:pcOptHashVerbose\">pcOptHashVerbose</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li></ul>}","name":"PrettyCookedHashOpts PrettyCookedHashOpts pcOptHashLength pcOptHashNames pcOptHashVerbose","module":"Cooked.Pretty.Options","link":"Cooked-Pretty-Options.html#t:PrettyCookedHashOpts"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PCOptTxOutRefs\">PCOptTxOutRefs</a><ul class=\"subs\"><li>= <a href=\"#v:PCOptTxOutRefsHidden\">PCOptTxOutRefsHidden</a></li><li>| <a href=\"#v:PCOptTxOutRefsFull\">PCOptTxOutRefsFull</a></li><li>| <a href=\"#v:PCOptTxOutRefsPartial\">PCOptTxOutRefsPartial</a></li></ul>","name":"PCOptTxOutRefs PCOptTxOutRefsHidden PCOptTxOutRefsFull PCOptTxOutRefsPartial","module":"Cooked.Pretty.Options","link":"Cooked-Pretty-Options.html#t:PCOptTxOutRefs"},{"display_html":"<a href=\"#v:hashNamesFromList\">hashNamesFromList</a> :: <a href=\"Cooked-Pretty-Hashable.html#t:Hashable\" title=\"Cooked.Pretty.Hashable\">Hashable</a> a =&gt; [(a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>)] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.V1\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"hashNamesFromList","module":"Cooked.Pretty.Options","link":"Cooked-Pretty-Options.html#v:hashNamesFromList"},{"display_html":"<a href=\"#v:defaultHashNames\">defaultHashNames</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.V1\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"defaultHashNames","module":"Cooked.Pretty.Options","link":"Cooked-Pretty-Options.html#v:defaultHashNames"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DocCooked\">DocCooked</a> = <a href=\"https://hackage.haskell.org/package/-/docs/PlutusPrelude.html#t:Doc\" title=\"PlutusPrelude\">Doc</a> ()","name":"DocCooked","module":"Cooked.Pretty.Common","link":"Cooked-Pretty-Common.html#t:DocCooked"},{"display_html":"<a href=\"#v:renderString\">renderString</a> :: (a -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>) -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"renderString","module":"Cooked.Pretty.Common","link":"Cooked-Pretty-Common.html#v:renderString"},{"display_html":"<a href=\"#v:prettyItemize\">prettyItemize</a> :: <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a> -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a> -&gt; [<a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>] -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyItemize","module":"Cooked.Pretty.Common","link":"Cooked-Pretty-Common.html#v:prettyItemize"},{"display_html":"<a href=\"#v:prettyItemizeNoTitle\">prettyItemizeNoTitle</a> :: <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a> -&gt; [<a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>] -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyItemizeNoTitle","module":"Cooked.Pretty.Common","link":"Cooked-Pretty-Common.html#v:prettyItemizeNoTitle"},{"display_html":"<a href=\"#v:prettyItemizeNonEmpty\">prettyItemizeNonEmpty</a> :: <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a> -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a> -&gt; [<a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyItemizeNonEmpty","module":"Cooked.Pretty.Common","link":"Cooked-Pretty-Common.html#v:prettyItemizeNonEmpty"},{"display_html":"<a href=\"#v:prettyEnumerate\">prettyEnumerate</a> :: <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a> -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a> -&gt; [<a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>] -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyEnumerate","module":"Cooked.Pretty.Common","link":"Cooked-Pretty-Common.html#v:prettyEnumerate"},{"display_html":"<a href=\"#v:prettyHash\">prettyHash</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedHashOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedHashOpts</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.V1\">BuiltinByteString</a> -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyHash","module":"Cooked.Pretty.Common","link":"Cooked-Pretty-Common.html#v:prettyHash"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PrettyCooked\">PrettyCooked</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:prettyCooked\">prettyCooked</a> :: a -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a></li><li><a href=\"#v:prettyCookedOpt\">prettyCookedOpt</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a></li></ul>","name":"PrettyCooked prettyCookedOpt prettyCooked","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#t:PrettyCooked"},{"display_html":"<a href=\"#v:printCookedOpt\">printCookedOpt</a> :: <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> a =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> ()","name":"printCookedOpt","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#v:printCookedOpt"},{"display_html":"<a href=\"#v:printCooked\">printCooked</a> :: <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> ()","name":"printCooked","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#v:printCooked"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:LabelConstrs\">LabelConstrs</a> x = (<a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> x, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> x, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> x, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> x, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Ord\" title=\"Distribution.Compat.Prelude\">Ord</a> x)","name":"LabelConstrs","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:LabelConstrs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxLabel\">TxLabel</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxLabel\">TxLabel</a> :: <a href=\"Cooked-Skeleton.html#t:LabelConstrs\" title=\"Cooked.Skeleton\">LabelConstrs</a> x =&gt; x -&gt; <a href=\"Cooked-Skeleton.html#t:TxLabel\" title=\"Cooked.Skeleton\">TxLabel</a></li></ul>","name":"TxLabel TxLabel","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:TxLabel"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BalanceOutputPolicy\">BalanceOutputPolicy</a><ul class=\"subs\"><li>= <a href=\"#v:AdjustExistingOutput\">AdjustExistingOutput</a></li><li>| <a href=\"#v:DontAdjustExistingOutput\">DontAdjustExistingOutput</a></li></ul>","name":"BalanceOutputPolicy AdjustExistingOutput DontAdjustExistingOutput","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:BalanceOutputPolicy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FeePolicy\">FeePolicy</a><ul class=\"subs\"><li>= <a href=\"#v:AutoFeeComputation\">AutoFeeComputation</a></li><li>| <a href=\"#v:ManualFee\">ManualFee</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a></li></ul>","name":"FeePolicy AutoFeeComputation ManualFee","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:FeePolicy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BalancingPolicy\">BalancingPolicy</a><ul class=\"subs\"><li>= <a href=\"#v:BalanceWithFirstSigner\">BalanceWithFirstSigner</a></li><li>| <a href=\"#v:BalanceWith\">BalanceWith</a> <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a></li><li>| <a href=\"#v:DoNotBalance\">DoNotBalance</a></li></ul>","name":"BalancingPolicy BalanceWithFirstSigner BalanceWith DoNotBalance","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:BalancingPolicy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BalancingUtxos\">BalancingUtxos</a><ul class=\"subs\"><li>= <a href=\"#v:BalancingUtxosFromBalancingWallet\">BalancingUtxosFromBalancingWallet</a></li><li>| <a href=\"#v:BalancingUtxosFromSet\">BalancingUtxosFromSet</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>)</li></ul>","name":"BalancingUtxos BalancingUtxosFromBalancingWallet BalancingUtxosFromSet","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:BalancingUtxos"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:RawModTx\">RawModTx</a> = <a href=\"#v:RawModTxAfterBalancing\">RawModTxAfterBalancing</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:Tx\" title=\"Cardano.Api\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:Tx\" title=\"Cardano.Api\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>)","name":"RawModTx RawModTxAfterBalancing","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:RawModTx"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:EmulatorParamsModification\">EmulatorParamsModification</a> = <a href=\"#v:EmulatorParamsModification\">EmulatorParamsModification</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a>)","name":"EmulatorParamsModification EmulatorParamsModification","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:EmulatorParamsModification"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CollateralUtxos\">CollateralUtxos</a><ul class=\"subs\"><li>= <a href=\"#v:CollateralUtxosFromBalancingWallet\">CollateralUtxosFromBalancingWallet</a></li><li>| <a href=\"#v:CollateralUtxosFromWallet\">CollateralUtxosFromWallet</a> <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a></li><li>| <a href=\"#v:CollateralUtxosFromSet\">CollateralUtxosFromSet</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>) <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a></li></ul>","name":"CollateralUtxos CollateralUtxosFromBalancingWallet CollateralUtxosFromWallet CollateralUtxosFromSet","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:CollateralUtxos"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AnchorResolution\">AnchorResolution</a><ul class=\"subs\"><li>= <a href=\"#v:AnchorResolutionLocal\">AnchorResolutionLocal</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> <a href=\"https://hackage.haskell.org/package/-/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a>)</li><li>| <a href=\"#v:AnchorResolutionHttp\">AnchorResolutionHttp</a></li></ul>","name":"AnchorResolution AnchorResolutionLocal AnchorResolutionHttp","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:AnchorResolution"},{"display_html":"<a href=\"#v:applyEmulatorParamsModification\">applyEmulatorParamsModification</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Skeleton.html#t:EmulatorParamsModification\" title=\"Cooked.Skeleton\">EmulatorParamsModification</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a>","name":"applyEmulatorParamsModification","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:applyEmulatorParamsModification"},{"display_html":"<a href=\"#v:applyRawModOnBalancedTx\">applyRawModOnBalancedTx</a> :: [<a href=\"Cooked-Skeleton.html#t:RawModTx\" title=\"Cooked.Skeleton\">RawModTx</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:Tx\" title=\"Cardano.Api\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:Tx\" title=\"Cardano.Api\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>","name":"applyRawModOnBalancedTx","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:applyRawModOnBalancedTx"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxOpts\">TxOpts</a> = <a href=\"#v:TxOpts\">TxOpts</a> {<ul class=\"subs\"><li><a href=\"#v:txOptEnsureMinAda\">txOptEnsureMinAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:txOptAutoSlotIncrease\">txOptAutoSlotIncrease</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:txOptUnsafeModTx\">txOptUnsafeModTx</a> :: [<a href=\"Cooked-Skeleton.html#t:RawModTx\" title=\"Cooked.Skeleton\">RawModTx</a>]</li><li><a href=\"#v:txOptBalancingPolicy\">txOptBalancingPolicy</a> :: <a href=\"Cooked-Skeleton.html#t:BalancingPolicy\" title=\"Cooked.Skeleton\">BalancingPolicy</a></li><li><a href=\"#v:txOptFeePolicy\">txOptFeePolicy</a> :: <a href=\"Cooked-Skeleton.html#t:FeePolicy\" title=\"Cooked.Skeleton\">FeePolicy</a></li><li><a href=\"#v:txOptBalanceOutputPolicy\">txOptBalanceOutputPolicy</a> :: <a href=\"Cooked-Skeleton.html#t:BalanceOutputPolicy\" title=\"Cooked.Skeleton\">BalanceOutputPolicy</a></li><li><a href=\"#v:txOptBalancingUtxos\">txOptBalancingUtxos</a> :: <a href=\"Cooked-Skeleton.html#t:BalancingUtxos\" title=\"Cooked.Skeleton\">BalancingUtxos</a></li><li><a href=\"#v:txOptEmulatorParamsModification\">txOptEmulatorParamsModification</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Skeleton.html#t:EmulatorParamsModification\" title=\"Cooked.Skeleton\">EmulatorParamsModification</a></li><li><a href=\"#v:txOptCollateralUtxos\">txOptCollateralUtxos</a> :: <a href=\"Cooked-Skeleton.html#t:CollateralUtxos\" title=\"Cooked.Skeleton\">CollateralUtxos</a></li><li><a href=\"#v:txOptAnchorResolution\">txOptAnchorResolution</a> :: <a href=\"Cooked-Skeleton.html#t:AnchorResolution\" title=\"Cooked.Skeleton\">AnchorResolution</a></li></ul>}","name":"TxOpts TxOpts txOptEmulatorParamsModification txOptEnsureMinAda txOptAutoSlotIncrease txOptUnsafeModTx txOptBalancingPolicy txOptFeePolicy txOptBalanceOutputPolicy txOptBalancingUtxos txOptCollateralUtxos txOptAnchorResolution","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:TxOpts"},{"display_html":"<a href=\"#v:txOptEnsureMinAdaL\">txOptEnsureMinAdaL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"txOptEnsureMinAdaL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txOptEnsureMinAdaL"},{"display_html":"<a href=\"#v:txOptUnsafeModTxL\">txOptUnsafeModTxL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a> [<a href=\"Cooked-Skeleton.html#t:RawModTx\" title=\"Cooked.Skeleton\">RawModTx</a>]","name":"txOptUnsafeModTxL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txOptUnsafeModTxL"},{"display_html":"<a href=\"#v:txOptAutoSlotIncreaseL\">txOptAutoSlotIncreaseL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"txOptAutoSlotIncreaseL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txOptAutoSlotIncreaseL"},{"display_html":"<a href=\"#v:txOptBalancingPolicyL\">txOptBalancingPolicyL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a> <a href=\"Cooked-Skeleton.html#t:BalancingPolicy\" title=\"Cooked.Skeleton\">BalancingPolicy</a>","name":"txOptBalancingPolicyL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txOptBalancingPolicyL"},{"display_html":"<a href=\"#v:txOptBalanceOutputPolicyL\">txOptBalanceOutputPolicyL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a> <a href=\"Cooked-Skeleton.html#t:BalanceOutputPolicy\" title=\"Cooked.Skeleton\">BalanceOutputPolicy</a>","name":"txOptBalanceOutputPolicyL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txOptBalanceOutputPolicyL"},{"display_html":"<a href=\"#v:txOptFeePolicyL\">txOptFeePolicyL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a> <a href=\"Cooked-Skeleton.html#t:FeePolicy\" title=\"Cooked.Skeleton\">FeePolicy</a>","name":"txOptFeePolicyL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txOptFeePolicyL"},{"display_html":"<a href=\"#v:txOptBalancingUtxosL\">txOptBalancingUtxosL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a> <a href=\"Cooked-Skeleton.html#t:BalancingUtxos\" title=\"Cooked.Skeleton\">BalancingUtxos</a>","name":"txOptBalancingUtxosL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txOptBalancingUtxosL"},{"display_html":"<a href=\"#v:txOptEmulatorParamsModificationL\">txOptEmulatorParamsModificationL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Skeleton.html#t:EmulatorParamsModification\" title=\"Cooked.Skeleton\">EmulatorParamsModification</a>)","name":"txOptEmulatorParamsModificationL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txOptEmulatorParamsModificationL"},{"display_html":"<a href=\"#v:txOptCollateralUtxosL\">txOptCollateralUtxosL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a> <a href=\"Cooked-Skeleton.html#t:CollateralUtxos\" title=\"Cooked.Skeleton\">CollateralUtxos</a>","name":"txOptCollateralUtxosL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txOptCollateralUtxosL"},{"display_html":"<a href=\"#v:txOptAnchorResolutionL\">txOptAnchorResolutionL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a> <a href=\"Cooked-Skeleton.html#t:AnchorResolution\" title=\"Cooked.Skeleton\">AnchorResolution</a>","name":"txOptAnchorResolutionL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txOptAnchorResolutionL"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TxSkelMints\">TxSkelMints</a> = <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>) (<a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Data-Map-NonEmpty.html#t:NEMap\" title=\"Data.Map.NonEmpty\">NEMap</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck-Modifiers.html#t:NonZero\" title=\"Test.QuickCheck.Modifiers\">NonZero</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>))","name":"TxSkelMints","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:TxSkelMints"},{"display_html":"<a href=\"#v:addToTxSkelMints\">addToTxSkelMints</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>) -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelMints\" title=\"Cooked.Skeleton\">TxSkelMints</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelMints\" title=\"Cooked.Skeleton\">TxSkelMints</a>","name":"addToTxSkelMints","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:addToTxSkelMints"},{"display_html":"<a href=\"#v:txSkelMintsToList\">txSkelMintsToList</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelMints\" title=\"Cooked.Skeleton\">TxSkelMints</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)]","name":"txSkelMintsToList","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelMintsToList"},{"display_html":"<a href=\"#v:txSkelMintsFromList\">txSkelMintsFromList</a> :: [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)] -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelMints\" title=\"Cooked.Skeleton\">TxSkelMints</a>","name":"txSkelMintsFromList","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelMintsFromList"},{"display_html":"<a href=\"#v:txSkelMintsValue\">txSkelMintsValue</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelMints\" title=\"Cooked.Skeleton\">TxSkelMints</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelMintsValue","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelMintsValue"},{"display_html":"<a href=\"#v:txSkelOutValueL\">txSkelOutValueL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelOutValueL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelOutValueL"},{"display_html":"<a href=\"#v:txSkelOutDatumL\">txSkelOutDatumL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a>","name":"txSkelOutDatumL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelOutDatumL"},{"display_html":"<a href=\"#v:txSkelOutValue\">txSkelOutValue</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelOutValue","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelOutValue"},{"display_html":"<a href=\"#v:txSkelOutValidator\">txSkelOutValidator</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>)","name":"txSkelOutValidator","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelOutValidator"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TxSkelOutDatumConstrs\">TxSkelOutDatumConstrs</a> a = (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Eq.html#t:Eq\" title=\"PlutusTx.Eq\">Eq</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a)","name":"TxSkelOutDatumConstrs","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:TxSkelOutDatumConstrs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelOutDatum\">TxSkelOutDatum</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkelOutNoDatum\">TxSkelOutNoDatum</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a></li><li><a href=\"#v:TxSkelOutDatumHash\">TxSkelOutDatumHash</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatumConstrs\" title=\"Cooked.Skeleton\">TxSkelOutDatumConstrs</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a></li><li><a href=\"#v:TxSkelOutDatum\">TxSkelOutDatum</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatumConstrs\" title=\"Cooked.Skeleton\">TxSkelOutDatumConstrs</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a></li><li><a href=\"#v:TxSkelOutInlineDatum\">TxSkelOutInlineDatum</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatumConstrs\" title=\"Cooked.Skeleton\">TxSkelOutDatumConstrs</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a></li></ul>","name":"TxSkelOutDatum TxSkelOutDatum TxSkelOutNoDatum TxSkelOutDatumHash TxSkelOutInlineDatum","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:TxSkelOutDatum"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelOut\">TxSkelOut</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:Pays\">Pays</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> o, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> o, <a href=\"Cooked-Output.html#t:IsTxInfoOutput\" title=\"Cooked.Output\">IsTxInfoOutput</a> o, IsTxSkelOutAllowedOwner (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> o), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> o), <a href=\"Cooked-Conversion-ToCredential.html#t:ToCredential\" title=\"Cooked.Conversion.ToCredential\">ToCredential</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> o), <a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> o <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:-126-\" title=\"Distribution.Compat.Prelude\">~</a> <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a>, <a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> o <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:-126-\" title=\"Distribution.Compat.Prelude\">~</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>, <a href=\"Cooked-Conversion-ToScript.html#t:ToScript\" title=\"Cooked.Conversion.ToScript\">ToScript</a> (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> o), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> o), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> o), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> o)) =&gt; {..} -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a></li></ul>","name":"TxSkelOut Pays producedOutput","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:TxSkelOut"},{"display_html":"<a href=\"#v:txSkelOutTypedDatum\">txSkelOutTypedDatum</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:FromData\" title=\"PlutusLedgerApi.V1\">FromData</a> a =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a","name":"txSkelOutTypedDatum","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelOutTypedDatum"},{"display_html":"<a href=\"#v:txSkelOutUntypedDatum\">txSkelOutUntypedDatum</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a>","name":"txSkelOutUntypedDatum","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelOutUntypedDatum"},{"display_html":"<a href=\"#v:paysPK\">paysPK</a> :: <a href=\"Cooked-Conversion-ToPubKeyHash.html#t:ToPubKeyHash\" title=\"Cooked.Conversion.ToPubKeyHash\">ToPubKeyHash</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>","name":"paysPK","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:paysPK"},{"display_html":"<a href=\"#v:paysScript\">paysScript</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Eq.html#t:Eq\" title=\"PlutusTx.Eq\">Eq</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:TypedValidator\" title=\"Ledger.Typed.Scripts\">TypedValidator</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>","name":"paysScript","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:paysScript"},{"display_html":"<a href=\"#v:paysScriptInlineDatum\">paysScriptInlineDatum</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Eq.html#t:Eq\" title=\"PlutusTx.Eq\">Eq</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:TypedValidator\" title=\"Ledger.Typed.Scripts\">TypedValidator</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>","name":"paysScriptInlineDatum","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:paysScriptInlineDatum"},{"display_html":"<a href=\"#v:paysScriptDatumHash\">paysScriptDatumHash</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Eq.html#t:Eq\" title=\"PlutusTx.Eq\">Eq</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:TypedValidator\" title=\"Ledger.Typed.Scripts\">TypedValidator</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>","name":"paysScriptDatumHash","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:paysScriptDatumHash"},{"display_html":"<a href=\"#v:paysScriptNoDatum\">paysScriptNoDatum</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:TypedValidator\" title=\"Ledger.Typed.Scripts\">TypedValidator</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>","name":"paysScriptNoDatum","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:paysScriptNoDatum"},{"display_html":"<a href=\"#v:withDatum\">withDatum</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Eq.html#t:Eq\" title=\"PlutusTx.Eq\">Eq</a> a, <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> a) =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>","name":"withDatum","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:withDatum"},{"display_html":"<a href=\"#v:withInlineDatum\">withInlineDatum</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Eq.html#t:Eq\" title=\"PlutusTx.Eq\">Eq</a> a, <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> a) =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>","name":"withInlineDatum","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:withInlineDatum"},{"display_html":"<a href=\"#v:withDatumHash\">withDatumHash</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Eq.html#t:Eq\" title=\"PlutusTx.Eq\">Eq</a> a, <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> a) =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>","name":"withDatumHash","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:withDatumHash"},{"display_html":"<a href=\"#v:withReferenceScript\">withReferenceScript</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> script, <a href=\"Cooked-Conversion-ToScript.html#t:ToScript\" title=\"Cooked.Conversion.ToScript\">ToScript</a> script, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> script, <a href=\"Cooked-Conversion-ToScriptHash.html#t:ToScriptHash\" title=\"Cooked.Conversion.ToScriptHash\">ToScriptHash</a> script) =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; script -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>","name":"withReferenceScript","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:withReferenceScript"},{"display_html":"<a href=\"#v:withStakingCredential\">withStakingCredential</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:StakingCredential\" title=\"Ledger\">StakingCredential</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>","name":"withStakingCredential","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:withStakingCredential"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelRedeemer\">TxSkelRedeemer</a> = <a href=\"#v:TxSkelRedeemer\">TxSkelRedeemer</a> {<ul class=\"subs\"><li><a href=\"#v:txSkelRedeemer\">txSkelRedeemer</a> :: <a href=\"Cooked-Skeleton.html#t:Redeemer\" title=\"Cooked.Skeleton\">Redeemer</a></li><li><a href=\"#v:txSkelReferenceScript\">txSkelReferenceScript</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a></li></ul>}","name":"TxSkelRedeemer TxSkelRedeemer txSkelRedeemer txSkelReferenceScript","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:TxSkelRedeemer"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Redeemer\">Redeemer</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:EmptyRedeemer\">EmptyRedeemer</a> :: <a href=\"Cooked-Skeleton.html#t:Redeemer\" title=\"Cooked.Skeleton\">Redeemer</a></li><li><a href=\"#v:SomeRedeemer\">SomeRedeemer</a> :: RedeemerConstrs redeemer =&gt; redeemer -&gt; <a href=\"Cooked-Skeleton.html#t:Redeemer\" title=\"Cooked.Skeleton\">Redeemer</a></li></ul>","name":"Redeemer EmptyRedeemer SomeRedeemer","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:Redeemer"},{"display_html":"<a href=\"#v:txSkelTypedRedeemer\">txSkelTypedRedeemer</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:FromData\" title=\"PlutusLedgerApi.V1\">FromData</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:RedeemerType\" title=\"Ledger.Typed.Scripts\">RedeemerType</a> a) =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:RedeemerType\" title=\"Ledger.Typed.Scripts\">RedeemerType</a> a)","name":"txSkelTypedRedeemer","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelTypedRedeemer"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxParameterChange\">TxParameterChange</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:FeePerByte\">FeePerByte</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:FeeFixed\">FeeFixed</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:MaxBlockBodySize\">MaxBlockBodySize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:MaxTxSize\">MaxTxSize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:MaxBlockHeaderSize\">MaxBlockHeaderSize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:KeyDeposit\">KeyDeposit</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:PoolDeposit\">PoolDeposit</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:PoolRetirementMaxEpoch\">PoolRetirementMaxEpoch</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:PoolNumber\">PoolNumber</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:PoolInfluence\">PoolInfluence</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Rational\" title=\"Distribution.Compat.Prelude\">Rational</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:MonetaryExpansion\">MonetaryExpansion</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Rational\" title=\"Distribution.Compat.Prelude\">Rational</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:TreasuryCut\">TreasuryCut</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Rational\" title=\"Distribution.Compat.Prelude\">Rational</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:MinPoolCost\">MinPoolCost</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:CoinsPerUTxOByte\">CoinsPerUTxOByte</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:CostModels\">CostModels</a> :: {..} -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:Prices\">Prices</a> :: {..} -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:MaxTxExUnits\">MaxTxExUnits</a> :: {..} -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:MaxBlockExUnits\">MaxBlockExUnits</a> :: {..} -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:MaxValSize\">MaxValSize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:CollateralPercentage\">CollateralPercentage</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:MaxCollateralInputs\">MaxCollateralInputs</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:PoolVotingThresholds\">PoolVotingThresholds</a> :: {..} -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:DRepVotingThresholds\">DRepVotingThresholds</a> :: {..} -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:CommitteeMinSize\">CommitteeMinSize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:CommitteeMaxTermLength\">CommitteeMaxTermLength</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:GovActionLifetime\">GovActionLifetime</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:GovActionDeposit\">GovActionDeposit</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:DRepRegistrationDeposit\">DRepRegistrationDeposit</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li><li><a href=\"#v:DRepActivity\">DRepActivity</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a></li></ul>","name":"TxParameterChange CostModels Prices DRepVotingThresholds PoolVotingThresholds FeePerByte FeeFixed MaxBlockBodySize MaxTxSize MaxBlockHeaderSize KeyDeposit PoolDeposit PoolRetirementMaxEpoch PoolNumber PoolInfluence MonetaryExpansion TreasuryCut MinPoolCost CoinsPerUTxOByte MaxTxExUnits MaxBlockExUnits MaxValSize CollateralPercentage MaxCollateralInputs CommitteeMinSize CommitteeMaxTermLength GovActionLifetime GovActionDeposit DRepRegistrationDeposit DRepActivity pvtMotionNoConfidence pvtCommitteeNormal pvtCommitteeNoConfidence cmPlutusV1Costs cmPlutusV2Costs cmPlutusV3Costs pMemoryCost pStepCost mteuMemory mteuSteps mbeuMemory mbeuSteps pvtHardFork pvtSecurityGroup drvtMotionNoConfidence drvtCommitteeNormal drvtCommitteeNoConfidence drvtUpdateConstitution drvtHardForkInitialization drvtNetworkGroup drvtEconomicGroup drvtTechnicalGroup drvtGovernanceGroup drvtTreasuryWithdrawal","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:TxParameterChange"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxGovAction\">TxGovAction</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxGovActionParameterChange\">TxGovActionParameterChange</a> :: [<a href=\"Cooked-Skeleton.html#t:TxParameterChange\" title=\"Cooked.Skeleton\">TxParameterChange</a>] -&gt; <a href=\"Cooked-Skeleton.html#t:TxGovAction\" title=\"Cooked.Skeleton\">TxGovAction</a></li><li><a href=\"#v:TxGovActionHardForkInitiation\">TxGovActionHardForkInitiation</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Contexts.html#t:ProtocolVersion\" title=\"PlutusLedgerApi.V3.Contexts\">ProtocolVersion</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxGovAction\" title=\"Cooked.Skeleton\">TxGovAction</a></li><li><a href=\"#v:TxGovActionTreasuryWithdrawals\">TxGovActionTreasuryWithdrawals</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxGovAction\" title=\"Cooked.Skeleton\">TxGovAction</a></li><li><a href=\"#v:TxGovActionNoConfidence\">TxGovActionNoConfidence</a> :: <a href=\"Cooked-Skeleton.html#t:TxGovAction\" title=\"Cooked.Skeleton\">TxGovAction</a></li><li><a href=\"#v:TxGovActionUpdateCommittee\">TxGovActionUpdateCommittee</a> :: [<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Contexts.html#t:ColdCommitteeCredential\" title=\"PlutusLedgerApi.V3.Contexts\">ColdCommitteeCredential</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Contexts.html#t:ColdCommitteeCredential\" title=\"PlutusLedgerApi.V3.Contexts\">ColdCommitteeCredential</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3.html#t:Rational\" title=\"PlutusLedgerApi.V3\">Rational</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxGovAction\" title=\"Cooked.Skeleton\">TxGovAction</a></li><li><a href=\"#v:TxGovActionNewConstitution\">TxGovActionNewConstitution</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Contexts.html#t:Constitution\" title=\"PlutusLedgerApi.V3.Contexts\">Constitution</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxGovAction\" title=\"Cooked.Skeleton\">TxGovAction</a></li></ul>","name":"TxGovAction TxGovActionParameterChange TxGovActionHardForkInitiation TxGovActionTreasuryWithdrawals TxGovActionNoConfidence TxGovActionUpdateCommittee TxGovActionNewConstitution","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:TxGovAction"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelProposal\">TxSkelProposal</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkelProposal\">TxSkelProposal</a> :: {..} -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelProposal\" title=\"Cooked.Skeleton\">TxSkelProposal</a></li></ul>","name":"TxSkelProposal TxSkelProposal txSkelProposalAddress txSkelProposalAction txSkelProposalWitness txSkelProposalAnchor","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:TxSkelProposal"},{"display_html":"<a href=\"#v:txSkelProposalsL\">txSkelProposalsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> [<a href=\"Cooked-Skeleton.html#t:TxSkelProposal\" title=\"Cooked.Skeleton\">TxSkelProposal</a>]","name":"txSkelProposalsL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelProposalsL"},{"display_html":"<a href=\"#v:txSkelProposalAddressL\">txSkelProposalAddressL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkelProposal\" title=\"Cooked.Skeleton\">TxSkelProposal</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a>","name":"txSkelProposalAddressL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelProposalAddressL"},{"display_html":"<a href=\"#v:txSkelProposalActionL\">txSkelProposalActionL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkelProposal\" title=\"Cooked.Skeleton\">TxSkelProposal</a> <a href=\"Cooked-Skeleton.html#t:TxGovAction\" title=\"Cooked.Skeleton\">TxGovAction</a>","name":"txSkelProposalActionL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelProposalActionL"},{"display_html":"<a href=\"#v:txSkelProposalWitnessL\">txSkelProposalWitnessL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkelProposal\" title=\"Cooked.Skeleton\">TxSkelProposal</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>))","name":"txSkelProposalWitnessL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelProposalWitnessL"},{"display_html":"<a href=\"#v:txSkelProposalAnchorL\">txSkelProposalAnchorL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkelProposal\" title=\"Cooked.Skeleton\">TxSkelProposal</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>)","name":"txSkelProposalAnchorL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelProposalAnchorL"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkel\">TxSkel</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkel\">TxSkel</a> :: {..} -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a></li></ul>","name":"TxSkel TxSkel txSkelLabel txSkelOpts txSkelMints txSkelSigners txSkelValidityRange txSkelIns txSkelInsReference txSkelOuts txSkelProposals","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:TxSkel"},{"display_html":"<a href=\"#v:txSkelLabelL\">txSkelLabelL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"Cooked-Skeleton.html#t:TxLabel\" title=\"Cooked.Skeleton\">TxLabel</a>)","name":"txSkelLabelL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelLabelL"},{"display_html":"<a href=\"#v:txSkelOptsL\">txSkelOptsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a>","name":"txSkelOptsL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelOptsL"},{"display_html":"<a href=\"#v:txSkelMintsL\">txSkelMintsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> <a href=\"Cooked-Skeleton.html#t:TxSkelMints\" title=\"Cooked.Skeleton\">TxSkelMints</a>","name":"txSkelMintsL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelMintsL"},{"display_html":"<a href=\"#v:txSkelValidityRangeL\">txSkelValidityRangeL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"txSkelValidityRangeL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelValidityRangeL"},{"display_html":"<a href=\"#v:txSkelSignersL\">txSkelSignersL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"txSkelSignersL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelSignersL"},{"display_html":"<a href=\"#v:txSkelInsL\">txSkelInsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>)","name":"txSkelInsL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelInsL"},{"display_html":"<a href=\"#v:txSkelInsReferenceL\">txSkelInsReferenceL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>)","name":"txSkelInsReferenceL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelInsReferenceL"},{"display_html":"<a href=\"#v:txSkelOutsL\">txSkelOutsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> [<a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>]","name":"txSkelOutsL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelOutsL"},{"display_html":"<a href=\"#v:txSkelTemplate\">txSkelTemplate</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>","name":"txSkelTemplate","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelTemplate"},{"display_html":"<a href=\"#v:txSkelDataInOutputs\">txSkelDataInOutputs</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a>","name":"txSkelDataInOutputs","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelDataInOutputs"},{"display_html":"<a href=\"#v:txSkelValidatorsInOutputs\">txSkelValidatorsInOutputs</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>)","name":"txSkelValidatorsInOutputs","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelValidatorsInOutputs"},{"display_html":"<a href=\"#v:txSkelOutOwnerTypeP\">txSkelOutOwnerTypeP</a> :: <span class=\"keyword\">forall</span> ownerType. (<a href=\"Cooked-Conversion-ToCredential.html#t:ToCredential\" title=\"Cooked.Conversion.ToCredential\">ToCredential</a> ownerType, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> ownerType, IsTxSkelOutAllowedOwner ownerType, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> ownerType) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> ownerType <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>))","name":"txSkelOutOwnerTypeP","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelOutOwnerTypeP"},{"display_html":"<a href=\"#v:txSkelOutputDatumTypeAT\">txSkelOutputDatumTypeAT</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:FromData\" title=\"PlutusLedgerApi.V1\">FromData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal-39-\" title=\"Optics.AffineTraversal\">AffineTraversal'</a> <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> a","name":"txSkelOutputDatumTypeAT","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelOutputDatumTypeAT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SkelContext\">SkelContext</a> = <a href=\"#v:SkelContext\">SkelContext</a> {<ul class=\"subs\"><li><a href=\"#v:skelContextTxOuts\">skelContextTxOuts</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a></li><li><a href=\"#v:skelContextTxSkelOutDatums\">skelContextTxSkelOutDatums</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a></li></ul>}","name":"SkelContext SkelContext skelContextTxOuts skelContextTxSkelOutDatums","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:SkelContext"},{"display_html":"<a href=\"#v:txSkelKnownTxOutRefs\">txSkelKnownTxOutRefs</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>]","name":"txSkelKnownTxOutRefs","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelKnownTxOutRefs"},{"display_html":"<a href=\"#v:simpleTxSkelProposal\">simpleTxSkelProposal</a> :: <a href=\"Cooked-Conversion-ToAddress.html#t:ToAddress\" title=\"Cooked.Conversion.ToAddress\">ToAddress</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton.html#t:TxGovAction\" title=\"Cooked.Skeleton\">TxGovAction</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelProposal\" title=\"Cooked.Skeleton\">TxSkelProposal</a>","name":"simpleTxSkelProposal","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:simpleTxSkelProposal"},{"display_html":"<a href=\"#v:withWitness\">withWitness</a> :: <a href=\"Cooked-Conversion-ToScript.html#t:ToScript\" title=\"Cooked.Conversion.ToScript\">ToScript</a> a =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelProposal\" title=\"Cooked.Skeleton\">TxSkelProposal</a> -&gt; (a, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>) -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelProposal\" title=\"Cooked.Skeleton\">TxSkelProposal</a>","name":"withWitness","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:withWitness"},{"display_html":"<a href=\"#v:withAnchor\">withAnchor</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelProposal\" title=\"Cooked.Skeleton\">TxSkelProposal</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelProposal\" title=\"Cooked.Skeleton\">TxSkelProposal</a>","name":"withAnchor","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:withAnchor"},{"display_html":"<a href=\"#v:txSkelValueInOutputs\">txSkelValueInOutputs</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelValueInOutputs","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelValueInOutputs"},{"display_html":"<a href=\"#v:txSkelReferenceScripts\">txSkelReferenceScripts</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>)","name":"txSkelReferenceScripts","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelReferenceScripts"},{"display_html":"<a href=\"#v:txSkelReferenceTxOutRefs\">txSkelReferenceTxOutRefs</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>]","name":"txSkelReferenceTxOutRefs","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelReferenceTxOutRefs"},{"display_html":"<a href=\"#v:txSkelSomeRedeemer\">txSkelSomeRedeemer</a> :: RedeemerConstrs redeemer =&gt; redeemer -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>","name":"txSkelSomeRedeemer","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelSomeRedeemer"},{"display_html":"<a href=\"#v:txSkelEmptyRedeemer\">txSkelEmptyRedeemer</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>","name":"txSkelEmptyRedeemer","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelEmptyRedeemer"},{"display_html":"<a href=\"#v:txSkelSomeRedeemerAndReferenceScript\">txSkelSomeRedeemerAndReferenceScript</a> :: RedeemerConstrs redeemer =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; redeemer -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>","name":"txSkelSomeRedeemerAndReferenceScript","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelSomeRedeemerAndReferenceScript"},{"display_html":"<a href=\"#v:txSkelEmptyRedeemerAndReferenceScript\">txSkelEmptyRedeemerAndReferenceScript</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>","name":"txSkelEmptyRedeemerAndReferenceScript","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelEmptyRedeemerAndReferenceScript"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:UtxoState\">UtxoState</a> = <a href=\"#v:UtxoState\">UtxoState</a> {<ul class=\"subs\"><li><a href=\"#v:utxoState\">utxoState</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a> <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayloadSet\" title=\"Cooked.MockChain.UtxoState\">UtxoPayloadSet</a></li></ul>}","name":"UtxoState UtxoState utxoState","module":"Cooked.MockChain.UtxoState","link":"Cooked-MockChain-UtxoState.html#t:UtxoState"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:UtxoPayloadSet\">UtxoPayloadSet</a> = <a href=\"#v:UtxoPayloadSet\">UtxoPayloadSet</a> {<ul class=\"subs\"><li><a href=\"#v:utxoPayloadSet\">utxoPayloadSet</a> :: [<a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a>]</li></ul>}","name":"UtxoPayloadSet UtxoPayloadSet utxoPayloadSet","module":"Cooked.MockChain.UtxoState","link":"Cooked-MockChain-UtxoState.html#t:UtxoPayloadSet"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UtxoPayload\">UtxoPayload</a> = <a href=\"#v:UtxoPayload\">UtxoPayload</a> {<ul class=\"subs\"><li><a href=\"#v:utxoPayloadTxOutRef\">utxoPayloadTxOutRef</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a></li><li><a href=\"#v:utxoPayloadValue\">utxoPayloadValue</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a></li><li><a href=\"#v:utxoPayloadSkelOutDatum\">utxoPayloadSkelOutDatum</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a></li><li><a href=\"#v:utxoPayloadReferenceScript\">utxoPayloadReferenceScript</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a></li></ul>}","name":"UtxoPayload UtxoPayload utxoPayloadTxOutRef utxoPayloadValue utxoPayloadSkelOutDatum utxoPayloadReferenceScript","module":"Cooked.MockChain.UtxoState","link":"Cooked-MockChain-UtxoState.html#t:UtxoPayload"},{"display_html":"<a href=\"#v:holdsInState\">holdsInState</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"holdsInState","module":"Cooked.MockChain.UtxoState","link":"Cooked-MockChain-UtxoState.html#v:holdsInState"},{"display_html":"<a href=\"#v:toRewardAccount\">toRewardAccount</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a> -&gt; WitnessGen (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Ledger-Api-Tx-Address.html#t:RewardAcnt\" title=\"Cardano.Ledger.Api.Tx.Address\">RewardAcnt</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Ledger-Api-Era.html#t:StandardCrypto\" title=\"Cardano.Ledger.Api.Era\">StandardCrypto</a>)","name":"toRewardAccount","module":"Cooked.MockChain.GenerateTx.Witness","link":"Cooked-MockChain-GenerateTx-Witness.html#v:toRewardAccount"},{"display_html":"<a href=\"#v:toScriptWitness\">toScriptWitness</a> :: <a href=\"Cooked-Conversion-ToScript.html#t:ToScript\" title=\"Cooked.Conversion.ToScript\">ToScript</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ScriptDatum\" title=\"Cardano.Api\">ScriptDatum</a> b -&gt; WitnessGen (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ScriptWitness\" title=\"Cardano.Api\">ScriptWitness</a> b <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>)","name":"toScriptWitness","module":"Cooked.MockChain.GenerateTx.Witness","link":"Cooked-MockChain-GenerateTx-Witness.html#v:toScriptWitness"},{"display_html":"<a href=\"#v:toMintValue\">toMintValue</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelMints\" title=\"Cooked.Skeleton\">TxSkelMints</a> -&gt; MintGen (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:TxMintValue\" title=\"Cardano.Api\">TxMintValue</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:BuildTx\" title=\"Cardano.Api\">BuildTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>)","name":"toMintValue","module":"Cooked.MockChain.GenerateTx.Mint","link":"Cooked-MockChain-GenerateTx-Mint.html#v:toMintValue"},{"display_html":"<a href=\"#v:toTxInAndWitness\">toTxInAndWitness</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>) -&gt; InputGen (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:TxIn\" title=\"Cardano.Api\">TxIn</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:BuildTxWith\" title=\"Cardano.Api\">BuildTxWith</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:BuildTx\" title=\"Cardano.Api\">BuildTx</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:Witness\" title=\"Cardano.Api\">Witness</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:WitCtxTxIn\" title=\"Cardano.Api\">WitCtxTxIn</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>))","name":"toTxInAndWitness","module":"Cooked.MockChain.GenerateTx.Input","link":"Cooked-MockChain-GenerateTx-Input.html#v:toTxInAndWitness"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:InputContext\">InputContext</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:InputContext\">InputContext</a> :: {..} -&gt; <a href=\"Cooked-MockChain-GenerateTx-Input.html#t:InputContext\" title=\"Cooked.MockChain.GenerateTx.Input\">InputContext</a></li></ul>","name":"InputContext InputContext managedData managedTxOuts managedValidators","module":"Cooked.MockChain.GenerateTx.Input","link":"Cooked-MockChain-GenerateTx-Input.html#t:InputContext"},{"display_html":"<a href=\"#v:toProposalProcedures\">toProposalProcedures</a> :: [<a href=\"Cooked-Skeleton.html#t:TxSkelProposal\" title=\"Cooked.Skeleton\">TxSkelProposal</a>] -&gt; <a href=\"Cooked-Skeleton.html#t:AnchorResolution\" title=\"Cooked.Skeleton\">AnchorResolution</a> -&gt; ProposalGen (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:TxProposalProcedures\" title=\"Cardano.Api\">TxProposalProcedures</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:BuildTx\" title=\"Cardano.Api\">BuildTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>)","name":"toProposalProcedures","module":"Cooked.MockChain.GenerateTx.Proposal","link":"Cooked-MockChain-GenerateTx-Proposal.html#v:toProposalProcedures"},{"display_html":"<a href=\"#v:toCardanoTxOut\">toCardanoTxOut</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; OutputGen (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:TxOut\" title=\"Cardano.Api\">TxOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:CtxTx\" title=\"Cardano.Api\">CtxTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>)","name":"toCardanoTxOut","module":"Cooked.MockChain.GenerateTx.Output","link":"Cooked-MockChain-GenerateTx-Output.html#v:toCardanoTxOut"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CollateralContext\">CollateralContext</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:CollateralContext\">CollateralContext</a> :: {..} -&gt; <a href=\"Cooked-MockChain-GenerateTx-Collateral.html#t:CollateralContext\" title=\"Cooked.MockChain.GenerateTx.Collateral\">CollateralContext</a></li></ul>","name":"CollateralContext returnCollateralWallet collateralIns managedTxOuts fee params CollateralContext","module":"Cooked.MockChain.GenerateTx.Collateral","link":"Cooked-MockChain-GenerateTx-Collateral.html#t:CollateralContext"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CollateralGen\">CollateralGen</a> a = <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:TxGen\" title=\"Cooked.MockChain.GenerateTx.Common\">TxGen</a> <a href=\"Cooked-MockChain-GenerateTx-Collateral.html#t:CollateralContext\" title=\"Cooked.MockChain.GenerateTx.Collateral\">CollateralContext</a> a","name":"CollateralGen","module":"Cooked.MockChain.GenerateTx.Collateral","link":"Cooked-MockChain-GenerateTx-Collateral.html#t:CollateralGen"},{"display_html":"<a href=\"#v:toCollateralTriplet\">toCollateralTriplet</a> :: <a href=\"Cooked-MockChain-GenerateTx-Collateral.html#t:CollateralGen\" title=\"Cooked.MockChain.GenerateTx.Collateral\">CollateralGen</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:TxInsCollateral\" title=\"Cardano.Api\">TxInsCollateral</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:TxTotalCollateral\" title=\"Cardano.Api\">TxTotalCollateral</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:TxReturnCollateral\" title=\"Cardano.Api\">TxReturnCollateral</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:CtxTx\" title=\"Cardano.Api\">CtxTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>)","name":"toCollateralTriplet","module":"Cooked.MockChain.GenerateTx.Collateral","link":"Cooked-MockChain-GenerateTx-Collateral.html#v:toCollateralTriplet"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxContext\">TxContext</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxContext\">TxContext</a> :: {..} -&gt; <a href=\"Cooked-MockChain-GenerateTx-Body.html#t:TxContext\" title=\"Cooked.MockChain.GenerateTx.Body\">TxContext</a></li></ul>","name":"TxContext returnCollateralWallet collateralIns managedValidators managedTxOuts managedData fee params TxContext","module":"Cooked.MockChain.GenerateTx.Body","link":"Cooked-MockChain-GenerateTx-Body.html#t:TxContext"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:BodyGen\">BodyGen</a> a = <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:TxGen\" title=\"Cooked.MockChain.GenerateTx.Common\">TxGen</a> <a href=\"Cooked-MockChain-GenerateTx-Body.html#t:TxContext\" title=\"Cooked.MockChain.GenerateTx.Body\">TxContext</a> a","name":"BodyGen","module":"Cooked.MockChain.GenerateTx.Body","link":"Cooked-MockChain-GenerateTx-Body.html#t:BodyGen"},{"display_html":"<a href=\"#v:txSkelToBodyContent\">txSkelToBodyContent</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"Cooked-MockChain-GenerateTx-Body.html#t:BodyGen\" title=\"Cooked.MockChain.GenerateTx.Body\">BodyGen</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:TxBodyContent\" title=\"Cardano.Api\">TxBodyContent</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:BuildTx\" title=\"Cardano.Api\">BuildTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>)","name":"txSkelToBodyContent","module":"Cooked.MockChain.GenerateTx.Body","link":"Cooked-MockChain-GenerateTx-Body.html#v:txSkelToBodyContent"},{"display_html":"<a href=\"#v:txSkelToCardanoTx\">txSkelToCardanoTx</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"Cooked-MockChain-GenerateTx-Body.html#t:BodyGen\" title=\"Cooked.MockChain.GenerateTx.Body\">BodyGen</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:Tx\" title=\"Cardano.Api\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>)","name":"txSkelToCardanoTx","module":"Cooked.MockChain.GenerateTx.Body","link":"Cooked-MockChain-GenerateTx-Body.html#v:txSkelToCardanoTx"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:GenerateTxError\">GenerateTxError</a><ul class=\"subs\"><li>= <a href=\"#v:ToCardanoError\">ToCardanoError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:ToCardanoError\" title=\"Ledger.Tx.CardanoAPI.Internal\">ToCardanoError</a></li><li>| <a href=\"#v:TxBodyError\">TxBodyError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:TxBodyError\" title=\"Cardano.Api\">TxBodyError</a></li><li>| <a href=\"#v:GenerateTxErrorGeneral\">GenerateTxErrorGeneral</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li></ul>","name":"GenerateTxError TxBodyError ToCardanoError GenerateTxErrorGeneral","module":"Cooked.MockChain.GenerateTx","link":"Cooked-MockChain-GenerateTx.html#t:GenerateTxError"},{"display_html":"<a href=\"#v:generateBodyContent\">generateBodyContent</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>) -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-GenerateTx.html#t:GenerateTxError\" title=\"Cooked.MockChain.GenerateTx\">GenerateTxError</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:TxBodyContent\" title=\"Cardano.Api\">TxBodyContent</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:BuildTx\" title=\"Cardano.Api\">BuildTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>)","name":"generateBodyContent","module":"Cooked.MockChain.GenerateTx","link":"Cooked-MockChain-GenerateTx.html#v:generateBodyContent"},{"display_html":"<a href=\"#v:generateTxOut\">generateTxOut</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:NetworkId\" title=\"Cardano.Api\">NetworkId</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-GenerateTx.html#t:GenerateTxError\" title=\"Cooked.MockChain.GenerateTx\">GenerateTxError</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:TxOut\" title=\"Cardano.Api\">TxOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:CtxTx\" title=\"Cardano.Api\">CtxTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>)","name":"generateTxOut","module":"Cooked.MockChain.GenerateTx","link":"Cooked-MockChain-GenerateTx.html#v:generateTxOut"},{"display_html":"<a href=\"#v:generateTx\">generateTx</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>) -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-GenerateTx.html#t:GenerateTxError\" title=\"Cooked.MockChain.GenerateTx\">GenerateTxError</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:Tx\" title=\"Cardano.Api\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ConwayEra\" title=\"Cardano.Api\">ConwayEra</a>)","name":"generateTx","module":"Cooked.MockChain.GenerateTx","link":"Cooked-MockChain-GenerateTx.html#v:generateTx"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainError\">MockChainError</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:MCEValidationError\">MCEValidationError</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:ValidationPhase\" title=\"Ledger.Index.Internal\">ValidationPhase</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:ValidationError\" title=\"Ledger.Index.Internal\">ValidationError</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a></li><li><a href=\"#v:MCEUnbalanceable\">MCEUnbalanceable</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a></li><li><a href=\"#v:MCENoSuitableCollateral\">MCENoSuitableCollateral</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a></li><li><a href=\"#v:MCEGenerationError\">MCEGenerationError</a> :: <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:GenerateTxError\" title=\"Cooked.MockChain.GenerateTx.Common\">GenerateTxError</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a></li><li><a href=\"#v:MCEUnknownOutRefError\">MCEUnknownOutRefError</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a></li><li><a href=\"#v:MCEUnknownValidator\">MCEUnknownValidator</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a></li><li><a href=\"#v:MCEUnknownDatum\">MCEUnknownDatum</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a></li><li><a href=\"#v:FailWith\">FailWith</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a></li></ul>","name":"MockChainError MCEValidationError MCEUnbalanceable MCENoSuitableCollateral MCEGenerationError MCEUnknownOutRefError MCEUnknownValidator MCEUnknownDatum FailWith","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#t:MockChainError"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-MonadFail.html#t:MonadFail\" title=\"Distribution.Compat.MonadFail\">MonadFail</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:MonadError\" title=\"Cardano.Prelude\">MonadError</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> m) =&gt; <a href=\"#t:MonadBlockChainBalancing\">MonadBlockChainBalancing</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:getParams\">getParams</a> :: m <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a></li><li><a href=\"#v:utxosAtLedger\">utxosAtLedger</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a> -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>)]</li><li><a href=\"#v:datumFromHash\">datumFromHash</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a>)</li><li><a href=\"#v:validatorFromHash\">validatorFromHash</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>))</li><li><a href=\"#v:txOutByRefLedger\">txOutByRefLedger</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>)</li></ul>","name":"MonadBlockChainBalancing getParams datumFromHash utxosAtLedger validatorFromHash txOutByRefLedger","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"#t:MonadBlockChainWithoutValidation\">MonadBlockChainWithoutValidation</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:allUtxosLedger\">allUtxosLedger</a> :: m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>)]</li><li><a href=\"#v:setParams\">setParams</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; m ()</li><li><a href=\"#v:currentSlot\">currentSlot</a> :: m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a></li><li><a href=\"#v:awaitSlot\">awaitSlot</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a></li></ul>","name":"MonadBlockChainWithoutValidation currentSlot awaitSlot allUtxosLedger setParams","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"#t:MonadBlockChain\">MonadBlockChain</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:validateTxSkel\">validateTxSkel</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a></li></ul>","name":"MonadBlockChain validateTxSkel","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#t:MonadBlockChain"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:AsTrans\">AsTrans</a> t (m :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:AsTrans\">AsTrans</a> {<ul class=\"subs\"><li><a href=\"#v:getTrans\">getTrans</a> :: t m a</li></ul>}","name":"AsTrans AsTrans getTrans","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#t:AsTrans"},{"display_html":"<a href=\"#v:allUtxos\">allUtxos</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)]","name":"allUtxos","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:allUtxos"},{"display_html":"<a href=\"#v:currentTime\">currentTime</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>)","name":"currentTime","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:currentTime"},{"display_html":"<a href=\"#v:waitNSlots\">waitNSlots</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitNSlots","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:waitNSlots"},{"display_html":"<a href=\"#v:utxosAt\">utxosAt</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a> -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)]","name":"utxosAt","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:utxosAt"},{"display_html":"<a href=\"#v:txOutByRef\">txOutByRef</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)","name":"txOutByRef","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txOutByRef"},{"display_html":"<a href=\"#v:utxosFromCardanoTx\">utxosFromCardanoTx</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)]","name":"utxosFromCardanoTx","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:utxosFromCardanoTx"},{"display_html":"<a href=\"#v:txOutV2FromLedger\">txOutV2FromLedger</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>","name":"txOutV2FromLedger","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txOutV2FromLedger"},{"display_html":"<a href=\"#v:typedDatumFromTxOutRef\">typedDatumFromTxOutRef</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:FromData\" title=\"PlutusLedgerApi.V1\">FromData</a> a, <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a)","name":"typedDatumFromTxOutRef","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:typedDatumFromTxOutRef"},{"display_html":"<a href=\"#v:valueFromTxOutRef\">valueFromTxOutRef</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>)","name":"valueFromTxOutRef","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:valueFromTxOutRef"},{"display_html":"<a href=\"#v:outputDatumFromTxOutRef\">outputDatumFromTxOutRef</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:OutputDatum\" title=\"PlutusLedgerApi.V2.Tx\">OutputDatum</a>)","name":"outputDatumFromTxOutRef","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:outputDatumFromTxOutRef"},{"display_html":"<a href=\"#v:datumFromTxOutRef\">datumFromTxOutRef</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a>)","name":"datumFromTxOutRef","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:datumFromTxOutRef"},{"display_html":"<a href=\"#v:resolveDatum\">resolveDatum</a> :: (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> out, <a href=\"Cooked-Conversion-ToOutputDatum.html#t:ToOutputDatum\" title=\"Cooked.Conversion.ToOutputDatum\">ToOutputDatum</a> (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out), <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m) =&gt; out -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a> (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out)))","name":"resolveDatum","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:resolveDatum"},{"display_html":"<a href=\"#v:resolveTypedDatum\">resolveTypedDatum</a> :: (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> out, <a href=\"Cooked-Conversion-ToOutputDatum.html#t:ToOutputDatum\" title=\"Cooked.Conversion.ToOutputDatum\">ToOutputDatum</a> (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out), <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:FromData\" title=\"PlutusLedgerApi.V1\">FromData</a> a) =&gt; out -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) a (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out)))","name":"resolveTypedDatum","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:resolveTypedDatum"},{"display_html":"<a href=\"#v:resolveValidator\">resolveValidator</a> :: (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> out, <a href=\"Cooked-Conversion-ToCredential.html#t:ToCredential\" title=\"Cooked.Conversion.ToCredential\">ToCredential</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out), <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m) =&gt; out -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>) (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out)))","name":"resolveValidator","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:resolveValidator"},{"display_html":"<a href=\"#v:resolveReferenceScript\">resolveReferenceScript</a> :: (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> out, <a href=\"Cooked-Conversion-ToScriptHash.html#t:ToScriptHash\" title=\"Cooked.Conversion.ToScriptHash\">ToScriptHash</a> (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out), <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m) =&gt; out -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>)))","name":"resolveReferenceScript","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:resolveReferenceScript"},{"display_html":"<a href=\"#v:getEnclosingSlot\">getEnclosingSlot</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"getEnclosingSlot","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:getEnclosingSlot"},{"display_html":"<a href=\"#v:awaitEnclosingSlot\">awaitEnclosingSlot</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"awaitEnclosingSlot","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:awaitEnclosingSlot"},{"display_html":"<a href=\"#v:slotRangeBefore\">slotRangeBefore</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"slotRangeBefore","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:slotRangeBefore"},{"display_html":"<a href=\"#v:slotRangeAfter\">slotRangeAfter</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"slotRangeAfter","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:slotRangeAfter"},{"display_html":"<a href=\"#v:slotToTimeInterval\">slotToTimeInterval</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>)","name":"slotToTimeInterval","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:slotToTimeInterval"},{"display_html":"<a href=\"#v:txSkelInputUtxosPl\">txSkelInputUtxosPl</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)","name":"txSkelInputUtxosPl","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txSkelInputUtxosPl"},{"display_html":"<a href=\"#v:txSkelInputUtxos\">txSkelInputUtxos</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>)","name":"txSkelInputUtxos","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txSkelInputUtxos"},{"display_html":"<a href=\"#v:txSkelReferenceInputUtxosPl\">txSkelReferenceInputUtxosPl</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)","name":"txSkelReferenceInputUtxosPl","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txSkelReferenceInputUtxosPl"},{"display_html":"<a href=\"#v:txSkelReferenceInputUtxos\">txSkelReferenceInputUtxos</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>)","name":"txSkelReferenceInputUtxos","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txSkelReferenceInputUtxos"},{"display_html":"<a href=\"#v:txSkelInputValidators\">txSkelInputValidators</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>))","name":"txSkelInputValidators","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txSkelInputValidators"},{"display_html":"<a href=\"#v:txSkelInputValue\">txSkelInputValue</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelInputValue","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txSkelInputValue"},{"display_html":"<a href=\"#v:txSkelInputData\">txSkelInputData</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a>)","name":"txSkelInputData","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txSkelInputData"},{"display_html":"<a href=\"#v:lookupUtxos\">lookupUtxos</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>] -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>)","name":"lookupUtxos","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:lookupUtxos"},{"display_html":"<a href=\"#v:lookupUtxosPl\">lookupUtxosPl</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>] -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)","name":"lookupUtxosPl","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:lookupUtxosPl"},{"display_html":"<a href=\"#v:validateTxSkel-39-\">validateTxSkel'</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>]","name":"validateTxSkel'","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:validateTxSkel-39-"},{"display_html":"<a href=\"#v:txSkelProposalsDeposit\">txSkelProposalsDeposit</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"txSkelProposalsDeposit","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txSkelProposalsDeposit"},{"display_html":"<a href=\"#v:govActionDeposit\">govActionDeposit</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"govActionDeposit","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:govActionDeposit"},{"display_html":"<a href=\"#v:runTweakInChain\">runTweakInChain</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:MonadPlus\" title=\"Distribution.Compat.Prelude\">MonadPlus</a> m) =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> m a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (a, <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>)","name":"runTweakInChain","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:runTweakInChain"},{"display_html":"<a href=\"#v:runTweakInChain-39-\">runTweakInChain'</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> m a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m [(a, <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>)]","name":"runTweakInChain'","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:runTweakInChain-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Tweak\">Tweak</a> m = <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:StateT\" title=\"Cardano.Prelude\">StateT</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> (<a href=\"https://hackage.haskell.org/package/-/docs/ListT.html#t:ListT\" title=\"ListT\">ListT</a> m)","name":"Tweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#t:Tweak"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UntypedTweak\">UntypedTweak</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:UntypedTweak\">UntypedTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> m a -&gt; <a href=\"Cooked-Tweak-Common.html#t:UntypedTweak\" title=\"Cooked.Tweak.Common\">UntypedTweak</a> m</li></ul>","name":"UntypedTweak UntypedTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#t:UntypedTweak"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:MonadPlus\" title=\"Distribution.Compat.Prelude\">MonadPlus</a> m, <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m) =&gt; <a href=\"#t:MonadTweak\">MonadTweak</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:getTxSkel\">getTxSkel</a> :: m <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a></li><li><a href=\"#v:putTxSkel\">putTxSkel</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m ()</li></ul>","name":"MonadTweak getTxSkel putTxSkel","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#t:MonadTweak"},{"display_html":"<a href=\"#v:failingTweak\">failingTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m a","name":"failingTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:failingTweak"},{"display_html":"<a href=\"#v:doNothingTweak\">doNothingTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m ()","name":"doNothingTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:doNothingTweak"},{"display_html":"<a href=\"#v:viewTweak\">viewTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; m a","name":"viewTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:viewTweak"},{"display_html":"<a href=\"#v:viewAllTweak\">viewAllTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Fold.html#t:A_Fold\" title=\"Optics.Fold\">A_Fold</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; m [a]","name":"viewAllTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:viewAllTweak"},{"display_html":"<a href=\"#v:setTweak\">setTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-IxSetter.html#t:A_Setter\" title=\"Optics.IxSetter\">A_Setter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; a -&gt; m ()","name":"setTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:setTweak"},{"display_html":"<a href=\"#v:overTweak\">overTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-IxSetter.html#t:A_Setter\" title=\"Optics.IxSetter\">A_Setter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (a -&gt; a) -&gt; m ()","name":"overTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:overTweak"},{"display_html":"<a href=\"#v:overMaybeTweak\">overMaybeTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; m [a]","name":"overMaybeTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:overMaybeTweak"},{"display_html":"<a href=\"#v:overMaybeSelectingTweak\">overMaybeSelectingTweak</a> :: <span class=\"keyword\">forall</span> a m k is. (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [a]","name":"overMaybeSelectingTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:overMaybeSelectingTweak"},{"display_html":"<a href=\"#v:selectP\">selectP</a> :: (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> a a","name":"selectP","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:selectP"},{"display_html":"<a href=\"#v:combineModsTweak\">combineModsTweak</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> is, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>, <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m) =&gt; ([is] -&gt; [[is]]) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> x -&gt; (is -&gt; x -&gt; m [(x, l)]) -&gt; m [l]","name":"combineModsTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:combineModsTweak"},{"display_html":"<a href=\"#v:iviewTweak\">iviewTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; m (is, a)","name":"iviewTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:iviewTweak"},{"display_html":"<a href=\"#v:getSignersTweak\">getSignersTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"getSignersTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:getSignersTweak"},{"display_html":"<a href=\"#v:modifySignersTweak\">modifySignersTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; ([<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]) -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"modifySignersTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:modifySignersTweak"},{"display_html":"<a href=\"#v:setSignersTweak\">setSignersTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"setSignersTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:setSignersTweak"},{"display_html":"<a href=\"#v:signersSatisfyTweak\">signersSatisfyTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; ([<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"signersSatisfyTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:signersSatisfyTweak"},{"display_html":"<a href=\"#v:isSignerTweak\">isSignerTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isSignerTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:isSignerTweak"},{"display_html":"<a href=\"#v:hasSignersTweak\">hasSignersTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasSignersTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:hasSignersTweak"},{"display_html":"<a href=\"#v:addFirstSignerTweak\">addFirstSignerTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"addFirstSignerTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:addFirstSignerTweak"},{"display_html":"<a href=\"#v:addSignersTweak\">addSignersTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"addSignersTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:addSignersTweak"},{"display_html":"<a href=\"#v:addLastSignerTweak\">addLastSignerTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"addLastSignerTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:addLastSignerTweak"},{"display_html":"<a href=\"#v:removeSignersTweak\">removeSignersTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"removeSignersTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:removeSignersTweak"},{"display_html":"<a href=\"#v:removeSignerTweak\">removeSignerTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"removeSignerTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:removeSignerTweak"},{"display_html":"<a href=\"#v:replaceFirstSignerTweak\">replaceFirstSignerTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"replaceFirstSignerTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:replaceFirstSignerTweak"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PermutOutTweakMode\">PermutOutTweakMode</a><ul class=\"subs\"><li>= <a href=\"#v:KeepIdentity\">KeepIdentity</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>)</li><li>| <a href=\"#v:OmitIdentity\">OmitIdentity</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>)</li></ul>","name":"PermutOutTweakMode KeepIdentity OmitIdentity","module":"Cooked.Tweak.OutPermutations","link":"Cooked-Tweak-OutPermutations.html#t:PermutOutTweakMode"},{"display_html":"<a href=\"#v:allOutPermutsTweak\">allOutPermutsTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Tweak-OutPermutations.html#t:PermutOutTweakMode\" title=\"Cooked.Tweak.OutPermutations\">PermutOutTweakMode</a> -&gt; m ()","name":"allOutPermutsTweak","module":"Cooked.Tweak.OutPermutations","link":"Cooked-Tweak-OutPermutations.html#v:allOutPermutsTweak"},{"display_html":"<a href=\"#v:singleOutPermutTweak\">singleOutPermutTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a> -&gt; m ()","name":"singleOutPermutTweak","module":"Cooked.Tweak.OutPermutations","link":"Cooked-Tweak-OutPermutations.html#v:singleOutPermutTweak"},{"display_html":"<a href=\"#v:distinctPermutations\">distinctPermutations</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a =&gt; [a] -&gt; [[a]]","name":"distinctPermutations","module":"Cooked.Tweak.OutPermutations","link":"Cooked-Tweak-OutPermutations.html#v:distinctPermutations"},{"display_html":"<a href=\"#v:addLabelTweak\">addLabelTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton.html#t:LabelConstrs\" title=\"Cooked.Skeleton\">LabelConstrs</a> x) =&gt; x -&gt; m ()","name":"addLabelTweak","module":"Cooked.Tweak.Labels","link":"Cooked-Tweak-Labels.html#v:addLabelTweak"},{"display_html":"<a href=\"#v:removeLabelTweak\">removeLabelTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton.html#t:LabelConstrs\" title=\"Cooked.Skeleton\">LabelConstrs</a> x) =&gt; x -&gt; m ()","name":"removeLabelTweak","module":"Cooked.Tweak.Labels","link":"Cooked-Tweak-Labels.html#v:removeLabelTweak"},{"display_html":"<a href=\"#v:hasLabelTweak\">hasLabelTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton.html#t:LabelConstrs\" title=\"Cooked.Skeleton\">LabelConstrs</a> x) =&gt; x -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasLabelTweak","module":"Cooked.Tweak.Labels","link":"Cooked-Tweak-Labels.html#v:hasLabelTweak"},{"display_html":"<a href=\"#v:tamperDatumTweak\">tamperDatumTweak</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:FromData\" title=\"PlutusLedgerApi.V1\">FromData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; m [a]","name":"tamperDatumTweak","module":"Cooked.Tweak.TamperDatum","link":"Cooked-Tweak-TamperDatum.html#v:tamperDatumTweak"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TamperDatumLbl\">TamperDatumLbl</a> = <a href=\"#v:TamperDatumLbl\">TamperDatumLbl</a>","name":"TamperDatumLbl TamperDatumLbl","module":"Cooked.Tweak.TamperDatum","link":"Cooked-Tweak-TamperDatum.html#t:TamperDatumLbl"},{"display_html":"<a href=\"#v:malformDatumTweak\">malformDatumTweak</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:FromData\" title=\"PlutusLedgerApi.V1\">FromData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a) =&gt; (a -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:BuiltinData\" title=\"PlutusLedgerApi.V1\">BuiltinData</a>]) -&gt; m ()","name":"malformDatumTweak","module":"Cooked.Tweak.TamperDatum","link":"Cooked-Tweak-TamperDatum.html#v:malformDatumTweak"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MalformDatumLbl\">MalformDatumLbl</a> = <a href=\"#v:MalformDatumLbl\">MalformDatumLbl</a>","name":"MalformDatumLbl MalformDatumLbl","module":"Cooked.Tweak.TamperDatum","link":"Cooked-Tweak-TamperDatum.html#t:MalformDatumLbl"},{"display_html":"<a href=\"#v:ensureInputTweak\">ensureInputTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>))","name":"ensureInputTweak","module":"Cooked.Tweak.AddInputsAndOutputs","link":"Cooked-Tweak-AddInputsAndOutputs.html#v:ensureInputTweak"},{"display_html":"<a href=\"#v:addInputTweak\">addInputTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a> -&gt; m ()","name":"addInputTweak","module":"Cooked.Tweak.AddInputsAndOutputs","link":"Cooked-Tweak-AddInputsAndOutputs.html#v:addInputTweak"},{"display_html":"<a href=\"#v:removeInputTweak\">removeInputTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>)]","name":"removeInputTweak","module":"Cooked.Tweak.AddInputsAndOutputs","link":"Cooked-Tweak-AddInputsAndOutputs.html#v:removeInputTweak"},{"display_html":"<a href=\"#v:ensureOutputTweak\">ensureOutputTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>)","name":"ensureOutputTweak","module":"Cooked.Tweak.AddInputsAndOutputs","link":"Cooked-Tweak-AddInputsAndOutputs.html#v:ensureOutputTweak"},{"display_html":"<a href=\"#v:addOutputTweak\">addOutputTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; m ()","name":"addOutputTweak","module":"Cooked.Tweak.AddInputsAndOutputs","link":"Cooked-Tweak-AddInputsAndOutputs.html#v:addOutputTweak"},{"display_html":"<a href=\"#v:removeOutputTweak\">removeOutputTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; (<a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [<a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>]","name":"removeOutputTweak","module":"Cooked.Tweak.AddInputsAndOutputs","link":"Cooked-Tweak-AddInputsAndOutputs.html#v:removeOutputTweak"},{"display_html":"<a href=\"#v:addMintTweak\">addMintTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>) -&gt; m ()","name":"addMintTweak","module":"Cooked.Tweak.AddInputsAndOutputs","link":"Cooked-Tweak-AddInputsAndOutputs.html#v:addMintTweak"},{"display_html":"<a href=\"#v:removeMintTweak\">removeMintTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; ((<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)]","name":"removeMintTweak","module":"Cooked.Tweak.AddInputsAndOutputs","link":"Cooked-Tweak-AddInputsAndOutputs.html#v:removeMintTweak"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UtxoSearch\">UtxoSearch</a> m a = <a href=\"https://hackage.haskell.org/package/-/docs/ListT.html#t:ListT\" title=\"ListT\">ListT</a> m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, a)","name":"UtxoSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch"},{"display_html":"<a href=\"#v:runUtxoSearch\">runUtxoSearch</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, a)]","name":"runUtxoSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:runUtxoSearch"},{"display_html":"<a href=\"#v:allUtxosSearch\">allUtxosSearch</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>","name":"allUtxosSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:allUtxosSearch"},{"display_html":"<a href=\"#v:allUtxosLedgerSearch\">allUtxosLedgerSearch</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>","name":"allUtxosLedgerSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:allUtxosLedgerSearch"},{"display_html":"<a href=\"#v:utxosAtSearch\">utxosAtSearch</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m, <a href=\"Cooked-Conversion-ToAddress.html#t:ToAddress\" title=\"Cooked.Conversion.ToAddress\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>","name":"utxosAtSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:utxosAtSearch"},{"display_html":"<a href=\"#v:utxosAtLedgerSearch\">utxosAtLedgerSearch</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m, <a href=\"Cooked-Conversion-ToAddress.html#t:ToAddress\" title=\"Cooked.Conversion.ToAddress\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>","name":"utxosAtLedgerSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:utxosAtLedgerSearch"},{"display_html":"<a href=\"#v:utxosFromCardanoTxSearch\">utxosFromCardanoTxSearch</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a> -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>","name":"utxosFromCardanoTxSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:utxosFromCardanoTxSearch"},{"display_html":"<a href=\"#v:txOutByRefSearch\">txOutByRefSearch</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>] -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>","name":"txOutByRefSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:txOutByRefSearch"},{"display_html":"<a href=\"#v:filterWith\">filterWith</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; (a -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b)) -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m b","name":"filterWith","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWith"},{"display_html":"<a href=\"#v:filterWithPure\">filterWithPure</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b) -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m b","name":"filterWithPure","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithPure"},{"display_html":"<a href=\"#v:filterWithOptic\">filterWithOptic</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:An_AffineFold\" title=\"Optics.AffineFold\">An_AffineFold</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m) =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is a b -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m b","name":"filterWithOptic","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithOptic"},{"display_html":"<a href=\"#v:filterWithPred\">filterWithPred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a","name":"filterWithPred","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithPred"},{"display_html":"<a href=\"#v:filterWithValuePred\">filterWithValuePred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a> -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"filterWithValuePred","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithValuePred"},{"display_html":"<a href=\"#v:filterWithOnlyAda\">filterWithOnlyAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a> -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"filterWithOnlyAda","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithOnlyAda"},{"display_html":"<a href=\"#v:filterWithNotOnlyAda\">filterWithNotOnlyAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a> -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"filterWithNotOnlyAda","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithNotOnlyAda"},{"display_html":"<a href=\"#v:onlyValueOutputsAtSearch\">onlyValueOutputsAtSearch</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m, <a href=\"Cooked-Conversion-ToAddress.html#t:ToAddress\" title=\"Cooked.Conversion.ToAddress\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a> () <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>)","name":"onlyValueOutputsAtSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:onlyValueOutputsAtSearch"},{"display_html":"<a href=\"#v:vanillaOutputsAtSearch\">vanillaOutputsAtSearch</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m, <a href=\"Cooked-Conversion-ToAddress.html#t:ToAddress\" title=\"Cooked.Conversion.ToAddress\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a> () <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Ada.html#t:Ada\" title=\"Plutus.Script.Utils.Ada\">Ada</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>)","name":"vanillaOutputsAtSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:vanillaOutputsAtSearch"},{"display_html":"<a href=\"#v:filterWithAlways\">filterWithAlways</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; (a -&gt; b) -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m b","name":"filterWithAlways","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithAlways"},{"display_html":"<a href=\"#v:scriptOutputsSearch\">scriptOutputsSearch</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChain</a> m, <a href=\"Cooked-Conversion-ToScriptHash.html#t:ToScriptHash\" title=\"Cooked.Conversion.ToScriptHash\">ToScriptHash</a> s) =&gt; s -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> s <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:OutputDatum\" title=\"PlutusLedgerApi.V2.Tx\">OutputDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>)","name":"scriptOutputsSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:scriptOutputsSearch"},{"display_html":"<a href=\"#v:referenceScriptOutputsSearch\">referenceScriptOutputsSearch</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChain</a> m, <a href=\"Cooked-Conversion-ToScriptHash.html#t:ToScriptHash\" title=\"Cooked.Conversion.ToScriptHash\">ToScriptHash</a> s) =&gt; s -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:OutputDatum\" title=\"PlutusLedgerApi.V2.Tx\">OutputDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>)","name":"referenceScriptOutputsSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:referenceScriptOutputsSearch"},{"display_html":"<a href=\"#v:toTxSkelOutWithMinAda\">toTxSkelOutWithMinAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:GenerateTxError\" title=\"Cooked.MockChain.GenerateTx.Common\">GenerateTxError</a> <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>","name":"toTxSkelOutWithMinAda","module":"Cooked.MockChain.MinAda","link":"Cooked-MockChain-MinAda.html#v:toTxSkelOutWithMinAda"},{"display_html":"<a href=\"#v:toTxSkelWithMinAda\">toTxSkelWithMinAda</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>","name":"toTxSkelWithMinAda","module":"Cooked.MockChain.MinAda","link":"Cooked-MockChain-MinAda.html#v:toTxSkelWithMinAda"},{"display_html":"<a href=\"#v:getTxSkelOutMinAda\">getTxSkelOutMinAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:GenerateTxError\" title=\"Cooked.MockChain.GenerateTx.Common\">GenerateTxError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"getTxSkelOutMinAda","module":"Cooked.MockChain.MinAda","link":"Cooked-MockChain-MinAda.html#v:getTxSkelOutMinAda"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:InitialDistribution\">InitialDistribution</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:InitialDistribution\">InitialDistribution</a> :: {..} -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a></li></ul>","name":"InitialDistribution InitialDistribution unInitialDistribution","module":"Cooked.InitialDistribution","link":"Cooked-InitialDistribution.html#t:InitialDistribution"},{"display_html":"<a href=\"#v:distributionFromList\">distributionFromList</a> :: [(<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>, [<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>])] -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a>","name":"distributionFromList","module":"Cooked.InitialDistribution","link":"Cooked-InitialDistribution.html#v:distributionFromList"},{"display_html":"<a href=\"#v:toInitDistWithMinAda\">toInitDistWithMinAda</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:GenerateTxError\" title=\"Cooked.MockChain.GenerateTx.Common\">GenerateTxError</a> <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a>","name":"toInitDistWithMinAda","module":"Cooked.InitialDistribution","link":"Cooked-InitialDistribution.html#v:toInitDistWithMinAda"},{"display_html":"<a href=\"#v:unsafeToInitDistWithMinAda\">unsafeToInitDistWithMinAda</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a>","name":"unsafeToInitDistWithMinAda","module":"Cooked.InitialDistribution","link":"Cooked-InitialDistribution.html#v:unsafeToInitDistWithMinAda"},{"display_html":"<a href=\"#v:balanceTxSkel\">balanceTxSkel</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>, Fee, Collaterals, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>)","name":"balanceTxSkel","module":"Cooked.MockChain.Balancing","link":"Cooked-MockChain-Balancing.html#v:balanceTxSkel"},{"display_html":"<a href=\"#v:getMinAndMaxFee\">getMinAndMaxFee</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; m (Fee, Fee)","name":"getMinAndMaxFee","module":"Cooked.MockChain.Balancing","link":"Cooked-MockChain-Balancing.html#v:getMinAndMaxFee"},{"display_html":"<a href=\"#v:estimateTxSkelFee\">estimateTxSkelFee</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; Fee -&gt; Collaterals -&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m Fee","name":"estimateTxSkelFee","module":"Cooked.MockChain.Balancing","link":"Cooked-MockChain-Balancing.html#v:estimateTxSkelFee"},{"display_html":"<a href=\"#v:mcstToUtxoState\">mcstToUtxoState</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainSt\" title=\"Cooked.MockChain.Direct\">MockChainSt</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a>","name":"mcstToUtxoState","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:mcstToUtxoState"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainSt\">MockChainSt</a> = <a href=\"#v:MockChainSt\">MockChainSt</a> {<ul class=\"subs\"><li><a href=\"#v:mcstParams\">mcstParams</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a></li><li><a href=\"#v:mcstIndex\">mcstIndex</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:UtxoIndex\" title=\"Ledger.Index.Internal\">UtxoIndex</a></li><li><a href=\"#v:mcstDatums\">mcstDatums</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> (<a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)</li><li><a href=\"#v:mcstValidators\">mcstValidators</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>)</li><li><a href=\"#v:mcstCurrentSlot\">mcstCurrentSlot</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a></li></ul>}","name":"MockChainSt mcstCurrentSlot mcstParams mcstValidators mcstDatums mcstIndex MockChainSt","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#t:MockChainSt"},{"display_html":"<a href=\"#v:mcstToEmulatedLedgerState\">mcstToEmulatedLedgerState</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainSt\" title=\"Cooked.MockChain.Direct\">MockChainSt</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Validation.html#t:EmulatedLedgerState\" title=\"Cardano.Node.Emulator.Internal.Node.Validation\">EmulatedLedgerState</a>","name":"mcstToEmulatedLedgerState","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:mcstToEmulatedLedgerState"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:MockChainT\">MockChainT</a> m a = <a href=\"#v:MockChainT\">MockChainT</a> {<ul class=\"subs\"><li><a href=\"#v:unMockChain\">unMockChain</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> <a href=\"Cooked-MockChain-Direct.html#t:MockChainSt\" title=\"Cooked.MockChain.Direct\">MockChainSt</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:ExceptT\" title=\"Cardano.Prelude\">ExceptT</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> m) a</li></ul>}","name":"MockChainT unMockChain MockChainT","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#t:MockChainT"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MockChain\">MockChain</a> = <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Identity\" title=\"Distribution.Compat.Prelude\">Identity</a>","name":"MockChain","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#t:MockChain"},{"display_html":"<a href=\"#v:combineMockChainT\">combineMockChainT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; (<span class=\"keyword\">forall</span> a. m a -&gt; m a -&gt; m a) -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m x -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m x -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m x","name":"combineMockChainT","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:combineMockChainT"},{"display_html":"<a href=\"#v:mapMockChainT\">mapMockChainT</a> :: (m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain-Direct.html#t:MockChainSt\" title=\"Cooked.MockChain.Direct\">MockChainSt</a>)) -&gt; n (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (b, <a href=\"Cooked-MockChain-Direct.html#t:MockChainSt\" title=\"Cooked.MockChain.Direct\">MockChainSt</a>))) -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m a -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> n b","name":"mapMockChainT","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:mapMockChainT"},{"display_html":"<a href=\"#v:runMockChainTRaw\">runMockChainTRaw</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainSt\" title=\"Cooked.MockChain.Direct\">MockChainSt</a> -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain-Direct.html#t:MockChainSt\" title=\"Cooked.MockChain.Direct\">MockChainSt</a>))","name":"runMockChainTRaw","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:runMockChainTRaw"},{"display_html":"<a href=\"#v:runMockChainTFrom\">runMockChainTFrom</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a>))","name":"runMockChainTFrom","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:runMockChainTFrom"},{"display_html":"<a href=\"#v:runMockChainT\">runMockChainT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a>))","name":"runMockChainT","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:runMockChainT"},{"display_html":"<a href=\"#v:runMockChainRaw\">runMockChainRaw</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChain\" title=\"Cooked.MockChain.Direct\">MockChain</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain-Direct.html#t:MockChainSt\" title=\"Cooked.MockChain.Direct\">MockChainSt</a>)","name":"runMockChainRaw","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:runMockChainRaw"},{"display_html":"<a href=\"#v:runMockChainFrom\">runMockChainFrom</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChain\" title=\"Cooked.MockChain.Direct\">MockChain</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a>)","name":"runMockChainFrom","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:runMockChainFrom"},{"display_html":"<a href=\"#v:runMockChain\">runMockChain</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChain\" title=\"Cooked.MockChain.Direct\">MockChain</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a>)","name":"runMockChain","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:runMockChain"},{"display_html":"<a href=\"#v:utxoState0\">utxoState0</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a>","name":"utxoState0","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:utxoState0"},{"display_html":"<a href=\"#v:mockChainSt0\">mockChainSt0</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainSt\" title=\"Cooked.MockChain.Direct\">MockChainSt</a>","name":"mockChainSt0","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:mockChainSt0"},{"display_html":"<a href=\"#v:mockChainSt0From\">mockChainSt0From</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainSt\" title=\"Cooked.MockChain.Direct\">MockChainSt</a>","name":"mockChainSt0From","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:mockChainSt0From"},{"display_html":"<a href=\"#v:referenceScriptMap0From\">referenceScriptMap0From</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>)","name":"referenceScriptMap0From","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:referenceScriptMap0From"},{"display_html":"<a href=\"#v:datumMap0From\">datumMap0From</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> (<a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)","name":"datumMap0From","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:datumMap0From"},{"display_html":"<a href=\"#v:utxoIndex0From\">utxoIndex0From</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:UtxoIndex\" title=\"Ledger.Index.Internal\">UtxoIndex</a>","name":"utxoIndex0From","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:utxoIndex0From"},{"display_html":"<a href=\"#v:utxoIndex0\">utxoIndex0</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:UtxoIndex\" title=\"Ledger.Index.Internal\">UtxoIndex</a>","name":"utxoIndex0","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:utxoIndex0"},{"display_html":"<a href=\"#v:getIndex\">getIndex</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:UtxoIndex\" title=\"Ledger.Index.Internal\">UtxoIndex</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>","name":"getIndex","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:getIndex"},{"display_html":"<a href=\"#v:interpretAndRunWith\">interpretAndRunWith</a> :: (<span class=\"keyword\">forall</span> m. <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m a -&gt; m res) -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; [(res, <a href=\"Cooked-MockChain-Staged.html#t:MockChainLog\" title=\"Cooked.MockChain.Staged\">MockChainLog</a>)]","name":"interpretAndRunWith","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:interpretAndRunWith"},{"display_html":"<a href=\"#v:interpretAndRun\">interpretAndRun</a> :: <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; [(<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a>), <a href=\"Cooked-MockChain-Staged.html#t:MockChainLog\" title=\"Cooked.MockChain.Staged\">MockChainLog</a>)]","name":"interpretAndRun","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:interpretAndRun"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainLogEntry\">MockChainLogEntry</a><ul class=\"subs\"><li>= <a href=\"#v:MCLogSubmittedTxSkel\">MCLogSubmittedTxSkel</a> <a href=\"Cooked-Skeleton.html#t:SkelContext\" title=\"Cooked.Skeleton\">SkelContext</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a></li><li>| <a href=\"#v:MCLogNewTx\">MCLogNewTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Tx.html#t:TxId\" title=\"PlutusLedgerApi.V1.Tx\">TxId</a></li><li>| <a href=\"#v:MCLogFail\">MCLogFail</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li></ul>","name":"MockChainLogEntry MCLogSubmittedTxSkel MCLogNewTx MCLogFail","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#t:MockChainLogEntry"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:MockChainLog\">MockChainLog</a> = <a href=\"#v:MockChainLog\">MockChainLog</a> {<ul class=\"subs\"><li><a href=\"#v:unMockChainLog\">unMockChainLog</a> :: [<a href=\"Cooked-MockChain-Staged.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.Staged\">MockChainLogEntry</a>]</li></ul>}","name":"MockChainLog MockChainLog unMockChainLog","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#t:MockChainLog"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:StagedMockChain\">StagedMockChain</a> = <a href=\"Cooked-Ltl.html#t:Staged\" title=\"Cooked.Ltl\">Staged</a> MockChainOp","name":"StagedMockChain","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#t:StagedMockChain"},{"display_html":"<a href=\"#v:runTweakFrom\">runTweakFrom</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainSt\" title=\"Cooked.MockChain.Direct\">MockChainSt</a> -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> InterpMockChain a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (a, <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>)]","name":"runTweakFrom","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:runTweakFrom"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadModalBlockChain\">MonadModalBlockChain</a> m = (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChain</a> m, <a href=\"Cooked-Ltl.html#t:MonadModal\" title=\"Cooked.Ltl\">MonadModal</a> m, <a href=\"Cooked-Ltl.html#t:Modification\" title=\"Cooked.Ltl\">Modification</a> m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:-126-\" title=\"Distribution.Compat.Prelude\">~</a> <a href=\"Cooked-Tweak-Common.html#t:UntypedTweak\" title=\"Cooked.Tweak.Common\">UntypedTweak</a> InterpMockChain)","name":"MonadModalBlockChain","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#t:MonadModalBlockChain"},{"display_html":"<a href=\"#v:somewhere\">somewhere</a> :: <a href=\"Cooked-MockChain-Staged.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain.Staged\">MonadModalBlockChain</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> InterpMockChain b -&gt; m a -&gt; m a","name":"somewhere","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:somewhere"},{"display_html":"<a href=\"#v:runTweak\">runTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> InterpMockChain a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (a, <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>)]","name":"runTweak","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:runTweak"},{"display_html":"<a href=\"#v:everywhere\">everywhere</a> :: <a href=\"Cooked-MockChain-Staged.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain.Staged\">MonadModalBlockChain</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> InterpMockChain b -&gt; m a -&gt; m a","name":"everywhere","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:everywhere"},{"display_html":"<a href=\"#v:withTweak\">withTweak</a> :: <a href=\"Cooked-MockChain-Staged.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain.Staged\">MonadModalBlockChain</a> m =&gt; m x -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> InterpMockChain a -&gt; m x","name":"withTweak","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:withTweak"},{"display_html":"<a href=\"#v:there\">there</a> :: <a href=\"Cooked-MockChain-Staged.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain.Staged\">MonadModalBlockChain</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> InterpMockChain b -&gt; m a -&gt; m a","name":"there","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:there"},{"display_html":"<a href=\"#v:prettyTxSkel\">prettyTxSkel</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Skeleton.html#t:SkelContext\" title=\"Cooked.Skeleton\">SkelContext</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyTxSkel","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:prettyTxSkel"},{"display_html":"<a href=\"#v:prettyBalancingWallet\">prettyBalancingWallet</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyBalancingWallet","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:prettyBalancingWallet"},{"display_html":"<a href=\"#v:prettySigners\">prettySigners</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a> -&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; [<a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>]","name":"prettySigners","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:prettySigners"},{"display_html":"<a href=\"#v:prettyMints\">prettyMints</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>) -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyMints","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:prettyMints"},{"display_html":"<a href=\"#v:mPrettyTxOpts\">mPrettyTxOpts</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxOpts\" title=\"Cooked.Skeleton\">TxOpts</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"mPrettyTxOpts","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:mPrettyTxOpts"},{"display_html":"<a href=\"#v:prettyTxSkelOut\">prettyTxSkelOut</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyTxSkelOut","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:prettyTxSkelOut"},{"display_html":"<a href=\"#v:prettyTxSkelOutDatumMaybe\">prettyTxSkelOutDatumMaybe</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyTxSkelOutDatumMaybe","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:prettyTxSkelOutDatumMaybe"},{"display_html":"<a href=\"#v:prettyTxSkelIn\">prettyTxSkelIn</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Skeleton.html#t:SkelContext\" title=\"Cooked.Skeleton\">SkelContext</a> -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>) -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyTxSkelIn","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:prettyTxSkelIn"},{"display_html":"<a href=\"#v:prettyTxSkelInReference\">prettyTxSkelInReference</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Skeleton.html#t:SkelContext\" title=\"Cooked.Skeleton\">SkelContext</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyTxSkelInReference","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:prettyTxSkelInReference"},{"display_html":"<a href=\"#v:prettyAddressState\">prettyAddressState</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayloadSet\" title=\"Cooked.MockChain.UtxoState\">UtxoPayloadSet</a> -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyAddressState","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:prettyAddressState"},{"display_html":"<a href=\"#v:prettyPayloadGrouped\">prettyPayloadGrouped</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; [<a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyPayloadGrouped","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:prettyPayloadGrouped"},{"display_html":"<a href=\"#v:prettyPayload\">prettyPayload</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyPayload","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:prettyPayload"},{"display_html":"<a href=\"#v:prettyReferenceScriptHash\">prettyReferenceScriptHash</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a> -&gt; <a href=\"Cooked-Pretty-Common.html#t:DocCooked\" title=\"Cooked.Pretty.Common\">DocCooked</a>","name":"prettyReferenceScriptHash","module":"Cooked.Pretty.Cooked","link":"Cooked-Pretty-Cooked.html#v:prettyReferenceScriptHash"},{"display_html":"module <a href=\"Cooked-Pretty-Options.html\">Cooked.Pretty.Options</a>","name":"","module":"Cooked.Pretty","link":""},{"display_html":"module <a href=\"Cooked-Pretty-Cooked.html\">Cooked.Pretty.Cooked</a>","name":"","module":"Cooked.Pretty","link":""},{"display_html":"module <a href=\"Cooked-Pretty-Common.html\">Cooked.Pretty.Common</a>","name":"","module":"Cooked.Pretty","link":""},{"display_html":"module <a href=\"Cooked-Pretty-Class.html\">Cooked.Pretty.Class</a>","name":"","module":"Cooked.Pretty","link":""},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsProp\">IsProp</a> prop <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:testCounterexample\">testCounterexample</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; prop -&gt; prop</li><li><a href=\"#v:testConjoin\">testConjoin</a> :: [prop] -&gt; prop</li><li><a href=\"#v:testDisjoin\">testDisjoin</a> :: [prop] -&gt; prop</li><li><a href=\"#v:testFailure\">testFailure</a> :: prop</li><li><a href=\"#v:testSuccess\">testSuccess</a> :: prop</li><li><a href=\"#v:testFailureMsg\">testFailureMsg</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; prop</li></ul>","name":"IsProp testFailureMsg testSuccess testFailure testDisjoin testConjoin testCounterexample","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#t:IsProp"},{"display_html":"<a href=\"#v:testBool\">testBool</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a> -&gt; prop","name":"testBool","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testBool"},{"display_html":"<a href=\"#v:testAll\">testAll</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; (a -&gt; prop) -&gt; [a] -&gt; prop","name":"testAll","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testAll"},{"display_html":"<a href=\"#v:.-61--61-.\">(.==.)</a> :: (<a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; a -&gt; a -&gt; prop","name":".==.","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:.-61--61-."},{"display_html":"<a href=\"#v:.-38--38-.\">(.&amp;&amp;.)</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; prop -&gt; prop -&gt; prop","name":".&&.","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:.-38--38-."},{"display_html":"<a href=\"#v:.-124--124-.\">(.||.)</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; prop -&gt; prop -&gt; prop","name":".||.","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:.-124--124-."},{"display_html":"<a href=\"#v:testSucceeds\">testSucceeds</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testSucceeds","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testSucceeds"},{"display_html":"<a href=\"#v:testFails\">testFails</a> :: (<a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a) =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> -&gt; prop) -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testFails","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testFails"},{"display_html":"<a href=\"#v:testSucceedsFrom\">testSucceedsFrom</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testSucceedsFrom","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testSucceedsFrom"},{"display_html":"<a href=\"#v:testSucceedsFrom-39-\">testSucceedsFrom'</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (a -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; prop) -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testSucceedsFrom'","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testSucceedsFrom-39-"},{"display_html":"<a href=\"#v:testFailsFrom\">testFailsFrom</a> :: (<a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a) =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> -&gt; prop) -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testFailsFrom","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testFailsFrom"},{"display_html":"<a href=\"#v:isCekEvaluationFailure\">isCekEvaluationFailure</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> -&gt; prop","name":"isCekEvaluationFailure","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:isCekEvaluationFailure"},{"display_html":"<a href=\"#v:isCekEvaluationFailureWithMsg\">isCekEvaluationFailureWithMsg</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> -&gt; prop","name":"isCekEvaluationFailureWithMsg","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:isCekEvaluationFailureWithMsg"},{"display_html":"<a href=\"#v:testAllSatisfiesFrom\">testAllSatisfiesFrom</a> :: <span class=\"keyword\">forall</span> prop a. <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a>) -&gt; prop) -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testAllSatisfiesFrom","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testAllSatisfiesFrom"},{"display_html":"<a href=\"#v:testBinaryRelatedBy\">testBinaryRelatedBy</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; prop) -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testBinaryRelatedBy","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testBinaryRelatedBy"},{"display_html":"<a href=\"#v:testOneEquivClass\">testOneEquivClass</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; prop) -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testOneEquivClass","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testOneEquivClass"},{"display_html":"<a href=\"#v:testSatisfiesFrom-39-\">testSatisfiesFrom'</a> :: ([(<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a>), <a href=\"Cooked-MockChain-Staged.html#t:MockChainLog\" title=\"Cooked.MockChain.Staged\">MockChainLog</a>)] -&gt; prop) -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testSatisfiesFrom'","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testSatisfiesFrom-39-"},{"display_html":"<a href=\"#v:assertionToMaybe\">assertionToMaybe</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:HUnitFailure\" title=\"Test.Tasty.HUnit\">HUnitFailure</a>)","name":"assertionToMaybe","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:assertionToMaybe"},{"display_html":"<a href=\"#v:forAll\">forAll</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"forAll","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:forAll"},{"display_html":"<a href=\"#v:assertSubset\">assertSubset</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; [a] -&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a>","name":"assertSubset","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:assertSubset"},{"display_html":"<a href=\"#v:assertSameSets\">assertSameSets</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; [a] -&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a>","name":"assertSameSets","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:assertSameSets"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MockChain\">MockChain</a> = <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Identity\" title=\"Distribution.Compat.Prelude\">Identity</a>","name":"MockChain","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MockChain"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UtxoState\">UtxoState</a>","name":"UtxoState","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:UtxoState"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UtxoSearch\">UtxoSearch</a> m a = <a href=\"https://hackage.haskell.org/package/-/docs/ListT.html#t:ListT\" title=\"ListT\">ListT</a> m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, a)","name":"UtxoSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:UtxoSearch"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainError\">MockChainError</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:MCEValidationError\">MCEValidationError</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:ValidationPhase\" title=\"Ledger.Index.Internal\">ValidationPhase</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:ValidationError\" title=\"Ledger.Index.Internal\">ValidationError</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a></li><li><a href=\"#v:MCEUnbalanceable\">MCEUnbalanceable</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a></li><li><a href=\"#v:MCENoSuitableCollateral\">MCENoSuitableCollateral</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a></li><li><a href=\"#v:MCEGenerationError\">MCEGenerationError</a> :: <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:GenerateTxError\" title=\"Cooked.MockChain.GenerateTx.Common\">GenerateTxError</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a></li><li><a href=\"#v:MCEUnknownOutRefError\">MCEUnknownOutRefError</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a></li><li><a href=\"#v:MCEUnknownValidator\">MCEUnknownValidator</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a></li><li><a href=\"#v:MCEUnknownDatum\">MCEUnknownDatum</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a></li><li><a href=\"#v:FailWith\">FailWith</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a></li></ul>","name":"MockChainError MCEValidationError MCEUnbalanceable MCENoSuitableCollateral MCEGenerationError MCEUnknownOutRefError MCEUnknownValidator MCEUnknownDatum FailWith","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MockChainError"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-MonadFail.html#t:MonadFail\" title=\"Distribution.Compat.MonadFail\">MonadFail</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:MonadError\" title=\"Cardano.Prelude\">MonadError</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> m) =&gt; <a href=\"#t:MonadBlockChainBalancing\">MonadBlockChainBalancing</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:getParams\">getParams</a> :: m <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a></li><li><a href=\"#v:utxosAtLedger\">utxosAtLedger</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a> -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>)]</li><li><a href=\"#v:datumFromHash\">datumFromHash</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a>)</li><li><a href=\"#v:validatorFromHash\">validatorFromHash</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>))</li><li><a href=\"#v:txOutByRefLedger\">txOutByRefLedger</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>)</li></ul>","name":"MonadBlockChainBalancing getParams datumFromHash utxosAtLedger validatorFromHash txOutByRefLedger","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MonadBlockChainBalancing"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"#t:MonadBlockChainWithoutValidation\">MonadBlockChainWithoutValidation</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:allUtxosLedger\">allUtxosLedger</a> :: m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>)]</li><li><a href=\"#v:setParams\">setParams</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; m ()</li><li><a href=\"#v:currentSlot\">currentSlot</a> :: m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a></li><li><a href=\"#v:awaitSlot\">awaitSlot</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a></li></ul>","name":"MonadBlockChainWithoutValidation currentSlot awaitSlot allUtxosLedger setParams","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"#t:MonadBlockChain\">MonadBlockChain</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:validateTxSkel\">validateTxSkel</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a></li></ul>","name":"MonadBlockChain validateTxSkel","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MonadBlockChain"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:AsTrans\">AsTrans</a> t (m :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:AsTrans\">AsTrans</a> {<ul class=\"subs\"><li><a href=\"#v:getTrans\">getTrans</a> :: t m a</li></ul>}","name":"AsTrans AsTrans getTrans","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:AsTrans"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadModalBlockChain\">MonadModalBlockChain</a> m = (<a href=\"Cooked-MockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain\">MonadBlockChain</a> m, <a href=\"Cooked-Ltl.html#t:MonadModal\" title=\"Cooked.Ltl\">MonadModal</a> m, <a href=\"Cooked-Ltl.html#t:Modification\" title=\"Cooked.Ltl\">Modification</a> m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:-126-\" title=\"Distribution.Compat.Prelude\">~</a> <a href=\"Cooked-Tweak-Common.html#t:UntypedTweak\" title=\"Cooked.Tweak.Common\">UntypedTweak</a> InterpMockChain)","name":"MonadModalBlockChain","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MonadModalBlockChain"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsProp\">IsProp</a> prop <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:testCounterexample\">testCounterexample</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; prop -&gt; prop</li><li><a href=\"#v:testConjoin\">testConjoin</a> :: [prop] -&gt; prop</li><li><a href=\"#v:testDisjoin\">testDisjoin</a> :: [prop] -&gt; prop</li><li><a href=\"#v:testFailure\">testFailure</a> :: prop</li><li><a href=\"#v:testSuccess\">testSuccess</a> :: prop</li><li><a href=\"#v:testFailureMsg\">testFailureMsg</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; prop</li></ul>","name":"IsProp testCounterexample testConjoin testDisjoin testFailure testSuccess testFailureMsg","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:IsProp"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:MockChainT\">MockChainT</a> m a = <a href=\"#v:MockChainT\">MockChainT</a> {<ul class=\"subs\"><li><a href=\"#v:unMockChain\">unMockChain</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> <a href=\"Cooked-MockChain.html#t:MockChainSt\" title=\"Cooked.MockChain\">MockChainSt</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:ExceptT\" title=\"Cardano.Prelude\">ExceptT</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> m) a</li></ul>}","name":"MockChainT MockChainT unMockChain","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MockChainT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainSt\">MockChainSt</a> = <a href=\"#v:MockChainSt\">MockChainSt</a> {<ul class=\"subs\"><li><a href=\"#v:mcstParams\">mcstParams</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a></li><li><a href=\"#v:mcstIndex\">mcstIndex</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:UtxoIndex\" title=\"Ledger.Index.Internal\">UtxoIndex</a></li><li><a href=\"#v:mcstDatums\">mcstDatums</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> (<a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)</li><li><a href=\"#v:mcstValidators\">mcstValidators</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>)</li><li><a href=\"#v:mcstCurrentSlot\">mcstCurrentSlot</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a></li></ul>}","name":"MockChainSt MockChainSt mcstIndex mcstDatums mcstValidators mcstParams mcstCurrentSlot","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MockChainSt"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogSubmittedTxSkel\">MCLogSubmittedTxSkel</a> :: <a href=\"Cooked-Skeleton.html#t:SkelContext\" title=\"Cooked.Skeleton\">SkelContext</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.Staged\">MockChainLogEntry</a>","name":"MCLogSubmittedTxSkel","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:MCLogSubmittedTxSkel"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogNewTx\">MCLogNewTx</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Tx.html#t:TxId\" title=\"PlutusLedgerApi.V1.Tx\">TxId</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.Staged\">MockChainLogEntry</a>","name":"MCLogNewTx","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:MCLogNewTx"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogFail\">MCLogFail</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.Staged\">MockChainLogEntry</a>","name":"MCLogFail","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:MCLogFail"},{"display_html":"<a href=\"#v:forAll\">forAll</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"forAll","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:forAll"},{"display_html":"<a href=\"#v:.-38--38-.\">(.&amp;&amp;.)</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; prop -&gt; prop -&gt; prop","name":".&&.","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:.-38--38-."},{"display_html":"<a href=\"#v:.-124--124-.\">(.||.)</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; prop -&gt; prop -&gt; prop","name":".||.","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:.-124--124-."},{"display_html":"<a href=\"#v:utxosAt\">utxosAt</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a> -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)]","name":"utxosAt","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxosAt"},{"display_html":"<a href=\"#v:.-61--61-.\">(.==.)</a> :: (<a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; a -&gt; a -&gt; prop","name":".==.","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:.-61--61-."},{"display_html":"<a href=\"#v:getIndex\">getIndex</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:UtxoIndex\" title=\"Ledger.Index.Internal\">UtxoIndex</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>","name":"getIndex","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:getIndex"},{"display_html":"<a href=\"#v:everywhere\">everywhere</a> :: <a href=\"Cooked-MockChain.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain\">MonadModalBlockChain</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> InterpMockChain b -&gt; m a -&gt; m a","name":"everywhere","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:everywhere"},{"display_html":"<a href=\"#v:somewhere\">somewhere</a> :: <a href=\"Cooked-MockChain.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain\">MonadModalBlockChain</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> InterpMockChain b -&gt; m a -&gt; m a","name":"somewhere","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:somewhere"},{"display_html":"<a href=\"#v:balanceTxSkel\">balanceTxSkel</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>, Fee, Collaterals, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>)","name":"balanceTxSkel","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:balanceTxSkel"},{"display_html":"<a href=\"#v:getMinAndMaxFee\">getMinAndMaxFee</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; m (Fee, Fee)","name":"getMinAndMaxFee","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:getMinAndMaxFee"},{"display_html":"<a href=\"#v:estimateTxSkelFee\">estimateTxSkelFee</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; Fee -&gt; Collaterals -&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m Fee","name":"estimateTxSkelFee","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:estimateTxSkelFee"},{"display_html":"<a href=\"#v:allUtxos\">allUtxos</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)]","name":"allUtxos","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:allUtxos"},{"display_html":"<a href=\"#v:currentTime\">currentTime</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>)","name":"currentTime","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:currentTime"},{"display_html":"<a href=\"#v:waitNSlots\">waitNSlots</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitNSlots","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:waitNSlots"},{"display_html":"<a href=\"#v:txOutByRef\">txOutByRef</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)","name":"txOutByRef","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txOutByRef"},{"display_html":"<a href=\"#v:utxosFromCardanoTx\">utxosFromCardanoTx</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)]","name":"utxosFromCardanoTx","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxosFromCardanoTx"},{"display_html":"<a href=\"#v:txOutV2FromLedger\">txOutV2FromLedger</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>","name":"txOutV2FromLedger","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txOutV2FromLedger"},{"display_html":"<a href=\"#v:typedDatumFromTxOutRef\">typedDatumFromTxOutRef</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:FromData\" title=\"PlutusLedgerApi.V1\">FromData</a> a, <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a)","name":"typedDatumFromTxOutRef","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:typedDatumFromTxOutRef"},{"display_html":"<a href=\"#v:valueFromTxOutRef\">valueFromTxOutRef</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>)","name":"valueFromTxOutRef","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:valueFromTxOutRef"},{"display_html":"<a href=\"#v:outputDatumFromTxOutRef\">outputDatumFromTxOutRef</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:OutputDatum\" title=\"PlutusLedgerApi.V2.Tx\">OutputDatum</a>)","name":"outputDatumFromTxOutRef","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:outputDatumFromTxOutRef"},{"display_html":"<a href=\"#v:datumFromTxOutRef\">datumFromTxOutRef</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a>)","name":"datumFromTxOutRef","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:datumFromTxOutRef"},{"display_html":"<a href=\"#v:resolveDatum\">resolveDatum</a> :: (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> out, <a href=\"Cooked-Conversion-ToOutputDatum.html#t:ToOutputDatum\" title=\"Cooked.Conversion.ToOutputDatum\">ToOutputDatum</a> (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out), <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m) =&gt; out -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a> (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out)))","name":"resolveDatum","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:resolveDatum"},{"display_html":"<a href=\"#v:resolveTypedDatum\">resolveTypedDatum</a> :: (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> out, <a href=\"Cooked-Conversion-ToOutputDatum.html#t:ToOutputDatum\" title=\"Cooked.Conversion.ToOutputDatum\">ToOutputDatum</a> (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out), <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:FromData\" title=\"PlutusLedgerApi.V1\">FromData</a> a) =&gt; out -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) a (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out)))","name":"resolveTypedDatum","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:resolveTypedDatum"},{"display_html":"<a href=\"#v:resolveValidator\">resolveValidator</a> :: (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> out, <a href=\"Cooked-Conversion-ToCredential.html#t:ToCredential\" title=\"Cooked.Conversion.ToCredential\">ToCredential</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out), <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m) =&gt; out -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>) (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out)))","name":"resolveValidator","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:resolveValidator"},{"display_html":"<a href=\"#v:resolveReferenceScript\">resolveReferenceScript</a> :: (<a href=\"Cooked-Output.html#t:IsAbstractOutput\" title=\"Cooked.Output\">IsAbstractOutput</a> out, <a href=\"Cooked-Conversion-ToScriptHash.html#t:ToScriptHash\" title=\"Cooked.Conversion.ToScriptHash\">ToScriptHash</a> (<a href=\"Cooked-Output.html#t:ReferenceScriptType\" title=\"Cooked.Output\">ReferenceScriptType</a> out), <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m) =&gt; out -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"Cooked-Output.html#t:OwnerType\" title=\"Cooked.Output\">OwnerType</a> out) (<a href=\"Cooked-Output.html#t:DatumType\" title=\"Cooked.Output\">DatumType</a> out) (<a href=\"Cooked-Output.html#t:ValueType\" title=\"Cooked.Output\">ValueType</a> out) (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>)))","name":"resolveReferenceScript","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:resolveReferenceScript"},{"display_html":"<a href=\"#v:getEnclosingSlot\">getEnclosingSlot</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"getEnclosingSlot","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:getEnclosingSlot"},{"display_html":"<a href=\"#v:awaitEnclosingSlot\">awaitEnclosingSlot</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"awaitEnclosingSlot","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:awaitEnclosingSlot"},{"display_html":"<a href=\"#v:slotRangeBefore\">slotRangeBefore</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"slotRangeBefore","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:slotRangeBefore"},{"display_html":"<a href=\"#v:slotRangeAfter\">slotRangeAfter</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"slotRangeAfter","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:slotRangeAfter"},{"display_html":"<a href=\"#v:slotToTimeInterval\">slotToTimeInterval</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>)","name":"slotToTimeInterval","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:slotToTimeInterval"},{"display_html":"<a href=\"#v:txSkelInputUtxosPl\">txSkelInputUtxosPl</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)","name":"txSkelInputUtxosPl","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelInputUtxosPl"},{"display_html":"<a href=\"#v:txSkelInputUtxos\">txSkelInputUtxos</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>)","name":"txSkelInputUtxos","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelInputUtxos"},{"display_html":"<a href=\"#v:txSkelReferenceInputUtxosPl\">txSkelReferenceInputUtxosPl</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)","name":"txSkelReferenceInputUtxosPl","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelReferenceInputUtxosPl"},{"display_html":"<a href=\"#v:txSkelReferenceInputUtxos\">txSkelReferenceInputUtxos</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>)","name":"txSkelReferenceInputUtxos","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelReferenceInputUtxos"},{"display_html":"<a href=\"#v:txSkelInputValidators\">txSkelInputValidators</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>))","name":"txSkelInputValidators","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelInputValidators"},{"display_html":"<a href=\"#v:txSkelInputValue\">txSkelInputValue</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelInputValue","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelInputValue"},{"display_html":"<a href=\"#v:txSkelInputData\">txSkelInputData</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a>)","name":"txSkelInputData","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelInputData"},{"display_html":"<a href=\"#v:lookupUtxos\">lookupUtxos</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>] -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>)","name":"lookupUtxos","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:lookupUtxos"},{"display_html":"<a href=\"#v:lookupUtxosPl\">lookupUtxosPl</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>] -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>)","name":"lookupUtxosPl","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:lookupUtxosPl"},{"display_html":"<a href=\"#v:validateTxSkel-39-\">validateTxSkel'</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>]","name":"validateTxSkel'","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:validateTxSkel-39-"},{"display_html":"<a href=\"#v:txSkelProposalsDeposit\">txSkelProposalsDeposit</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"txSkelProposalsDeposit","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelProposalsDeposit"},{"display_html":"<a href=\"#v:govActionDeposit\">govActionDeposit</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"govActionDeposit","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:govActionDeposit"},{"display_html":"<a href=\"#v:mcstToUtxoState\">mcstToUtxoState</a> :: <a href=\"Cooked-MockChain.html#t:MockChainSt\" title=\"Cooked.MockChain\">MockChainSt</a> -&gt; <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a>","name":"mcstToUtxoState","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mcstToUtxoState"},{"display_html":"<a href=\"#v:toTxSkelOutWithMinAda\">toTxSkelOutWithMinAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:GenerateTxError\" title=\"Cooked.MockChain.GenerateTx.Common\">GenerateTxError</a> <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>","name":"toTxSkelOutWithMinAda","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:toTxSkelOutWithMinAda"},{"display_html":"<a href=\"#v:toTxSkelWithMinAda\">toTxSkelWithMinAda</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>","name":"toTxSkelWithMinAda","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:toTxSkelWithMinAda"},{"display_html":"<a href=\"#v:getTxSkelOutMinAda\">getTxSkelOutMinAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-GenerateTx-Common.html#t:GenerateTxError\" title=\"Cooked.MockChain.GenerateTx.Common\">GenerateTxError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"getTxSkelOutMinAda","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:getTxSkelOutMinAda"},{"display_html":"<a href=\"#v:interpretAndRunWith\">interpretAndRunWith</a> :: (<span class=\"keyword\">forall</span> m. <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m a -&gt; m res) -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; [(res, <a href=\"Cooked-MockChain-Staged.html#t:MockChainLog\" title=\"Cooked.MockChain.Staged\">MockChainLog</a>)]","name":"interpretAndRunWith","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:interpretAndRunWith"},{"display_html":"<a href=\"#v:interpretAndRun\">interpretAndRun</a> :: <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; [(<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a>), <a href=\"Cooked-MockChain-Staged.html#t:MockChainLog\" title=\"Cooked.MockChain.Staged\">MockChainLog</a>)]","name":"interpretAndRun","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:interpretAndRun"},{"display_html":"<a href=\"#v:runTweakFrom\">runTweakFrom</a> :: <a href=\"Cooked-MockChain.html#t:MockChainSt\" title=\"Cooked.MockChain\">MockChainSt</a> -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> InterpMockChain a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (a, <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>)]","name":"runTweakFrom","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runTweakFrom"},{"display_html":"<a href=\"#v:runTweak\">runTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> InterpMockChain a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (a, <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>)]","name":"runTweak","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runTweak"},{"display_html":"<a href=\"#v:withTweak\">withTweak</a> :: <a href=\"Cooked-MockChain.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain\">MonadModalBlockChain</a> m =&gt; m x -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> InterpMockChain a -&gt; m x","name":"withTweak","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:withTweak"},{"display_html":"<a href=\"#v:there\">there</a> :: <a href=\"Cooked-MockChain.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain\">MonadModalBlockChain</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> InterpMockChain b -&gt; m a -&gt; m a","name":"there","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:there"},{"display_html":"<a href=\"#v:runUtxoSearch\">runUtxoSearch</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, a)]","name":"runUtxoSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runUtxoSearch"},{"display_html":"<a href=\"#v:allUtxosSearch\">allUtxosSearch</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>","name":"allUtxosSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:allUtxosSearch"},{"display_html":"<a href=\"#v:allUtxosLedgerSearch\">allUtxosLedgerSearch</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>","name":"allUtxosLedgerSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:allUtxosLedgerSearch"},{"display_html":"<a href=\"#v:utxosAtSearch\">utxosAtSearch</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m, <a href=\"Cooked-Conversion-ToAddress.html#t:ToAddress\" title=\"Cooked.Conversion.ToAddress\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>","name":"utxosAtSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxosAtSearch"},{"display_html":"<a href=\"#v:utxosAtLedgerSearch\">utxosAtLedgerSearch</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m, <a href=\"Cooked-Conversion-ToAddress.html#t:ToAddress\" title=\"Cooked.Conversion.ToAddress\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOut\" title=\"Ledger.Tx.Internal\">TxOut</a>","name":"utxosAtLedgerSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxosAtLedgerSearch"},{"display_html":"<a href=\"#v:utxosFromCardanoTxSearch\">utxosFromCardanoTxSearch</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a> -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>","name":"utxosFromCardanoTxSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxosFromCardanoTxSearch"},{"display_html":"<a href=\"#v:txOutByRefSearch\">txOutByRefSearch</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>] -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a>","name":"txOutByRefSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txOutByRefSearch"},{"display_html":"<a href=\"#v:filterWith\">filterWith</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; (a -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b)) -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m b","name":"filterWith","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWith"},{"display_html":"<a href=\"#v:filterWithPure\">filterWithPure</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b) -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m b","name":"filterWithPure","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithPure"},{"display_html":"<a href=\"#v:filterWithOptic\">filterWithOptic</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:An_AffineFold\" title=\"Optics.AffineFold\">An_AffineFold</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m) =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is a b -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m b","name":"filterWithOptic","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithOptic"},{"display_html":"<a href=\"#v:filterWithPred\">filterWithPred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a","name":"filterWithPred","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithPred"},{"display_html":"<a href=\"#v:filterWithValuePred\">filterWithValuePred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a> -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"filterWithValuePred","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithValuePred"},{"display_html":"<a href=\"#v:filterWithOnlyAda\">filterWithOnlyAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a> -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"filterWithOnlyAda","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithOnlyAda"},{"display_html":"<a href=\"#v:filterWithNotOnlyAda\">filterWithNotOnlyAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:TxOut\" title=\"PlutusLedgerApi.V2.Tx\">TxOut</a> -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"filterWithNotOnlyAda","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithNotOnlyAda"},{"display_html":"<a href=\"#v:onlyValueOutputsAtSearch\">onlyValueOutputsAtSearch</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m, <a href=\"Cooked-Conversion-ToAddress.html#t:ToAddress\" title=\"Cooked.Conversion.ToAddress\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a> () <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>)","name":"onlyValueOutputsAtSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:onlyValueOutputsAtSearch"},{"display_html":"<a href=\"#v:vanillaOutputsAtSearch\">vanillaOutputsAtSearch</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m, <a href=\"Cooked-Conversion-ToAddress.html#t:ToAddress\" title=\"Cooked.Conversion.ToAddress\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a> () <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Ada.html#t:Ada\" title=\"Plutus.Script.Utils.Ada\">Ada</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>)","name":"vanillaOutputsAtSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:vanillaOutputsAtSearch"},{"display_html":"<a href=\"#v:filterWithAlways\">filterWithAlways</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; (a -&gt; b) -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m b","name":"filterWithAlways","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithAlways"},{"display_html":"<a href=\"#v:scriptOutputsSearch\">scriptOutputsSearch</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain\">MonadBlockChain</a> m, <a href=\"Cooked-Conversion-ToScriptHash.html#t:ToScriptHash\" title=\"Cooked.Conversion.ToScriptHash\">ToScriptHash</a> s) =&gt; s -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> s <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:OutputDatum\" title=\"PlutusLedgerApi.V2.Tx\">OutputDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>)","name":"scriptOutputsSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:scriptOutputsSearch"},{"display_html":"<a href=\"#v:referenceScriptOutputsSearch\">referenceScriptOutputsSearch</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain\">MonadBlockChain</a> m, <a href=\"Cooked-Conversion-ToScriptHash.html#t:ToScriptHash\" title=\"Cooked.Conversion.ToScriptHash\">ToScriptHash</a> s) =&gt; s -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:OutputDatum\" title=\"PlutusLedgerApi.V2.Tx\">OutputDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>)","name":"referenceScriptOutputsSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:referenceScriptOutputsSearch"},{"display_html":"<a href=\"#v:holdsInState\">holdsInState</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a> -&gt; <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"holdsInState","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:holdsInState"},{"display_html":"<a href=\"#v:utxoPayloadSet\">utxoPayloadSet</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayloadSet\" title=\"Cooked.MockChain.UtxoState\">UtxoPayloadSet</a> -&gt; [<a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a>]","name":"utxoPayloadSet","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoPayloadSet"},{"display_html":"<a href=\"#v:utxoPayloadTxOutRef\">utxoPayloadTxOutRef</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>","name":"utxoPayloadTxOutRef","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoPayloadTxOutRef"},{"display_html":"<a href=\"#v:utxoPayloadValue\">utxoPayloadValue</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"utxoPayloadValue","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoPayloadValue"},{"display_html":"<a href=\"#v:utxoPayloadSkelOutDatum\">utxoPayloadSkelOutDatum</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a>","name":"utxoPayloadSkelOutDatum","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoPayloadSkelOutDatum"},{"display_html":"<a href=\"#v:utxoPayloadReferenceScript\">utxoPayloadReferenceScript</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>","name":"utxoPayloadReferenceScript","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoPayloadReferenceScript"},{"display_html":"<a href=\"#v:mcstToEmulatedLedgerState\">mcstToEmulatedLedgerState</a> :: <a href=\"Cooked-MockChain.html#t:MockChainSt\" title=\"Cooked.MockChain\">MockChainSt</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Validation.html#t:EmulatedLedgerState\" title=\"Cardano.Node.Emulator.Internal.Node.Validation\">EmulatedLedgerState</a>","name":"mcstToEmulatedLedgerState","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mcstToEmulatedLedgerState"},{"display_html":"<a href=\"#v:combineMockChainT\">combineMockChainT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; (<span class=\"keyword\">forall</span> a. m a -&gt; m a -&gt; m a) -&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m x -&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m x -&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m x","name":"combineMockChainT","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:combineMockChainT"},{"display_html":"<a href=\"#v:mapMockChainT\">mapMockChainT</a> :: (m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain.html#t:MockChainSt\" title=\"Cooked.MockChain\">MockChainSt</a>)) -&gt; n (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (b, <a href=\"Cooked-MockChain.html#t:MockChainSt\" title=\"Cooked.MockChain\">MockChainSt</a>))) -&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m a -&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> n b","name":"mapMockChainT","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mapMockChainT"},{"display_html":"<a href=\"#v:runMockChainTRaw\">runMockChainTRaw</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:MockChainSt\" title=\"Cooked.MockChain\">MockChainSt</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain.html#t:MockChainSt\" title=\"Cooked.MockChain\">MockChainSt</a>))","name":"runMockChainTRaw","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runMockChainTRaw"},{"display_html":"<a href=\"#v:runMockChainTFrom\">runMockChainTFrom</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a>))","name":"runMockChainTFrom","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runMockChainTFrom"},{"display_html":"<a href=\"#v:mockChainSt0From\">mockChainSt0From</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainSt\" title=\"Cooked.MockChain\">MockChainSt</a>","name":"mockChainSt0From","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mockChainSt0From"},{"display_html":"<a href=\"#v:runMockChainT\">runMockChainT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m a -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a>))","name":"runMockChainT","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runMockChainT"},{"display_html":"<a href=\"#v:runMockChainRaw\">runMockChainRaw</a> :: <a href=\"Cooked-MockChain.html#t:MockChain\" title=\"Cooked.MockChain\">MockChain</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain.html#t:MockChainSt\" title=\"Cooked.MockChain\">MockChainSt</a>)","name":"runMockChainRaw","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runMockChainRaw"},{"display_html":"<a href=\"#v:runMockChainFrom\">runMockChainFrom</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChain\" title=\"Cooked.MockChain\">MockChain</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a>)","name":"runMockChainFrom","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runMockChainFrom"},{"display_html":"<a href=\"#v:runMockChain\">runMockChain</a> :: <a href=\"Cooked-MockChain.html#t:MockChain\" title=\"Cooked.MockChain\">MockChain</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a>)","name":"runMockChain","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runMockChain"},{"display_html":"<a href=\"#v:utxoState0\">utxoState0</a> :: <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a>","name":"utxoState0","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoState0"},{"display_html":"<a href=\"#v:mockChainSt0\">mockChainSt0</a> :: <a href=\"Cooked-MockChain.html#t:MockChainSt\" title=\"Cooked.MockChain\">MockChainSt</a>","name":"mockChainSt0","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mockChainSt0"},{"display_html":"<a href=\"#v:utxoIndex0\">utxoIndex0</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:UtxoIndex\" title=\"Ledger.Index.Internal\">UtxoIndex</a>","name":"utxoIndex0","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoIndex0"},{"display_html":"<a href=\"#v:utxoIndex0From\">utxoIndex0From</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:UtxoIndex\" title=\"Ledger.Index.Internal\">UtxoIndex</a>","name":"utxoIndex0From","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoIndex0From"},{"display_html":"<a href=\"#v:datumMap0From\">datumMap0From</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a> (<a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)","name":"datumMap0From","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:datumMap0From"},{"display_html":"<a href=\"#v:referenceScriptMap0From\">referenceScriptMap0From</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Validator\" title=\"Ledger.Typed.Scripts\">Validator</a>)","name":"referenceScriptMap0From","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:referenceScriptMap0From"},{"display_html":"<a href=\"#v:unMockChainLog\">unMockChainLog</a> :: <a href=\"Cooked-MockChain-Staged.html#t:MockChainLog\" title=\"Cooked.MockChain.Staged\">MockChainLog</a> -&gt; [<a href=\"Cooked-MockChain-Staged.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.Staged\">MockChainLogEntry</a>]","name":"unMockChainLog","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:unMockChainLog"},{"display_html":"<a href=\"#v:testBool\">testBool</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a> -&gt; prop","name":"testBool","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testBool"},{"display_html":"<a href=\"#v:testAll\">testAll</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; (a -&gt; prop) -&gt; [a] -&gt; prop","name":"testAll","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testAll"},{"display_html":"<a href=\"#v:testSucceeds\">testSucceeds</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testSucceeds","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testSucceeds"},{"display_html":"<a href=\"#v:testSucceedsFrom\">testSucceedsFrom</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testSucceedsFrom","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testSucceedsFrom"},{"display_html":"<a href=\"#v:testFails\">testFails</a> :: (<a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a) =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> -&gt; prop) -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testFails","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testFails"},{"display_html":"<a href=\"#v:testFailsFrom\">testFailsFrom</a> :: (<a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a) =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> -&gt; prop) -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testFailsFrom","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testFailsFrom"},{"display_html":"<a href=\"#v:testSucceedsFrom-39-\">testSucceedsFrom'</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (a -&gt; <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a> -&gt; prop) -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testSucceedsFrom'","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testSucceedsFrom-39-"},{"display_html":"<a href=\"#v:testAllSatisfiesFrom\">testAllSatisfiesFrom</a> :: <span class=\"keyword\">forall</span> prop a. <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a>) -&gt; prop) -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testAllSatisfiesFrom","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testAllSatisfiesFrom"},{"display_html":"<a href=\"#v:isCekEvaluationFailure\">isCekEvaluationFailure</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> -&gt; prop","name":"isCekEvaluationFailure","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:isCekEvaluationFailure"},{"display_html":"<a href=\"#v:isCekEvaluationFailureWithMsg\">isCekEvaluationFailureWithMsg</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> -&gt; prop","name":"isCekEvaluationFailureWithMsg","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:isCekEvaluationFailureWithMsg"},{"display_html":"<a href=\"#v:testSatisfiesFrom-39-\">testSatisfiesFrom'</a> :: ([(<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (a, <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a>), <a href=\"Cooked-MockChain-Staged.html#t:MockChainLog\" title=\"Cooked.MockChain.Staged\">MockChainLog</a>)] -&gt; prop) -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testSatisfiesFrom'","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testSatisfiesFrom-39-"},{"display_html":"<a href=\"#v:testBinaryRelatedBy\">testBinaryRelatedBy</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a> -&gt; <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a> -&gt; prop) -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testBinaryRelatedBy","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testBinaryRelatedBy"},{"display_html":"<a href=\"#v:testOneEquivClass\">testOneEquivClass</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; (<a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a> -&gt; <a href=\"Cooked-MockChain.html#t:UtxoState\" title=\"Cooked.MockChain\">UtxoState</a> -&gt; prop) -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; prop","name":"testOneEquivClass","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testOneEquivClass"},{"display_html":"<a href=\"#v:assertionToMaybe\">assertionToMaybe</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:HUnitFailure\" title=\"Test.Tasty.HUnit\">HUnitFailure</a>)","name":"assertionToMaybe","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:assertionToMaybe"},{"display_html":"<a href=\"#v:assertSubset\">assertSubset</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; [a] -&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a>","name":"assertSubset","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:assertSubset"},{"display_html":"<a href=\"#v:assertSameSets\">assertSameSets</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; [a] -&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a>","name":"assertSameSets","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:assertSameSets"},{"display_html":"<a href=\"#v:getValidityRangeTweak\">getValidityRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"getValidityRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:getValidityRangeTweak"},{"display_html":"<a href=\"#v:setValidityRangeTweak\">setValidityRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:setValidityRangeTweak"},{"display_html":"<a href=\"#v:setAlwaysValidRangeTweak\">setAlwaysValidRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setAlwaysValidRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:setAlwaysValidRangeTweak"},{"display_html":"<a href=\"#v:setValidityStartTweak\">setValidityStartTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityStartTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:setValidityStartTweak"},{"display_html":"<a href=\"#v:setValidityEndTweak\">setValidityEndTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityEndTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:setValidityEndTweak"},{"display_html":"<a href=\"#v:validityRangeSatisfiesTweak\">validityRangeSatisfiesTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"validityRangeSatisfiesTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:validityRangeSatisfiesTweak"},{"display_html":"<a href=\"#v:isValidAtTweak\">isValidAtTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidAtTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:isValidAtTweak"},{"display_html":"<a href=\"#v:isValidNowTweak\">isValidNowTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidNowTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:isValidNowTweak"},{"display_html":"<a href=\"#v:isValidDuringTweak\">isValidDuringTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidDuringTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:isValidDuringTweak"},{"display_html":"<a href=\"#v:hasEmptyTimeRangeTweak\">hasEmptyTimeRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasEmptyTimeRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:hasEmptyTimeRangeTweak"},{"display_html":"<a href=\"#v:hasFullTimeRangeTweak\">hasFullTimeRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasFullTimeRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:hasFullTimeRangeTweak"},{"display_html":"<a href=\"#v:intersectValidityRangeTweak\">intersectValidityRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"intersectValidityRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:intersectValidityRangeTweak"},{"display_html":"<a href=\"#v:centerAroundValidityRangeTweak\">centerAroundValidityRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"centerAroundValidityRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:centerAroundValidityRangeTweak"},{"display_html":"<a href=\"#v:makeValidityRangeSingletonTweak\">makeValidityRangeSingletonTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"makeValidityRangeSingletonTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:makeValidityRangeSingletonTweak"},{"display_html":"<a href=\"#v:makeValidityRangeNowTweak\">makeValidityRangeNowTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"makeValidityRangeNowTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:makeValidityRangeNowTweak"},{"display_html":"<a href=\"#v:waitUntilValidTweak\">waitUntilValidTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitUntilValidTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:waitUntilValidTweak"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:MonadPlus\" title=\"Distribution.Compat.Prelude\">MonadPlus</a> m, <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m) =&gt; <a href=\"#t:MonadTweak\">MonadTweak</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:getTxSkel\">getTxSkel</a> :: m <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a></li><li><a href=\"#v:putTxSkel\">putTxSkel</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m ()</li></ul>","name":"MonadTweak getTxSkel putTxSkel","module":"Cooked.Tweak","link":"Cooked-Tweak.html#t:MonadTweak"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PermutOutTweakMode\">PermutOutTweakMode</a><ul class=\"subs\"><li>= <a href=\"#v:KeepIdentity\">KeepIdentity</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>)</li><li>| <a href=\"#v:OmitIdentity\">OmitIdentity</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>)</li></ul>","name":"PermutOutTweakMode KeepIdentity OmitIdentity","module":"Cooked.Tweak","link":"Cooked-Tweak.html#t:PermutOutTweakMode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TamperDatumLbl\">TamperDatumLbl</a> = <a href=\"#v:TamperDatumLbl\">TamperDatumLbl</a>","name":"TamperDatumLbl TamperDatumLbl","module":"Cooked.Tweak","link":"Cooked-Tweak.html#t:TamperDatumLbl"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MalformDatumLbl\">MalformDatumLbl</a> = <a href=\"#v:MalformDatumLbl\">MalformDatumLbl</a>","name":"MalformDatumLbl MalformDatumLbl","module":"Cooked.Tweak","link":"Cooked-Tweak.html#t:MalformDatumLbl"},{"display_html":"<a href=\"#v:ensureInputTweak\">ensureInputTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>))","name":"ensureInputTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:ensureInputTweak"},{"display_html":"<a href=\"#v:addInputTweak\">addInputTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a> -&gt; m ()","name":"addInputTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addInputTweak"},{"display_html":"<a href=\"#v:removeInputTweak\">removeInputTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>)]","name":"removeInputTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:removeInputTweak"},{"display_html":"<a href=\"#v:ensureOutputTweak\">ensureOutputTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>)","name":"ensureOutputTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:ensureOutputTweak"},{"display_html":"<a href=\"#v:addOutputTweak\">addOutputTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; m ()","name":"addOutputTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addOutputTweak"},{"display_html":"<a href=\"#v:removeOutputTweak\">removeOutputTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; (<a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [<a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>]","name":"removeOutputTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:removeOutputTweak"},{"display_html":"<a href=\"#v:addMintTweak\">addMintTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>) -&gt; m ()","name":"addMintTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addMintTweak"},{"display_html":"<a href=\"#v:removeMintTweak\">removeMintTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; ((<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a>, <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)]","name":"removeMintTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:removeMintTweak"},{"display_html":"<a href=\"#v:failingTweak\">failingTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m a","name":"failingTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:failingTweak"},{"display_html":"<a href=\"#v:doNothingTweak\">doNothingTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m ()","name":"doNothingTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:doNothingTweak"},{"display_html":"<a href=\"#v:viewTweak\">viewTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; m a","name":"viewTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:viewTweak"},{"display_html":"<a href=\"#v:viewAllTweak\">viewAllTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Fold.html#t:A_Fold\" title=\"Optics.Fold\">A_Fold</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; m [a]","name":"viewAllTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:viewAllTweak"},{"display_html":"<a href=\"#v:setTweak\">setTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-IxSetter.html#t:A_Setter\" title=\"Optics.IxSetter\">A_Setter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; a -&gt; m ()","name":"setTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:setTweak"},{"display_html":"<a href=\"#v:overTweak\">overTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-IxSetter.html#t:A_Setter\" title=\"Optics.IxSetter\">A_Setter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (a -&gt; a) -&gt; m ()","name":"overTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:overTweak"},{"display_html":"<a href=\"#v:overMaybeTweak\">overMaybeTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; m [a]","name":"overMaybeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:overMaybeTweak"},{"display_html":"<a href=\"#v:overMaybeSelectingTweak\">overMaybeSelectingTweak</a> :: <span class=\"keyword\">forall</span> a m k is. (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [a]","name":"overMaybeSelectingTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:overMaybeSelectingTweak"},{"display_html":"<a href=\"#v:selectP\">selectP</a> :: (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> a a","name":"selectP","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:selectP"},{"display_html":"<a href=\"#v:combineModsTweak\">combineModsTweak</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> is, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>, <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m) =&gt; ([is] -&gt; [[is]]) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> x -&gt; (is -&gt; x -&gt; m [(x, l)]) -&gt; m [l]","name":"combineModsTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:combineModsTweak"},{"display_html":"<a href=\"#v:iviewTweak\">iviewTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; m (is, a)","name":"iviewTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:iviewTweak"},{"display_html":"<a href=\"#v:addLabelTweak\">addLabelTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"Cooked-Skeleton.html#t:LabelConstrs\" title=\"Cooked.Skeleton\">LabelConstrs</a> x) =&gt; x -&gt; m ()","name":"addLabelTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addLabelTweak"},{"display_html":"<a href=\"#v:removeLabelTweak\">removeLabelTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"Cooked-Skeleton.html#t:LabelConstrs\" title=\"Cooked.Skeleton\">LabelConstrs</a> x) =&gt; x -&gt; m ()","name":"removeLabelTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:removeLabelTweak"},{"display_html":"<a href=\"#v:hasLabelTweak\">hasLabelTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"Cooked-Skeleton.html#t:LabelConstrs\" title=\"Cooked.Skeleton\">LabelConstrs</a> x) =&gt; x -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasLabelTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:hasLabelTweak"},{"display_html":"<a href=\"#v:allOutPermutsTweak\">allOutPermutsTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Tweak.html#t:PermutOutTweakMode\" title=\"Cooked.Tweak\">PermutOutTweakMode</a> -&gt; m ()","name":"allOutPermutsTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:allOutPermutsTweak"},{"display_html":"<a href=\"#v:singleOutPermutTweak\">singleOutPermutTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a> -&gt; m ()","name":"singleOutPermutTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:singleOutPermutTweak"},{"display_html":"<a href=\"#v:getSignersTweak\">getSignersTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"getSignersTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:getSignersTweak"},{"display_html":"<a href=\"#v:modifySignersTweak\">modifySignersTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; ([<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]) -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"modifySignersTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:modifySignersTweak"},{"display_html":"<a href=\"#v:setSignersTweak\">setSignersTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"setSignersTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:setSignersTweak"},{"display_html":"<a href=\"#v:signersSatisfyTweak\">signersSatisfyTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; ([<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"signersSatisfyTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:signersSatisfyTweak"},{"display_html":"<a href=\"#v:isSignerTweak\">isSignerTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isSignerTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:isSignerTweak"},{"display_html":"<a href=\"#v:hasSignersTweak\">hasSignersTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasSignersTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:hasSignersTweak"},{"display_html":"<a href=\"#v:addFirstSignerTweak\">addFirstSignerTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"addFirstSignerTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addFirstSignerTweak"},{"display_html":"<a href=\"#v:addSignersTweak\">addSignersTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"addSignersTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addSignersTweak"},{"display_html":"<a href=\"#v:addLastSignerTweak\">addLastSignerTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"addLastSignerTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addLastSignerTweak"},{"display_html":"<a href=\"#v:removeSignersTweak\">removeSignersTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"removeSignersTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:removeSignersTweak"},{"display_html":"<a href=\"#v:removeSignerTweak\">removeSignerTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"removeSignerTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:removeSignerTweak"},{"display_html":"<a href=\"#v:replaceFirstSignerTweak\">replaceFirstSignerTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"replaceFirstSignerTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:replaceFirstSignerTweak"},{"display_html":"<a href=\"#v:tamperDatumTweak\">tamperDatumTweak</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:FromData\" title=\"PlutusLedgerApi.V1\">FromData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; m [a]","name":"tamperDatumTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:tamperDatumTweak"},{"display_html":"<a href=\"#v:malformDatumTweak\">malformDatumTweak</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:FromData\" title=\"PlutusLedgerApi.V1\">FromData</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a) =&gt; (a -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:BuiltinData\" title=\"PlutusLedgerApi.V1\">BuiltinData</a>]) -&gt; m ()","name":"malformDatumTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:malformDatumTweak"},{"display_html":"<a href=\"#v:getValidityRangeTweak\">getValidityRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"getValidityRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:getValidityRangeTweak"},{"display_html":"<a href=\"#v:setValidityRangeTweak\">setValidityRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:setValidityRangeTweak"},{"display_html":"<a href=\"#v:setAlwaysValidRangeTweak\">setAlwaysValidRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setAlwaysValidRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:setAlwaysValidRangeTweak"},{"display_html":"<a href=\"#v:setValidityStartTweak\">setValidityStartTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityStartTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:setValidityStartTweak"},{"display_html":"<a href=\"#v:setValidityEndTweak\">setValidityEndTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityEndTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:setValidityEndTweak"},{"display_html":"<a href=\"#v:validityRangeSatisfiesTweak\">validityRangeSatisfiesTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"validityRangeSatisfiesTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:validityRangeSatisfiesTweak"},{"display_html":"<a href=\"#v:isValidAtTweak\">isValidAtTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidAtTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:isValidAtTweak"},{"display_html":"<a href=\"#v:isValidNowTweak\">isValidNowTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidNowTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:isValidNowTweak"},{"display_html":"<a href=\"#v:isValidDuringTweak\">isValidDuringTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidDuringTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:isValidDuringTweak"},{"display_html":"<a href=\"#v:hasEmptyTimeRangeTweak\">hasEmptyTimeRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasEmptyTimeRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:hasEmptyTimeRangeTweak"},{"display_html":"<a href=\"#v:hasFullTimeRangeTweak\">hasFullTimeRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasFullTimeRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:hasFullTimeRangeTweak"},{"display_html":"<a href=\"#v:intersectValidityRangeTweak\">intersectValidityRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"intersectValidityRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:intersectValidityRangeTweak"},{"display_html":"<a href=\"#v:centerAroundValidityRangeTweak\">centerAroundValidityRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"centerAroundValidityRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:centerAroundValidityRangeTweak"},{"display_html":"<a href=\"#v:makeValidityRangeSingletonTweak\">makeValidityRangeSingletonTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"makeValidityRangeSingletonTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:makeValidityRangeSingletonTweak"},{"display_html":"<a href=\"#v:makeValidityRangeNowTweak\">makeValidityRangeNowTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"makeValidityRangeNowTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:makeValidityRangeNowTweak"},{"display_html":"<a href=\"#v:waitUntilValidTweak\">waitUntilValidTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitUntilValidTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:waitUntilValidTweak"},{"display_html":"<a href=\"#v:redirectScriptOutputTweak\">redirectScriptOutputTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a)) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:TypedValidator\" title=\"Ledger.Typed.Scripts\">TypedValidator</a> a) <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>)) -&gt; (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:TypedValidator\" title=\"Ledger.Typed.Scripts\">TypedValidator</a> a) <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:TypedValidator\" title=\"Ledger.Typed.Scripts\">TypedValidator</a> a)) -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:TypedValidator\" title=\"Ledger.Typed.Scripts\">TypedValidator</a> a) <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>)]","name":"redirectScriptOutputTweak","module":"Cooked.Attack.DatumHijacking","link":"Cooked-Attack-DatumHijacking.html#v:redirectScriptOutputTweak"},{"display_html":"<a href=\"#v:datumHijackingAttack\">datumHijackingAttack</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:ToData\" title=\"PlutusLedgerApi.V1\">ToData</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:UnsafeFromData\" title=\"PlutusLedgerApi.V1\">UnsafeFromData</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1.html#t:UnsafeFromData\" title=\"PlutusLedgerApi.V1\">UnsafeFromData</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:RedeemerType\" title=\"Ledger.Typed.Scripts\">RedeemerType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:DatumType\" title=\"Ledger.Typed.Scripts\">DatumType</a> a), <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> a) =&gt; (<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:TypedValidator\" title=\"Ledger.Typed.Scripts\">TypedValidator</a> a) <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [<a href=\"Cooked-Output.html#t:ConcreteOutput\" title=\"Cooked.Output\">ConcreteOutput</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:TypedValidator\" title=\"Ledger.Typed.Scripts\">TypedValidator</a> a) <a href=\"Cooked-Skeleton.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton\">TxSkelOutDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>)]","name":"datumHijackingAttack","module":"Cooked.Attack.DatumHijacking","link":"Cooked-Attack-DatumHijacking.html#v:datumHijackingAttack"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:DatumHijackingLbl\">DatumHijackingLbl</a> = <a href=\"#v:DatumHijackingLbl\">DatumHijackingLbl</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a>","name":"DatumHijackingLbl DatumHijackingLbl","module":"Cooked.Attack.DatumHijacking","link":"Cooked-Attack-DatumHijacking.html#t:DatumHijackingLbl"},{"display_html":"<a href=\"#v:dupTokenAttack\">dupTokenAttack</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:AssetClass\" title=\"PlutusLedgerApi.V1.Value\">AssetClass</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>) -&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"dupTokenAttack","module":"Cooked.Attack.DupToken","link":"Cooked-Attack-DupToken.html#v:dupTokenAttack"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DupTokenLbl\">DupTokenLbl</a> = <a href=\"#v:DupTokenLbl\">DupTokenLbl</a>","name":"DupTokenLbl DupTokenLbl","module":"Cooked.Attack.DupToken","link":"Cooked-Attack-DupToken.html#t:DupTokenLbl"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DoubleSatDelta\">DoubleSatDelta</a> = (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"Cooked-Skeleton.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton\">TxSkelRedeemer</a>, [<a href=\"Cooked-Skeleton.html#t:TxSkelOut\" title=\"Cooked.Skeleton\">TxSkelOut</a>], <a href=\"Cooked-Skeleton.html#t:TxSkelMints\" title=\"Cooked.Skeleton\">TxSkelMints</a>)","name":"DoubleSatDelta","module":"Cooked.Attack.DoubleSat","link":"Cooked-Attack-DoubleSat.html#t:DoubleSatDelta"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DoubleSatLbl\">DoubleSatLbl</a> = <a href=\"#v:DoubleSatLbl\">DoubleSatLbl</a>","name":"DoubleSatLbl DoubleSatLbl","module":"Cooked.Attack.DoubleSat","link":"Cooked-Attack-DoubleSat.html#t:DoubleSatLbl"},{"display_html":"<a href=\"#v:doubleSatAttack\">doubleSatAttack</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> is, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; ([is] -&gt; [[is]]) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (is -&gt; a -&gt; m [(a, <a href=\"Cooked-Attack-DoubleSat.html#t:DoubleSatDelta\" title=\"Cooked.Attack.DoubleSat\">DoubleSatDelta</a>)]) -&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m ()","name":"doubleSatAttack","module":"Cooked.Attack.DoubleSat","link":"Cooked-Attack-DoubleSat.html#v:doubleSatAttack"},{"display_html":"<a href=\"#v:addTokenAttack\">addTokenAttack</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:Versioned\" title=\"Ledger.Typed.Scripts\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Typed-Scripts.html#t:MintingPolicy\" title=\"Ledger.Typed.Scripts\">MintingPolicy</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)]) -&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"addTokenAttack","module":"Cooked.Attack.AddToken","link":"Cooked-Attack-AddToken.html#v:addTokenAttack"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:AddTokenLbl\">AddTokenLbl</a> = <a href=\"#v:AddTokenLbl\">AddTokenLbl</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>","name":"AddTokenLbl AddTokenLbl","module":"Cooked.Attack.AddToken","link":"Cooked-Attack-AddToken.html#t:AddTokenLbl"},{"display_html":"module <a href=\"Cooked-Attack-DupToken.html\">Cooked.Attack.DupToken</a>","name":"","module":"Cooked.Attack","link":""},{"display_html":"module <a href=\"Cooked-Attack-DoubleSat.html\">Cooked.Attack.DoubleSat</a>","name":"","module":"Cooked.Attack","link":""},{"display_html":"module <a href=\"Cooked-Attack-DatumHijacking.html\">Cooked.Attack.DatumHijacking</a>","name":"","module":"Cooked.Attack","link":""},{"display_html":"module <a href=\"Cooked-Attack-AddToken.html\">Cooked.Attack.AddToken</a>","name":"","module":"Cooked.Attack","link":""},{"display_html":"module <a href=\"Cooked-Wallet.html\">Cooked.Wallet</a>","name":"","module":"Cooked","link":""},{"display_html":"module <a href=\"Cooked-ValueUtils.html\">Cooked.ValueUtils</a>","name":"","module":"Cooked","link":""},{"display_html":"module <a href=\"Cooked-Validators.html\">Cooked.Validators</a>","name":"","module":"Cooked","link":""},{"display_html":"module <a href=\"Cooked-Tweak.html\">Cooked.Tweak</a>","name":"","module":"Cooked","link":""},{"display_html":"module <a href=\"Cooked-Skeleton.html\">Cooked.Skeleton</a>","name":"","module":"Cooked","link":""},{"display_html":"module <a href=\"Cooked-ShowBS.html\">Cooked.ShowBS</a>","name":"","module":"Cooked","link":""},{"display_html":"module <a href=\"Cooked-Pretty.html\">Cooked.Pretty</a>","name":"","module":"Cooked","link":""},{"display_html":"module <a href=\"Cooked-Output.html\">Cooked.Output</a>","name":"","module":"Cooked","link":""},{"display_html":"module <a href=\"Cooked-MockChain.html\">Cooked.MockChain</a>","name":"","module":"Cooked","link":""},{"display_html":"module <a href=\"Cooked-InitialDistribution.html\">Cooked.InitialDistribution</a>","name":"","module":"Cooked","link":""},{"display_html":"module <a href=\"Cooked-Currencies.html\">Cooked.Currencies</a>","name":"","module":"Cooked","link":""},{"display_html":"module <a href=\"Cooked-Conversion.html\">Cooked.Conversion</a>","name":"","module":"Cooked","link":""},{"display_html":"module <a href=\"Cooked-Attack.html\">Cooked.Attack</a>","name":"","module":"Cooked","link":""},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"#t:MonadModal\">MonadModal</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:Modification\">Modification</a> m :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a></li><li><a href=\"#v:modifyLtl\">modifyLtl</a> :: <a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> (<a href=\"Cooked.html#t:Modification\" title=\"Cooked\">Modification</a> m) -&gt; m a -&gt; m a</li></ul>","name":"MonadModal Modification modifyLtl","module":"Cooked","link":"Cooked.html#t:MonadModal"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Ltl\">Ltl</a> a<ul class=\"subs\"><li>= <a href=\"#v:LtlTruth\">LtlTruth</a></li><li>| <a href=\"#v:LtlFalsity\">LtlFalsity</a></li><li>| <a href=\"#v:LtlAtom\">LtlAtom</a> a</li><li>| <a href=\"#v:LtlOr\">LtlOr</a> (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a) (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a)</li><li>| <a href=\"#v:LtlAnd\">LtlAnd</a> (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a) (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a)</li><li>| <a href=\"#v:LtlNext\">LtlNext</a> (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a)</li><li>| <a href=\"#v:LtlUntil\">LtlUntil</a> (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a) (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a)</li><li>| <a href=\"#v:LtlRelease\">LtlRelease</a> (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a) (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a)</li></ul>","name":"Ltl LtlTruth LtlFalsity LtlAtom LtlOr LtlAnd LtlNext LtlUntil LtlRelease","module":"Cooked","link":"Cooked.html#t:Ltl"}]