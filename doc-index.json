[{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Ltl\">Ltl</a> a<ul class=\"subs\"><li>= <a href=\"#v:LtlTruth\">LtlTruth</a></li><li>| <a href=\"#v:LtlFalsity\">LtlFalsity</a></li><li>| <a href=\"#v:LtlAtom\">LtlAtom</a> a</li><li>| <a href=\"#v:LtlOr\">LtlOr</a> (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a) (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a)</li><li>| <a href=\"#v:LtlAnd\">LtlAnd</a> (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a) (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a)</li><li>| <a href=\"#v:LtlNext\">LtlNext</a> (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a)</li><li>| <a href=\"#v:LtlUntil\">LtlUntil</a> (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a) (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a)</li><li>| <a href=\"#v:LtlRelease\">LtlRelease</a> (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a) (<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a)</li></ul>","name":"Ltl LtlTruth LtlFalsity LtlAtom LtlOr LtlAnd LtlNext LtlUntil LtlRelease","module":"Cooked.Ltl","link":"Cooked-Ltl.html#t:Ltl"},{"display_html":"<a href=\"#v:nowLater\">nowLater</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Semigroup.html#t:Monoid\" title=\"Distribution.Compat.Semigroup\">Monoid</a> a =&gt; <a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a -&gt; [(a, <a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a)]","name":"nowLater","module":"Cooked.Ltl","link":"Cooked-Ltl.html#v:nowLater"},{"display_html":"<a href=\"#v:nowLaterList\">nowLaterList</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Semigroup.html#t:Monoid\" title=\"Distribution.Compat.Semigroup\">Monoid</a> a =&gt; [<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a] -&gt; [(a, [<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a])]","name":"nowLaterList","module":"Cooked.Ltl","link":"Cooked-Ltl.html#v:nowLaterList"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LtlOp\">LtlOp</a> (modification :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (builtin :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:StartLtl\">StartLtl</a> :: <a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> modification -&gt; <a href=\"Cooked-Ltl.html#t:LtlOp\" title=\"Cooked.Ltl\">LtlOp</a> modification builtin ()</li><li><a href=\"#v:StopLtl\">StopLtl</a> :: <a href=\"Cooked-Ltl.html#t:LtlOp\" title=\"Cooked.Ltl\">LtlOp</a> modification builtin ()</li><li><a href=\"#v:Builtin\">Builtin</a> :: builtin a -&gt; <a href=\"Cooked-Ltl.html#t:LtlOp\" title=\"Cooked.Ltl\">LtlOp</a> modification builtin a</li></ul>","name":"LtlOp Builtin StartLtl StopLtl","module":"Cooked.Ltl","link":"Cooked-Ltl.html#t:LtlOp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Staged\">Staged</a> (op :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:Return\">Return</a> :: a -&gt; <a href=\"Cooked-Ltl.html#t:Staged\" title=\"Cooked.Ltl\">Staged</a> op a</li><li><a href=\"#v:Instr\">Instr</a> :: op a -&gt; (a -&gt; <a href=\"Cooked-Ltl.html#t:Staged\" title=\"Cooked.Ltl\">Staged</a> op b) -&gt; <a href=\"Cooked-Ltl.html#t:Staged\" title=\"Cooked.Ltl\">Staged</a> op b</li></ul>","name":"Staged Return Instr","module":"Cooked.Ltl","link":"Cooked-Ltl.html#t:Staged"},{"display_html":"<a href=\"#v:interpLtl\">interpLtl</a> :: <a href=\"Cooked-Ltl.html#t:InterpLtl\" title=\"Cooked.Ltl\">InterpLtl</a> modification builtin m =&gt; <a href=\"Cooked-Ltl.html#t:Staged\" title=\"Cooked.Ltl\">Staged</a> (<a href=\"Cooked-Ltl.html#t:LtlOp\" title=\"Cooked.Ltl\">LtlOp</a> modification builtin) a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:StateT\" title=\"Cardano.Prelude\">StateT</a> [<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> modification] m a","name":"interpLtl","module":"Cooked.Ltl","link":"Cooked-Ltl.html#v:interpLtl"},{"display_html":"<a href=\"#v:interpLtlAndPruneUnfinished\">interpLtlAndPruneUnfinished</a> :: <a href=\"Cooked-Ltl.html#t:InterpLtl\" title=\"Cooked.Ltl\">InterpLtl</a> modification builtin m =&gt; <a href=\"Cooked-Ltl.html#t:Staged\" title=\"Cooked.Ltl\">Staged</a> (<a href=\"Cooked-Ltl.html#t:LtlOp\" title=\"Cooked.Ltl\">LtlOp</a> modification builtin) a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:StateT\" title=\"Cardano.Prelude\">StateT</a> [<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> modification] m a","name":"interpLtlAndPruneUnfinished","module":"Cooked.Ltl","link":"Cooked-Ltl.html#v:interpLtlAndPruneUnfinished"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:MonadPlus\" title=\"Distribution.Compat.Prelude\">MonadPlus</a> m =&gt; <a href=\"#t:InterpLtl\">InterpLtl</a> modification builtin m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:interpBuiltin\">interpBuiltin</a> :: builtin a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:StateT\" title=\"Cardano.Prelude\">StateT</a> [<a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> modification] m a</li></ul>","name":"InterpLtl interpBuiltin","module":"Cooked.Ltl","link":"Cooked-Ltl.html#t:InterpLtl"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"#t:MonadModal\">MonadModal</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:Modification\">Modification</a> m :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a></li><li><a href=\"#v:modifyLtl\">modifyLtl</a> :: <a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> (<a href=\"Cooked-Ltl.html#t:Modification\" title=\"Cooked.Ltl\">Modification</a> m) -&gt; m a -&gt; m a</li></ul>","name":"MonadModal Modification modifyLtl","module":"Cooked.Ltl","link":"Cooked-Ltl.html#t:MonadModal"},{"display_html":"<a href=\"#v:ltlDelay\">ltlDelay</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a -&gt; <a href=\"Cooked-Ltl.html#t:Ltl\" title=\"Cooked.Ltl\">Ltl</a> a","name":"ltlDelay","module":"Cooked.Ltl","link":"Cooked-Ltl.html#v:ltlDelay"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ShowBS\">ShowBS</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:showBS\">showBS</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Builtins-Internal.html#t:BuiltinString\" title=\"PlutusTx.Builtins.Internal\">BuiltinString</a></li></ul>","name":"ShowBS showBS","module":"Cooked.ShowBS","link":"Cooked-ShowBS.html#t:ShowBS"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ReferenceScriptConstrs\">ReferenceScriptConstrs</a> refScript = (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> refScript, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> refScript)","name":"ReferenceScriptConstrs","module":"Cooked.Skeleton.ReferenceScript","link":"Cooked-Skeleton-ReferenceScript.html#t:ReferenceScriptConstrs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelOutReferenceScript\">TxSkelOutReferenceScript</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:NoTxSkelOutReferenceScript\">NoTxSkelOutReferenceScript</a> :: <a href=\"Cooked-Skeleton-ReferenceScript.html#t:TxSkelOutReferenceScript\" title=\"Cooked.Skeleton.ReferenceScript\">TxSkelOutReferenceScript</a></li><li><a href=\"#v:SomeTxSkelOutReferenceScript\">SomeTxSkelOutReferenceScript</a> :: <a href=\"Cooked-Skeleton-ReferenceScript.html#t:ReferenceScriptConstrs\" title=\"Cooked.Skeleton.ReferenceScript\">ReferenceScriptConstrs</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton-ReferenceScript.html#t:TxSkelOutReferenceScript\" title=\"Cooked.Skeleton.ReferenceScript\">TxSkelOutReferenceScript</a></li></ul>","name":"TxSkelOutReferenceScript NoTxSkelOutReferenceScript SomeTxSkelOutReferenceScript","module":"Cooked.Skeleton.ReferenceScript","link":"Cooked-Skeleton-ReferenceScript.html#t:TxSkelOutReferenceScript"},{"display_html":"<a href=\"#v:txSkelOutReferenceScriptHashAF\">txSkelOutReferenceScriptHashAF</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:AffineFold\" title=\"Optics.AffineFold\">AffineFold</a> <a href=\"Cooked-Skeleton-ReferenceScript.html#t:TxSkelOutReferenceScript\" title=\"Cooked.Skeleton.ReferenceScript\">TxSkelOutReferenceScript</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>","name":"txSkelOutReferenceScriptHashAF","module":"Cooked.Skeleton.ReferenceScript","link":"Cooked-Skeleton-ReferenceScript.html#v:txSkelOutReferenceScriptHashAF"},{"display_html":"<a href=\"#v:txSkelOutReferenceScriptTypedP\">txSkelOutReferenceScriptTypedP</a> :: (<a href=\"Cooked-Skeleton-ReferenceScript.html#t:ReferenceScriptConstrs\" title=\"Cooked.Skeleton.ReferenceScript\">ReferenceScriptConstrs</a> a, <a href=\"Cooked-Skeleton-ReferenceScript.html#t:ReferenceScriptConstrs\" title=\"Cooked.Skeleton.ReferenceScript\">ReferenceScriptConstrs</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism\" title=\"Optics.Prism\">Prism</a> <a href=\"Cooked-Skeleton-ReferenceScript.html#t:TxSkelOutReferenceScript\" title=\"Cooked.Skeleton.ReferenceScript\">TxSkelOutReferenceScript</a> <a href=\"Cooked-Skeleton-ReferenceScript.html#t:TxSkelOutReferenceScript\" title=\"Cooked.Skeleton.ReferenceScript\">TxSkelOutReferenceScript</a> a b","name":"txSkelOutReferenceScriptTypedP","module":"Cooked.Skeleton.ReferenceScript","link":"Cooked-Skeleton-ReferenceScript.html#v:txSkelOutReferenceScriptTypedP"},{"display_html":"<a href=\"#v:txSkelOutReferenceScriptVersionedP\">txSkelOutReferenceScriptVersionedP</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> <a href=\"Cooked-Skeleton-ReferenceScript.html#t:TxSkelOutReferenceScript\" title=\"Cooked.Skeleton.ReferenceScript\">TxSkelOutReferenceScript</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>)","name":"txSkelOutReferenceScriptVersionedP","module":"Cooked.Skeleton.ReferenceScript","link":"Cooked-Skeleton-ReferenceScript.html#v:txSkelOutReferenceScriptVersionedP"},{"display_html":"<a href=\"#v:knownWallets\">knownWallets</a> :: [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"knownWallets","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:knownWallets"},{"display_html":"<a href=\"#v:wallet\">wallet</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>","name":"wallet","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:wallet"},{"display_html":"<a href=\"#v:walletPKHashToId\">walletPKHashToId</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>","name":"walletPKHashToId","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletPKHashToId"},{"display_html":"<a href=\"#v:walletPKHashToWallet\">walletPKHashToWallet</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>","name":"walletPKHashToWallet","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletPKHashToWallet"},{"display_html":"<a href=\"#v:walletPK\">walletPK</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Crypto.html#t:PubKey\" title=\"Ledger.Crypto\">PubKey</a>","name":"walletPK","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletPK"},{"display_html":"<a href=\"#v:walletStakingPK\">walletStakingPK</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Crypto.html#t:PubKey\" title=\"Ledger.Crypto\">PubKey</a>","name":"walletStakingPK","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletStakingPK"},{"display_html":"<a href=\"#v:walletStakingPKHash\">walletStakingPKHash</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a>","name":"walletStakingPKHash","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletStakingPKHash"},{"display_html":"<a href=\"#v:walletSK\">walletSK</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Crypto-Wallet.html#t:XPrv\" title=\"Cardano.Crypto.Wallet\">XPrv</a>","name":"walletSK","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletSK"},{"display_html":"<a href=\"#v:walletStakingSK\">walletStakingSK</a> :: <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Crypto-Wallet.html#t:XPrv\" title=\"Cardano.Crypto.Wallet\">XPrv</a>","name":"walletStakingSK","module":"Cooked.Wallet","link":"Cooked-Wallet.html#v:walletStakingSK"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Wallet\">Wallet</a> = <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-CardanoWallet.html#t:MockWallet\" title=\"Ledger.CardanoWallet\">MockWallet</a>","name":"Wallet","module":"Cooked.Wallet","link":"Cooked-Wallet.html#t:Wallet"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BalanceOutputPolicy\">BalanceOutputPolicy</a><ul class=\"subs\"><li>= <a href=\"#v:AdjustExistingOutput\">AdjustExistingOutput</a></li><li>| <a href=\"#v:DontAdjustExistingOutput\">DontAdjustExistingOutput</a></li></ul>","name":"BalanceOutputPolicy AdjustExistingOutput DontAdjustExistingOutput","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#t:BalanceOutputPolicy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FeePolicy\">FeePolicy</a><ul class=\"subs\"><li>= <a href=\"#v:AutoFeeComputation\">AutoFeeComputation</a></li><li>| <a href=\"#v:ManualFee\">ManualFee</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a></li></ul>","name":"FeePolicy AutoFeeComputation ManualFee","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#t:FeePolicy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BalancingPolicy\">BalancingPolicy</a><ul class=\"subs\"><li>= <a href=\"#v:BalanceWithFirstSigner\">BalanceWithFirstSigner</a></li><li>| <a href=\"#v:BalanceWith\">BalanceWith</a> <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a></li><li>| <a href=\"#v:DoNotBalance\">DoNotBalance</a></li></ul>","name":"BalancingPolicy BalanceWithFirstSigner BalanceWith DoNotBalance","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#t:BalancingPolicy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BalancingUtxos\">BalancingUtxos</a><ul class=\"subs\"><li>= <a href=\"#v:BalancingUtxosFromBalancingWallet\">BalancingUtxosFromBalancingWallet</a></li><li>| <a href=\"#v:BalancingUtxosFromSet\">BalancingUtxosFromSet</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>)</li></ul>","name":"BalancingUtxos BalancingUtxosFromBalancingWallet BalancingUtxosFromSet","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#t:BalancingUtxos"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CollateralUtxos\">CollateralUtxos</a><ul class=\"subs\"><li>= <a href=\"#v:CollateralUtxosFromBalancingWallet\">CollateralUtxosFromBalancingWallet</a></li><li>| <a href=\"#v:CollateralUtxosFromWallet\">CollateralUtxosFromWallet</a> <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a></li><li>| <a href=\"#v:CollateralUtxosFromSet\">CollateralUtxosFromSet</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>) <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a></li></ul>","name":"CollateralUtxos CollateralUtxosFromBalancingWallet CollateralUtxosFromWallet CollateralUtxosFromSet","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#t:CollateralUtxos"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AnchorResolution\">AnchorResolution</a><ul class=\"subs\"><li>= <a href=\"#v:AnchorResolutionLocal\">AnchorResolutionLocal</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> <a href=\"https://hackage.haskell.org/package/-/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a>)</li><li>| <a href=\"#v:AnchorResolutionHttp\">AnchorResolutionHttp</a></li></ul>","name":"AnchorResolution AnchorResolutionLocal AnchorResolutionHttp","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#t:AnchorResolution"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelOpts\">TxSkelOpts</a> = <a href=\"#v:TxSkelOpts\">TxSkelOpts</a> {<ul class=\"subs\"><li><a href=\"#v:txSkelOptAutoSlotIncrease\">txSkelOptAutoSlotIncrease</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:txSkelOptModTx\">txSkelOptModTx</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a></li><li><a href=\"#v:txSkelOptBalancingPolicy\">txSkelOptBalancingPolicy</a> :: <a href=\"Cooked-Skeleton-Option.html#t:BalancingPolicy\" title=\"Cooked.Skeleton.Option\">BalancingPolicy</a></li><li><a href=\"#v:txSkelOptFeePolicy\">txSkelOptFeePolicy</a> :: <a href=\"Cooked-Skeleton-Option.html#t:FeePolicy\" title=\"Cooked.Skeleton.Option\">FeePolicy</a></li><li><a href=\"#v:txSkelOptBalanceOutputPolicy\">txSkelOptBalanceOutputPolicy</a> :: <a href=\"Cooked-Skeleton-Option.html#t:BalanceOutputPolicy\" title=\"Cooked.Skeleton.Option\">BalanceOutputPolicy</a></li><li><a href=\"#v:txSkelOptBalancingUtxos\">txSkelOptBalancingUtxos</a> :: <a href=\"Cooked-Skeleton-Option.html#t:BalancingUtxos\" title=\"Cooked.Skeleton.Option\">BalancingUtxos</a></li><li><a href=\"#v:txSkelOptModParams\">txSkelOptModParams</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a></li><li><a href=\"#v:txSkelOptCollateralUtxos\">txSkelOptCollateralUtxos</a> :: <a href=\"Cooked-Skeleton-Option.html#t:CollateralUtxos\" title=\"Cooked.Skeleton.Option\">CollateralUtxos</a></li><li><a href=\"#v:txSkelOptAnchorResolution\">txSkelOptAnchorResolution</a> :: <a href=\"Cooked-Skeleton-Option.html#t:AnchorResolution\" title=\"Cooked.Skeleton.Option\">AnchorResolution</a></li></ul>}","name":"TxSkelOpts TxSkelOpts txSkelOptAutoSlotIncrease txSkelOptModTx txSkelOptBalancingPolicy txSkelOptFeePolicy txSkelOptBalanceOutputPolicy txSkelOptBalancingUtxos txSkelOptModParams txSkelOptCollateralUtxos txSkelOptAnchorResolution","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#t:TxSkelOpts"},{"display_html":"<a href=\"#v:txSkelOptModTxL\">txSkelOptModTxL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"txSkelOptModTxL","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#v:txSkelOptModTxL"},{"display_html":"<a href=\"#v:txSkelOptAutoSlotIncreaseL\">txSkelOptAutoSlotIncreaseL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"txSkelOptAutoSlotIncreaseL","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#v:txSkelOptAutoSlotIncreaseL"},{"display_html":"<a href=\"#v:txSkelOptBalancingPolicyL\">txSkelOptBalancingPolicyL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a> <a href=\"Cooked-Skeleton-Option.html#t:BalancingPolicy\" title=\"Cooked.Skeleton.Option\">BalancingPolicy</a>","name":"txSkelOptBalancingPolicyL","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#v:txSkelOptBalancingPolicyL"},{"display_html":"<a href=\"#v:txSkelOptBalanceOutputPolicyL\">txSkelOptBalanceOutputPolicyL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a> <a href=\"Cooked-Skeleton-Option.html#t:BalanceOutputPolicy\" title=\"Cooked.Skeleton.Option\">BalanceOutputPolicy</a>","name":"txSkelOptBalanceOutputPolicyL","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#v:txSkelOptBalanceOutputPolicyL"},{"display_html":"<a href=\"#v:txSkelOptFeePolicyL\">txSkelOptFeePolicyL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a> <a href=\"Cooked-Skeleton-Option.html#t:FeePolicy\" title=\"Cooked.Skeleton.Option\">FeePolicy</a>","name":"txSkelOptFeePolicyL","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#v:txSkelOptFeePolicyL"},{"display_html":"<a href=\"#v:txSkelOptBalancingUtxosL\">txSkelOptBalancingUtxosL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a> <a href=\"Cooked-Skeleton-Option.html#t:BalancingUtxos\" title=\"Cooked.Skeleton.Option\">BalancingUtxos</a>","name":"txSkelOptBalancingUtxosL","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#v:txSkelOptBalancingUtxosL"},{"display_html":"<a href=\"#v:txSkelOptModParamsL\">txSkelOptModParamsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a>)","name":"txSkelOptModParamsL","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#v:txSkelOptModParamsL"},{"display_html":"<a href=\"#v:txSkelOptCollateralUtxosL\">txSkelOptCollateralUtxosL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a> <a href=\"Cooked-Skeleton-Option.html#t:CollateralUtxos\" title=\"Cooked.Skeleton.Option\">CollateralUtxos</a>","name":"txSkelOptCollateralUtxosL","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#v:txSkelOptCollateralUtxosL"},{"display_html":"<a href=\"#v:txSkelOptAnchorResolutionL\">txSkelOptAnchorResolutionL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a> <a href=\"Cooked-Skeleton-Option.html#t:AnchorResolution\" title=\"Cooked.Skeleton.Option\">AnchorResolution</a>","name":"txSkelOptAnchorResolutionL","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#v:txSkelOptAnchorResolutionL"},{"display_html":"<a href=\"#v:txSkelOptAddModTx\">txSkelOptAddModTx</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>) -&gt; <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a> -&gt; <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a>","name":"txSkelOptAddModTx","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#v:txSkelOptAddModTx"},{"display_html":"<a href=\"#v:txSkelOptAddModParams\">txSkelOptAddModParams</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a>) -&gt; <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a> -&gt; <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a>","name":"txSkelOptAddModParams","module":"Cooked.Skeleton.Option","link":"Cooked-Skeleton-Option.html#v:txSkelOptAddModParams"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToHash\">ToHash</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toHash\">toHash</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a></li></ul>","name":"ToHash toHash","module":"Cooked.Pretty.Hashable","link":"Cooked-Pretty-Hashable.html#t:ToHash"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PrettyCookedOpts\">PrettyCookedOpts</a> = <a href=\"#v:PrettyCookedOpts\">PrettyCookedOpts</a> {<ul class=\"subs\"><li><a href=\"#v:pcOptPrintTxHashes\">pcOptPrintTxHashes</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptPrintTxOutRefs\">pcOptPrintTxOutRefs</a> :: <a href=\"Cooked-Pretty-Options.html#t:PCOptTxOutRefs\" title=\"Cooked.Pretty.Options\">PCOptTxOutRefs</a></li><li><a href=\"#v:pcOptPrintDefaultTxSkelOpts\">pcOptPrintDefaultTxSkelOpts</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptNumericUnderscores\">pcOptNumericUnderscores</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptHashes\">pcOptHashes</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedHashOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedHashOpts</a></li><li><a href=\"#v:pcOptPrintLog\">pcOptPrintLog</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptPrintConsumedUTxOs\">pcOptPrintConsumedUTxOs</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li></ul>}","name":"PrettyCookedOpts PrettyCookedOpts pcOptPrintTxHashes pcOptPrintTxOutRefs pcOptPrintDefaultTxSkelOpts pcOptNumericUnderscores pcOptHashes pcOptPrintLog pcOptPrintConsumedUTxOs","module":"Cooked.Pretty.Options","link":"Cooked-Pretty-Options.html#t:PrettyCookedOpts"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PrettyCookedHashOpts\">PrettyCookedHashOpts</a> = <a href=\"#v:PrettyCookedHashOpts\">PrettyCookedHashOpts</a> {<ul class=\"subs\"><li><a href=\"#v:pcOptHashLength\">pcOptHashLength</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a></li><li><a href=\"#v:pcOptHashNames\">pcOptHashNames</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li><li><a href=\"#v:pcOptHashVerbose\">pcOptHashVerbose</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li></ul>}","name":"PrettyCookedHashOpts PrettyCookedHashOpts pcOptHashLength pcOptHashNames pcOptHashVerbose","module":"Cooked.Pretty.Options","link":"Cooked-Pretty-Options.html#t:PrettyCookedHashOpts"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PCOptTxOutRefs\">PCOptTxOutRefs</a><ul class=\"subs\"><li>= <a href=\"#v:PCOptTxOutRefsHidden\">PCOptTxOutRefsHidden</a></li><li>| <a href=\"#v:PCOptTxOutRefsFull\">PCOptTxOutRefsFull</a></li><li>| <a href=\"#v:PCOptTxOutRefsPartial\">PCOptTxOutRefsPartial</a></li></ul>","name":"PCOptTxOutRefs PCOptTxOutRefsHidden PCOptTxOutRefsFull PCOptTxOutRefsPartial","module":"Cooked.Pretty.Options","link":"Cooked-Pretty-Options.html#t:PCOptTxOutRefs"},{"display_html":"<a href=\"#v:hashNamesFromList\">hashNamesFromList</a> :: <a href=\"Cooked-Pretty-Hashable.html#t:ToHash\" title=\"Cooked.Pretty.Hashable\">ToHash</a> a =&gt; [(a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>)] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"hashNamesFromList","module":"Cooked.Pretty.Options","link":"Cooked-Pretty-Options.html#v:hashNamesFromList"},{"display_html":"<a href=\"#v:defaultHashNames\">defaultHashNames</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"defaultHashNames","module":"Cooked.Pretty.Options","link":"Cooked-Pretty-Options.html#v:defaultHashNames"},{"display_html":"<a href=\"#v:addHashNames\">addHashNames</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a>","name":"addHashNames","module":"Cooked.Pretty.Options","link":"Cooked-Pretty-Options.html#v:addHashNames"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DocCooked\">DocCooked</a> = <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Pretty.html#t:Doc\" title=\"Cardano.Api.Internal.Pretty\">Doc</a> ()","name":"DocCooked","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#t:DocCooked"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PrettyCooked\">PrettyCooked</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:prettyCookedOpt\">prettyCookedOpt</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a></li><li><a href=\"#v:prettyCooked\">prettyCooked</a> :: a -&gt; <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a></li></ul>","name":"PrettyCooked prettyCookedOpt prettyCooked","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#t:PrettyCooked"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PrettyCookedList\">PrettyCookedList</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:prettyCookedOptList\">prettyCookedOptList</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; a -&gt; [<a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a>]</li><li><a href=\"#v:prettyCookedOptListMaybe\">prettyCookedOptListMaybe</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; a -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a>]</li><li><a href=\"#v:prettyCookedList\">prettyCookedList</a> :: a -&gt; [<a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a>]</li></ul>","name":"PrettyCookedList prettyCookedOptList prettyCookedOptListMaybe prettyCookedList","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#t:PrettyCookedList"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PrettyCookedMaybe\">PrettyCookedMaybe</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:prettyCookedOptMaybe\">prettyCookedOptMaybe</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a></li><li><a href=\"#v:prettyCookedMaybe\">prettyCookedMaybe</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a></li></ul>","name":"PrettyCookedMaybe prettyCookedOptMaybe prettyCookedMaybe","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#t:PrettyCookedMaybe"},{"display_html":"<a href=\"#v:printCookedOpt\">printCookedOpt</a> :: <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> a =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> ()","name":"printCookedOpt","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#v:printCookedOpt"},{"display_html":"<a href=\"#v:printCooked\">printCooked</a> :: <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> ()","name":"printCooked","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#v:printCooked"},{"display_html":"<a href=\"#v:renderString\">renderString</a> :: (a -&gt; <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a>) -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"renderString","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#v:renderString"},{"display_html":"<a href=\"#v:prettyHash\">prettyHash</a> :: <a href=\"Cooked-Pretty-Hashable.html#t:ToHash\" title=\"Cooked.Pretty.Hashable\">ToHash</a> a =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a>","name":"prettyHash","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#v:prettyHash"},{"display_html":"<a href=\"#v:prettyItemize\">prettyItemize</a> :: <a href=\"Cooked-Pretty-Class.html#t:PrettyCookedList\" title=\"Cooked.Pretty.Class\">PrettyCookedList</a> a =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a> -&gt; <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a> -&gt; a -&gt; <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a>","name":"prettyItemize","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#v:prettyItemize"},{"display_html":"<a href=\"#v:prettyItemizeNoTitle\">prettyItemizeNoTitle</a> :: <a href=\"Cooked-Pretty-Class.html#t:PrettyCookedList\" title=\"Cooked.Pretty.Class\">PrettyCookedList</a> a =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a> -&gt; a -&gt; <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a>","name":"prettyItemizeNoTitle","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#v:prettyItemizeNoTitle"},{"display_html":"<a href=\"#v:prettyItemizeNonEmpty\">prettyItemizeNonEmpty</a> :: <a href=\"Cooked-Pretty-Class.html#t:PrettyCookedList\" title=\"Cooked.Pretty.Class\">PrettyCookedList</a> a =&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a> -&gt; <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty-Class.html#t:DocCooked\" title=\"Cooked.Pretty.Class\">DocCooked</a>","name":"prettyItemizeNonEmpty","module":"Cooked.Pretty.Class","link":"Cooked-Pretty-Class.html#v:prettyItemizeNonEmpty"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:LabelConstrs\">LabelConstrs</a> x = (<a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> x, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> x, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> x, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> x, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Ord\" title=\"Distribution.Compat.Prelude\">Ord</a> x)","name":"LabelConstrs","module":"Cooked.Skeleton.Label","link":"Cooked-Skeleton-Label.html#t:LabelConstrs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelLabel\">TxSkelLabel</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkelLabel\">TxSkelLabel</a> :: <a href=\"Cooked-Skeleton-Label.html#t:LabelConstrs\" title=\"Cooked.Skeleton.Label\">LabelConstrs</a> x =&gt; x -&gt; <a href=\"Cooked-Skeleton-Label.html#t:TxSkelLabel\" title=\"Cooked.Skeleton.Label\">TxSkelLabel</a></li></ul>","name":"TxSkelLabel TxSkelLabel","module":"Cooked.Skeleton.Label","link":"Cooked-Skeleton-Label.html#t:TxSkelLabel"},{"display_html":"<a href=\"#v:txSkelLabelTypedP\">txSkelLabelTypedP</a> :: <a href=\"Cooked-Skeleton-Label.html#t:LabelConstrs\" title=\"Cooked.Skeleton.Label\">LabelConstrs</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> <a href=\"Cooked-Skeleton-Label.html#t:TxSkelLabel\" title=\"Cooked.Skeleton.Label\">TxSkelLabel</a> a","name":"txSkelLabelTypedP","module":"Cooked.Skeleton.Label","link":"Cooked-Skeleton-Label.html#v:txSkelLabelTypedP"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelRedeemer\">TxSkelRedeemer</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkelRedeemer\">TxSkelRedeemer</a> :: <a href=\"Cooked-Skeleton-Redeemer.html#t:RedeemerConstrs\" title=\"Cooked.Skeleton.Redeemer\">RedeemerConstrs</a> redeemer =&gt; {..} -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a></li></ul>","name":"TxSkelRedeemer TxSkelRedeemer txSkelRedeemerContent txSkelRedeemerReferenceInput txSkelRedeemerAutoFill","module":"Cooked.Skeleton.Redeemer","link":"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RedeemerConstrs\">RedeemerConstrs</a> redeemer = (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:ToData\" title=\"PlutusLedgerApi.Common\">ToData</a> redeemer, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:FromData\" title=\"PlutusLedgerApi.Common\">FromData</a> redeemer, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> redeemer, <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> redeemer, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Eq.html#t:Eq\" title=\"PlutusTx.Eq\">Eq</a> redeemer, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> redeemer)","name":"RedeemerConstrs","module":"Cooked.Skeleton.Redeemer","link":"Cooked-Skeleton-Redeemer.html#t:RedeemerConstrs"},{"display_html":"<a href=\"#v:withReferenceInput\">withReferenceInput</a> :: <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>","name":"withReferenceInput","module":"Cooked.Skeleton.Redeemer","link":"Cooked-Skeleton-Redeemer.html#v:withReferenceInput"},{"display_html":"<a href=\"#v:someTxSkelRedeemer\">someTxSkelRedeemer</a> :: <a href=\"Cooked-Skeleton-Redeemer.html#t:RedeemerConstrs\" title=\"Cooked.Skeleton.Redeemer\">RedeemerConstrs</a> redeemer =&gt; redeemer -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>","name":"someTxSkelRedeemer","module":"Cooked.Skeleton.Redeemer","link":"Cooked-Skeleton-Redeemer.html#v:someTxSkelRedeemer"},{"display_html":"<a href=\"#v:emptyTxSkelRedeemer\">emptyTxSkelRedeemer</a> :: <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>","name":"emptyTxSkelRedeemer","module":"Cooked.Skeleton.Redeemer","link":"Cooked-Skeleton-Redeemer.html#v:emptyTxSkelRedeemer"},{"display_html":"<a href=\"#v:txSkelRedeemerReferenceInputL\">txSkelRedeemerReferenceInputL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>)","name":"txSkelRedeemerReferenceInputL","module":"Cooked.Skeleton.Redeemer","link":"Cooked-Skeleton-Redeemer.html#v:txSkelRedeemerReferenceInputL"},{"display_html":"<a href=\"#v:txSkelRedeemerAutoFillL\">txSkelRedeemerAutoFillL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"txSkelRedeemerAutoFillL","module":"Cooked.Skeleton.Redeemer","link":"Cooked-Skeleton-Redeemer.html#v:txSkelRedeemerAutoFillL"},{"display_html":"<a href=\"#v:txSkelRedeemerTypedAT\">txSkelRedeemerTypedAT</a> :: (<a href=\"Cooked-Skeleton-Redeemer.html#t:RedeemerConstrs\" title=\"Cooked.Skeleton.Redeemer\">RedeemerConstrs</a> a, <a href=\"Cooked-Skeleton-Redeemer.html#t:RedeemerConstrs\" title=\"Cooked.Skeleton.Redeemer\">RedeemerConstrs</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal\" title=\"Optics.AffineTraversal\">AffineTraversal</a> <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> a b","name":"txSkelRedeemerTypedAT","module":"Cooked.Skeleton.Redeemer","link":"Cooked-Skeleton-Redeemer.html#v:txSkelRedeemerTypedAT"},{"display_html":"<a href=\"#v:someTxSkelRedeemerNoAutoFill\">someTxSkelRedeemerNoAutoFill</a> :: <a href=\"Cooked-Skeleton-Redeemer.html#t:RedeemerConstrs\" title=\"Cooked.Skeleton.Redeemer\">RedeemerConstrs</a> redeemer =&gt; redeemer -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>","name":"someTxSkelRedeemerNoAutoFill","module":"Cooked.Skeleton.Redeemer","link":"Cooked-Skeleton-Redeemer.html#v:someTxSkelRedeemerNoAutoFill"},{"display_html":"<a href=\"#v:emptyTxSkelRedeemerNoAutoFill\">emptyTxSkelRedeemerNoAutoFill</a> :: <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>","name":"emptyTxSkelRedeemerNoAutoFill","module":"Cooked.Skeleton.Redeemer","link":"Cooked-Skeleton-Redeemer.html#v:emptyTxSkelRedeemerNoAutoFill"},{"display_html":"<a href=\"#v:txSkelRedeemerBuiltinDataL\">txSkelRedeemerBuiltinDataL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinData\" title=\"PlutusLedgerApi.Common\">BuiltinData</a>","name":"txSkelRedeemerBuiltinDataL","module":"Cooked.Skeleton.Redeemer","link":"Cooked-Skeleton-Redeemer.html#v:txSkelRedeemerBuiltinDataL"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TxSkelWithdrawals\">TxSkelWithdrawals</a> = <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>) <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a>) (<a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>)","name":"TxSkelWithdrawals","module":"Cooked.Skeleton.Withdrawal","link":"Cooked-Skeleton-Withdrawal.html#t:TxSkelWithdrawals"},{"display_html":"<a href=\"#v:pkWithdrawal\">pkWithdrawal</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToPubKeyHash\" title=\"Plutus.Script.Utils.Address\">ToPubKeyHash</a> pkh =&gt; pkh -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Withdrawal.html#t:TxSkelWithdrawals\" title=\"Cooked.Skeleton.Withdrawal\">TxSkelWithdrawals</a>","name":"pkWithdrawal","module":"Cooked.Skeleton.Withdrawal","link":"Cooked-Skeleton-Withdrawal.html#v:pkWithdrawal"},{"display_html":"<a href=\"#v:scriptWithdrawal\">scriptWithdrawal</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> script =&gt; script -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Withdrawal.html#t:TxSkelWithdrawals\" title=\"Cooked.Skeleton.Withdrawal\">TxSkelWithdrawals</a>","name":"scriptWithdrawal","module":"Cooked.Skeleton.Withdrawal","link":"Cooked-Skeleton-Withdrawal.html#v:scriptWithdrawal"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxParameterChange\">TxParameterChange</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:FeePerByte\">FeePerByte</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:FeeFixed\">FeeFixed</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:MaxBlockBodySize\">MaxBlockBodySize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:MaxTxSize\">MaxTxSize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:MaxBlockHeaderSize\">MaxBlockHeaderSize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:KeyDeposit\">KeyDeposit</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:PoolDeposit\">PoolDeposit</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:PoolRetirementMaxEpoch\">PoolRetirementMaxEpoch</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:PoolNumber\">PoolNumber</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:PoolInfluence\">PoolInfluence</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Rational\" title=\"Distribution.Compat.Prelude\">Rational</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:MonetaryExpansion\">MonetaryExpansion</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Rational\" title=\"Distribution.Compat.Prelude\">Rational</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:TreasuryCut\">TreasuryCut</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Rational\" title=\"Distribution.Compat.Prelude\">Rational</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:MinPoolCost\">MinPoolCost</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:CoinsPerUTxOByte\">CoinsPerUTxOByte</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:CostModels\">CostModels</a> :: {..} -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:Prices\">Prices</a> :: {..} -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:MaxTxExUnits\">MaxTxExUnits</a> :: {..} -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:MaxBlockExUnits\">MaxBlockExUnits</a> :: {..} -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:MaxValSize\">MaxValSize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:CollateralPercentage\">CollateralPercentage</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:MaxCollateralInputs\">MaxCollateralInputs</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:PoolVotingThresholds\">PoolVotingThresholds</a> :: {..} -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:DRepVotingThresholds\">DRepVotingThresholds</a> :: {..} -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:CommitteeMinSize\">CommitteeMinSize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:CommitteeMaxTermLength\">CommitteeMaxTermLength</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:GovActionLifetime\">GovActionLifetime</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:GovActionDeposit\">GovActionDeposit</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:DRepRegistrationDeposit\">DRepRegistrationDeposit</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:DRepActivity\">DRepActivity</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li><li><a href=\"#v:MinFeeRefScriptCostPerByte\">MinFeeRefScriptCostPerByte</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Rational\" title=\"Distribution.Compat.Prelude\">Rational</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a></li></ul>","name":"TxParameterChange CostModels Prices DRepVotingThresholds PoolVotingThresholds FeePerByte FeeFixed MaxBlockBodySize MaxTxSize MaxBlockHeaderSize KeyDeposit PoolDeposit PoolRetirementMaxEpoch PoolNumber PoolInfluence MonetaryExpansion TreasuryCut MinPoolCost CoinsPerUTxOByte MaxTxExUnits MaxBlockExUnits MaxValSize CollateralPercentage MaxCollateralInputs CommitteeMinSize CommitteeMaxTermLength GovActionLifetime GovActionDeposit DRepRegistrationDeposit DRepActivity MinFeeRefScriptCostPerByte pvtCommitteeNoConfidence pvtCommitteeNormal pvtMotionNoConfidence cmPlutusV1Costs cmPlutusV2Costs cmPlutusV3Costs pMemoryCost pStepCost mteuMemory mteuSteps mbeuMemory mbeuSteps pvtHardFork pvtSecurityGroup drvtMotionNoConfidence drvtCommitteeNormal drvtCommitteeNoConfidence drvtUpdateConstitution drvtHardForkInitialization drvtNetworkGroup drvtEconomicGroup drvtTechnicalGroup drvtGovernanceGroup drvtTreasuryWithdrawal","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#t:TxParameterChange"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxGovAction\">TxGovAction</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxGovActionParameterChange\">TxGovActionParameterChange</a> :: [<a href=\"Cooked-Skeleton-Proposal.html#t:TxParameterChange\" title=\"Cooked.Skeleton.Proposal\">TxParameterChange</a>] -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxGovAction\" title=\"Cooked.Skeleton.Proposal\">TxGovAction</a></li><li><a href=\"#v:TxGovActionHardForkInitiation\">TxGovActionHardForkInitiation</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Contexts.html#t:ProtocolVersion\" title=\"PlutusLedgerApi.V3.Contexts\">ProtocolVersion</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxGovAction\" title=\"Cooked.Skeleton.Proposal\">TxGovAction</a></li><li><a href=\"#v:TxGovActionTreasuryWithdrawals\">TxGovActionTreasuryWithdrawals</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxGovAction\" title=\"Cooked.Skeleton.Proposal\">TxGovAction</a></li><li><a href=\"#v:TxGovActionNoConfidence\">TxGovActionNoConfidence</a> :: <a href=\"Cooked-Skeleton-Proposal.html#t:TxGovAction\" title=\"Cooked.Skeleton.Proposal\">TxGovAction</a></li><li><a href=\"#v:TxGovActionUpdateCommittee\">TxGovActionUpdateCommittee</a> :: [<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Contexts.html#t:ColdCommitteeCredential\" title=\"PlutusLedgerApi.V3.Contexts\">ColdCommitteeCredential</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Contexts.html#t:ColdCommitteeCredential\" title=\"PlutusLedgerApi.V3.Contexts\">ColdCommitteeCredential</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3.html#t:Rational\" title=\"PlutusLedgerApi.V3\">Rational</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxGovAction\" title=\"Cooked.Skeleton.Proposal\">TxGovAction</a></li><li><a href=\"#v:TxGovActionNewConstitution\">TxGovActionNewConstitution</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Contexts.html#t:Constitution\" title=\"PlutusLedgerApi.V3.Contexts\">Constitution</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxGovAction\" title=\"Cooked.Skeleton.Proposal\">TxGovAction</a></li></ul>","name":"TxGovAction TxGovActionParameterChange TxGovActionHardForkInitiation TxGovActionTreasuryWithdrawals TxGovActionNoConfidence TxGovActionUpdateCommittee TxGovActionNewConstitution","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#t:TxGovAction"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelProposal\">TxSkelProposal</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkelProposal\">TxSkelProposal</a> :: {..} -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a></li></ul>","name":"TxSkelProposal TxSkelProposal txSkelProposalAddress txSkelProposalAction txSkelProposalWitness txSkelProposalAnchor txSkelProposalAutoConstitution","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#t:TxSkelProposal"},{"display_html":"<a href=\"#v:txSkelProposalAddressL\">txSkelProposalAddressL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a>","name":"txSkelProposalAddressL","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#v:txSkelProposalAddressL"},{"display_html":"<a href=\"#v:txSkelProposalActionL\">txSkelProposalActionL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a> <a href=\"Cooked-Skeleton-Proposal.html#t:TxGovAction\" title=\"Cooked.Skeleton.Proposal\">TxGovAction</a>","name":"txSkelProposalActionL","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#v:txSkelProposalActionL"},{"display_html":"<a href=\"#v:txSkelProposalWitnessL\">txSkelProposalWitnessL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>, <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>))","name":"txSkelProposalWitnessL","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#v:txSkelProposalWitnessL"},{"display_html":"<a href=\"#v:txSkelProposalAnchorL\">txSkelProposalAnchorL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>)","name":"txSkelProposalAnchorL","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#v:txSkelProposalAnchorL"},{"display_html":"<a href=\"#v:txSkelProposalAutoConstitutionL\">txSkelProposalAutoConstitutionL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"txSkelProposalAutoConstitutionL","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#v:txSkelProposalAutoConstitutionL"},{"display_html":"<a href=\"#v:simpleTxSkelProposal\">simpleTxSkelProposal</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxGovAction\" title=\"Cooked.Skeleton.Proposal\">TxGovAction</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a>","name":"simpleTxSkelProposal","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#v:simpleTxSkelProposal"},{"display_html":"<a href=\"#v:withWitness\">withWitness</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> a =&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a> -&gt; (a, <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>) -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a>","name":"withWitness","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#v:withWitness"},{"display_html":"<a href=\"#v:withAnchor\">withAnchor</a> :: <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a>","name":"withAnchor","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#v:withAnchor"},{"display_html":"<a href=\"#v:withConstitution\">withConstitution</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> a =&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a>","name":"withConstitution","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#v:withConstitution"},{"display_html":"<a href=\"#v:updateConstitution\">updateConstitution</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> a =&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a -&gt; <a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a>","name":"updateConstitution","module":"Cooked.Skeleton.Proposal","link":"Cooked-Skeleton-Proposal.html#v:updateConstitution"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TxSkelMints\">TxSkelMints</a> = <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:MintingPolicy\" title=\"Ledger\">MintingPolicy</a>) (<a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Data-Map-NonEmpty.html#t:NEMap\" title=\"Data.Map.NonEmpty\">NEMap</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck-Modifiers.html#t:NonZero\" title=\"Test.QuickCheck.Modifiers\">NonZero</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>))","name":"TxSkelMints","module":"Cooked.Skeleton.Mint","link":"Cooked-Skeleton-Mint.html#t:TxSkelMints"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Mint\">Mint</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:Mint\">Mint</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:MintingPolicy\" title=\"Ledger\">MintingPolicy</a> a =&gt; {..} -&gt; <a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a></li></ul>","name":"Mint Mint mintMintingPolicy mintRedeemer mintTokens","module":"Cooked.Skeleton.Mint","link":"Cooked-Skeleton-Mint.html#t:Mint"},{"display_html":"<a href=\"#v:mintRedeemerL\">mintRedeemerL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a> <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>","name":"mintRedeemerL","module":"Cooked.Skeleton.Mint","link":"Cooked-Skeleton-Mint.html#v:mintRedeemerL"},{"display_html":"<a href=\"#v:mintTokensL\">mintTokensL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a> [(<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)]","name":"mintTokensL","module":"Cooked.Skeleton.Mint","link":"Cooked-Skeleton-Mint.html#v:mintTokensL"},{"display_html":"<a href=\"#v:mint\">mint</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:MintingPolicy\" title=\"Ledger\">MintingPolicy</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a>","name":"mint","module":"Cooked.Skeleton.Mint","link":"Cooked-Skeleton-Mint.html#v:mint"},{"display_html":"<a href=\"#v:burn\">burn</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:MintingPolicy\" title=\"Ledger\">MintingPolicy</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a>","name":"burn","module":"Cooked.Skeleton.Mint","link":"Cooked-Skeleton-Mint.html#v:burn"},{"display_html":"<a href=\"#v:txSkelMintsValueG\">txSkelMintsValueG</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:Getter\" title=\"Optics.Getter\">Getter</a> <a href=\"Cooked-Skeleton-Mint.html#t:TxSkelMints\" title=\"Cooked.Skeleton.Mint\">TxSkelMints</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelMintsValueG","module":"Cooked.Skeleton.Mint","link":"Cooked-Skeleton-Mint.html#v:txSkelMintsValueG"},{"display_html":"<a href=\"#v:txSkelMintsListI\">txSkelMintsListI</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Iso.html#t:Iso-39-\" title=\"Optics.Iso\">Iso'</a> <a href=\"Cooked-Skeleton-Mint.html#t:TxSkelMints\" title=\"Cooked.Skeleton.Mint\">TxSkelMints</a> [<a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a>]","name":"txSkelMintsListI","module":"Cooked.Skeleton.Mint","link":"Cooked-Skeleton-Mint.html#v:txSkelMintsListI"},{"display_html":"<a href=\"#v:mintVersionedScriptL\">mintVersionedScriptL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>)","name":"mintVersionedScriptL","module":"Cooked.Skeleton.Mint","link":"Cooked-Skeleton-Mint.html#v:mintVersionedScriptL"},{"display_html":"<a href=\"#v:txSkelMintsAssetClassAmountL\">txSkelMintsAssetClassAmountL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:MintingPolicy\" title=\"Ledger\">MintingPolicy</a> mp =&gt; mp -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Mint.html#t:TxSkelMints\" title=\"Cooked.Skeleton.Mint\">TxSkelMints</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)","name":"txSkelMintsAssetClassAmountL","module":"Cooked.Skeleton.Mint","link":"Cooked-Skeleton-Mint.html#v:txSkelMintsAssetClassAmountL"},{"display_html":"<a href=\"#v:txSkelMintsFromList\">txSkelMintsFromList</a> :: [<a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a>] -&gt; <a href=\"Cooked-Skeleton-Mint.html#t:TxSkelMints\" title=\"Cooked.Skeleton.Mint\">TxSkelMints</a>","name":"txSkelMintsFromList","module":"Cooked.Skeleton.Mint","link":"Cooked-Skeleton-Mint.html#v:txSkelMintsFromList"},{"display_html":"<a href=\"#v:txSkelMintsValue\">txSkelMintsValue</a> :: <a href=\"Cooked-Skeleton-Mint.html#t:TxSkelMints\" title=\"Cooked.Skeleton.Mint\">TxSkelMints</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelMintsValue","module":"Cooked.Skeleton.Mint","link":"Cooked-Skeleton-Mint.html#v:txSkelMintsValue"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DatumConstrs\">DatumConstrs</a> datum = (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> datum, <a href=\"Cooked-Pretty-Class.html#t:PrettyCooked\" title=\"Cooked.Pretty.Class\">PrettyCooked</a> datum, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:ToData\" title=\"PlutusLedgerApi.Common\">ToData</a> datum, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:FromData\" title=\"PlutusLedgerApi.Common\">FromData</a> datum, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> datum, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> datum)","name":"DatumConstrs","module":"Cooked.Skeleton.Datum","link":"Cooked-Skeleton-Datum.html#t:DatumConstrs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DatumResolved\">DatumResolved</a><ul class=\"subs\"><li>= <a href=\"#v:NotResolved\">NotResolved</a></li><li>| <a href=\"#v:Resolved\">Resolved</a></li></ul>","name":"DatumResolved NotResolved Resolved","module":"Cooked.Skeleton.Datum","link":"Cooked-Skeleton-Datum.html#t:DatumResolved"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DatumKind\">DatumKind</a><ul class=\"subs\"><li>= <a href=\"#v:Inline\">Inline</a></li><li>| <a href=\"#v:Hashed\">Hashed</a> <a href=\"Cooked-Skeleton-Datum.html#t:DatumResolved\" title=\"Cooked.Skeleton.Datum\">DatumResolved</a></li></ul>","name":"DatumKind Inline Hashed","module":"Cooked.Skeleton.Datum","link":"Cooked-Skeleton-Datum.html#t:DatumKind"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelOutDatum\">TxSkelOutDatum</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:NoTxSkelOutDatum\">NoTxSkelOutDatum</a> :: <a href=\"Cooked-Skeleton-Datum.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton.Datum\">TxSkelOutDatum</a></li><li><a href=\"#v:SomeTxSkelOutDatum\">SomeTxSkelOutDatum</a> :: <a href=\"Cooked-Skeleton-Datum.html#t:DatumConstrs\" title=\"Cooked.Skeleton.Datum\">DatumConstrs</a> dat =&gt; dat -&gt; <a href=\"Cooked-Skeleton-Datum.html#t:DatumKind\" title=\"Cooked.Skeleton.Datum\">DatumKind</a> -&gt; <a href=\"Cooked-Skeleton-Datum.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton.Datum\">TxSkelOutDatum</a></li></ul>","name":"TxSkelOutDatum NoTxSkelOutDatum SomeTxSkelOutDatum","module":"Cooked.Skeleton.Datum","link":"Cooked-Skeleton-Datum.html#t:TxSkelOutDatum"},{"display_html":"<a href=\"#v:datumKindResolvedP\">datumKindResolvedP</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> <a href=\"Cooked-Skeleton-Datum.html#t:DatumKind\" title=\"Cooked.Skeleton.Datum\">DatumKind</a> <a href=\"Cooked-Skeleton-Datum.html#t:DatumResolved\" title=\"Cooked.Skeleton.Datum\">DatumResolved</a>","name":"datumKindResolvedP","module":"Cooked.Skeleton.Datum","link":"Cooked-Skeleton-Datum.html#v:datumKindResolvedP"},{"display_html":"<a href=\"#v:txSkelOutDatumKindAT\">txSkelOutDatumKindAT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal-39-\" title=\"Optics.AffineTraversal\">AffineTraversal'</a> <a href=\"Cooked-Skeleton-Datum.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton.Datum\">TxSkelOutDatum</a> <a href=\"Cooked-Skeleton-Datum.html#t:DatumKind\" title=\"Cooked.Skeleton.Datum\">DatumKind</a>","name":"txSkelOutDatumKindAT","module":"Cooked.Skeleton.Datum","link":"Cooked-Skeleton-Datum.html#v:txSkelOutDatumKindAT"},{"display_html":"<a href=\"#v:txSkelOutDatumResolvedAT\">txSkelOutDatumResolvedAT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal-39-\" title=\"Optics.AffineTraversal\">AffineTraversal'</a> <a href=\"Cooked-Skeleton-Datum.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton.Datum\">TxSkelOutDatum</a> <a href=\"Cooked-Skeleton-Datum.html#t:DatumResolved\" title=\"Cooked.Skeleton.Datum\">DatumResolved</a>","name":"txSkelOutDatumResolvedAT","module":"Cooked.Skeleton.Datum","link":"Cooked-Skeleton-Datum.html#v:txSkelOutDatumResolvedAT"},{"display_html":"<a href=\"#v:txSkelOutDatumTypedAT\">txSkelOutDatumTypedAT</a> :: (<a href=\"Cooked-Skeleton-Datum.html#t:DatumConstrs\" title=\"Cooked.Skeleton.Datum\">DatumConstrs</a> a, <a href=\"Cooked-Skeleton-Datum.html#t:DatumConstrs\" title=\"Cooked.Skeleton.Datum\">DatumConstrs</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal\" title=\"Optics.AffineTraversal\">AffineTraversal</a> <a href=\"Cooked-Skeleton-Datum.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton.Datum\">TxSkelOutDatum</a> <a href=\"Cooked-Skeleton-Datum.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton.Datum\">TxSkelOutDatum</a> a b","name":"txSkelOutDatumTypedAT","module":"Cooked.Skeleton.Datum","link":"Cooked-Skeleton-Datum.html#v:txSkelOutDatumTypedAT"},{"display_html":"<a href=\"#v:txSkelOutDatumDatumAF\">txSkelOutDatumDatumAF</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:AffineFold\" title=\"Optics.AffineFold\">AffineFold</a> <a href=\"Cooked-Skeleton-Datum.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton.Datum\">TxSkelOutDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a>","name":"txSkelOutDatumDatumAF","module":"Cooked.Skeleton.Datum","link":"Cooked-Skeleton-Datum.html#v:txSkelOutDatumDatumAF"},{"display_html":"<a href=\"#v:txSkelOutDatumDatumHashAF\">txSkelOutDatumDatumHashAF</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:AffineFold\" title=\"Optics.AffineFold\">AffineFold</a> <a href=\"Cooked-Skeleton-Datum.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton.Datum\">TxSkelOutDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a>","name":"txSkelOutDatumDatumHashAF","module":"Cooked.Skeleton.Datum","link":"Cooked-Skeleton-Datum.html#v:txSkelOutDatumDatumHashAF"},{"display_html":"<a href=\"#v:txSkelOutDatumOutputDatumG\">txSkelOutDatumOutputDatumG</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:Getter\" title=\"Optics.Getter\">Getter</a> <a href=\"Cooked-Skeleton-Datum.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton.Datum\">TxSkelOutDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:OutputDatum\" title=\"PlutusLedgerApi.V2.Tx\">OutputDatum</a>","name":"txSkelOutDatumOutputDatumG","module":"Cooked.Skeleton.Datum","link":"Cooked-Skeleton-Datum.html#v:txSkelOutDatumOutputDatumG"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Payable\">Payable</a> :: [<a href=\"https://hackage.haskell.org/package/-/docs/GHC-TypeLits.html#t:Symbol\" title=\"GHC.TypeLits\">Symbol</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:VisibleHashedDatum\">VisibleHashedDatum</a> :: <a href=\"Cooked-Skeleton-Datum.html#t:DatumConstrs\" title=\"Cooked.Skeleton.Datum\">DatumConstrs</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> '[&quot;Datum&quot;]</li><li><a href=\"#v:InlineDatum\">InlineDatum</a> :: <a href=\"Cooked-Skeleton-Datum.html#t:DatumConstrs\" title=\"Cooked.Skeleton.Datum\">DatumConstrs</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> '[&quot;Datum&quot;]</li><li><a href=\"#v:HiddenHashedDatum\">HiddenHashedDatum</a> :: <a href=\"Cooked-Skeleton-Datum.html#t:DatumConstrs\" title=\"Cooked.Skeleton.Datum\">DatumConstrs</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> '[&quot;Datum&quot;]</li><li><a href=\"#v:ReferenceScript\">ReferenceScript</a> :: <a href=\"Cooked-Skeleton-ReferenceScript.html#t:ReferenceScriptConstrs\" title=\"Cooked.Skeleton.ReferenceScript\">ReferenceScriptConstrs</a> s =&gt; s -&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> '[&quot;Reference Script&quot;]</li><li><a href=\"#v:Value\">Value</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Value.html#t:ToValue\" title=\"Plutus.Script.Utils.Value\">ToValue</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> '[&quot;Value&quot;]</li><li><a href=\"#v:FixedValue\">FixedValue</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Value.html#t:ToValue\" title=\"Plutus.Script.Utils.Value\">ToValue</a> a =&gt; a -&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> '[&quot;Value&quot;]</li><li><a href=\"#v:StakingCredential\">StakingCredential</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToMaybeStakingCredential\" title=\"Plutus.Script.Utils.Address\">ToMaybeStakingCredential</a> cred =&gt; cred -&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> '[&quot;Staking Credential&quot;]</li><li><a href=\"#v:PayableAnd\">PayableAnd</a> :: els <a href=\"Cooked-Skeleton-Payable.html#t:-10816-\" title=\"Cooked.Skeleton.Payable\">&#10816;</a> els' =&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> els -&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> els' -&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> (els <a href=\"Cooked-Skeleton-Payable.html#t:-8746-\" title=\"Cooked.Skeleton.Payable\">&#8746;</a> els')</li></ul>","name":"Payable Value ReferenceScript InlineDatum StakingCredential VisibleHashedDatum HiddenHashedDatum FixedValue PayableAnd","module":"Cooked.Skeleton.Payable","link":"Cooked-Skeleton-Payable.html#t:Payable"},{"display_html":"<span class=\"keyword\">type family</span> (el :: a) <a href=\"#t:-8713-\">&#8713;</a> (els :: [a]) :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a> <span class=\"keyword\">where ...</span>","name":"∉","module":"Cooked.Skeleton.Payable","link":"Cooked-Skeleton-Payable.html#t:-8713-"},{"display_html":"<span class=\"keyword\">type family</span> (els :: [a]) <a href=\"#t:-10816-\">&#10816;</a> (els' :: [a]) :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a> <span class=\"keyword\">where ...</span>","name":"⩀","module":"Cooked.Skeleton.Payable","link":"Cooked-Skeleton-Payable.html#t:-10816-"},{"display_html":"<span class=\"keyword\">type family</span> (xs :: [a]) <a href=\"#t:-8746-\">&#8746;</a> (ys :: [a]) :: [a] <span class=\"keyword\">where ...</span>","name":"∪","module":"Cooked.Skeleton.Payable","link":"Cooked-Skeleton-Payable.html#t:-8746-"},{"display_html":"<a href=\"#v:-60--38--38--62-\">(&lt;&amp;&amp;&gt;)</a> :: els <a href=\"Cooked-Skeleton-Payable.html#t:-10816-\" title=\"Cooked.Skeleton.Payable\">&#10816;</a> els' =&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> els -&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> els' -&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> (els <a href=\"Cooked-Skeleton-Payable.html#t:-8746-\" title=\"Cooked.Skeleton.Payable\">&#8746;</a> els')","name":"<&&>","module":"Cooked.Skeleton.Payable","link":"Cooked-Skeleton-Payable.html#v:-60--38--38--62-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelOut\">TxSkelOut</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkelOut\">TxSkelOut</a> :: <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> owner =&gt; {..} -&gt; <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a></li></ul>","name":"TxSkelOut TxSkelOut txSkelOutOwner txSkelOutStakingCredential txSkelOutDatum txSkelOutValue txSkelOutValueAutoAdjust txSkelOutReferenceScript","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#t:TxSkelOut"},{"display_html":"<a href=\"#v:receives\">receives</a> :: <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> owner =&gt; owner -&gt; <a href=\"Cooked-Skeleton-Payable.html#t:Payable\" title=\"Cooked.Skeleton.Payable\">Payable</a> els -&gt; <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"receives","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:receives"},{"display_html":"<a href=\"#v:txSkelOutValueL\">txSkelOutValueL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelOutValueL","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:txSkelOutValueL"},{"display_html":"<a href=\"#v:txSkelOutValueAutoAdjustL\">txSkelOutValueAutoAdjustL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"txSkelOutValueAutoAdjustL","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:txSkelOutValueAutoAdjustL"},{"display_html":"<a href=\"#v:txSkelOutDatumL\">txSkelOutDatumL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> <a href=\"Cooked-Skeleton-Datum.html#t:TxSkelOutDatum\" title=\"Cooked.Skeleton.Datum\">TxSkelOutDatum</a>","name":"txSkelOutDatumL","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:txSkelOutDatumL"},{"display_html":"<a href=\"#v:txSkelOutReferenceScriptL\">txSkelOutReferenceScriptL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> <a href=\"Cooked-Skeleton-ReferenceScript.html#t:TxSkelOutReferenceScript\" title=\"Cooked.Skeleton.ReferenceScript\">TxSkelOutReferenceScript</a>","name":"txSkelOutReferenceScriptL","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:txSkelOutReferenceScriptL"},{"display_html":"<a href=\"#v:txSkelOutStakingCredentialL\">txSkelOutStakingCredentialL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:StakingCredential\" title=\"Ledger\">StakingCredential</a>)","name":"txSkelOutStakingCredentialL","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:txSkelOutStakingCredentialL"},{"display_html":"<a href=\"#v:txSkelOutValidatorAT\">txSkelOutValidatorAT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal-39-\" title=\"Optics.AffineTraversal\">AffineTraversal'</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Validator\" title=\"Ledger\">Validator</a>)","name":"txSkelOutValidatorAT","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:txSkelOutValidatorAT"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsTxSkelOutAllowedOwner\">IsTxSkelOutAllowedOwner</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toPKHOrValidator\">toPKHOrValidator</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Validator\" title=\"Ledger\">Validator</a>)</li></ul>","name":"IsTxSkelOutAllowedOwner toPKHOrValidator","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#t:IsTxSkelOutAllowedOwner"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:OwnerConstrs\">OwnerConstrs</a> owner = (<a href=\"Cooked-Skeleton-Output.html#t:IsTxSkelOutAllowedOwner\" title=\"Cooked.Skeleton.Output\">IsTxSkelOutAllowedOwner</a> owner, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> owner, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> owner)","name":"OwnerConstrs","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#t:OwnerConstrs"},{"display_html":"<a href=\"#v:txSkelOutCredentialG\">txSkelOutCredentialG</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:Getter\" title=\"Optics.Getter\">Getter</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a>","name":"txSkelOutCredentialG","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:txSkelOutCredentialG"},{"display_html":"<a href=\"#v:txSkelOutAddressG\">txSkelOutAddressG</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:Getter\" title=\"Optics.Getter\">Getter</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a>","name":"txSkelOutAddressG","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:txSkelOutAddressG"},{"display_html":"<a href=\"#v:txSkelOutPKHashAT\">txSkelOutPKHashAT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal-39-\" title=\"Optics.AffineTraversal\">AffineTraversal'</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a>","name":"txSkelOutPKHashAT","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:txSkelOutPKHashAT"},{"display_html":"<a href=\"#v:txSkelOutTypedOwnerAT\">txSkelOutTypedOwnerAT</a> :: (<a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> a, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal\" title=\"Optics.AffineTraversal\">AffineTraversal</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> a b","name":"txSkelOutTypedOwnerAT","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:txSkelOutTypedOwnerAT"},{"display_html":"<a href=\"#v:txSkelOutValidatorHashAF\">txSkelOutValidatorHashAF</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:AffineFold\" title=\"Optics.AffineFold\">AffineFold</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a>","name":"txSkelOutValidatorHashAF","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:txSkelOutValidatorHashAF"},{"display_html":"<a href=\"#v:valueAssetClassAmountL\">valueAssetClassAmountL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToMintingPolicyHash\" title=\"Ledger\">ToMintingPolicyHash</a> mp =&gt; mp -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"valueAssetClassAmountL","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:valueAssetClassAmountL"},{"display_html":"<a href=\"#v:lovelaceIntegerI\">lovelaceIntegerI</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Iso.html#t:Iso-39-\" title=\"Optics.Iso\">Iso'</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"lovelaceIntegerI","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:lovelaceIntegerI"},{"display_html":"<a href=\"#v:valueLovelaceL\">valueLovelaceL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"valueLovelaceL","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:valueLovelaceL"},{"display_html":"<a href=\"#v:valueAssetClassAmountP\">valueAssetClassAmountP</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToMintingPolicyHash\" title=\"Ledger\">ToMintingPolicyHash</a> mp =&gt; mp -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"valueAssetClassAmountP","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:valueAssetClassAmountP"},{"display_html":"<a href=\"#v:valueLovelaceP\">valueLovelaceP</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"valueLovelaceP","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:valueLovelaceP"},{"display_html":"<a href=\"#v:ownerCredentialG\">ownerCredentialG</a> :: <a href=\"Cooked-Skeleton-Output.html#t:IsTxSkelOutAllowedOwner\" title=\"Cooked.Skeleton.Output\">IsTxSkelOutAllowedOwner</a> owner =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:Getter\" title=\"Optics.Getter\">Getter</a> owner <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a>","name":"ownerCredentialG","module":"Cooked.Skeleton.Output","link":"Cooked-Skeleton-Output.html#v:ownerCredentialG"},{"display_html":"module <a href=\"Cooked-Skeleton-Withdrawal.html\">Cooked.Skeleton.Withdrawal</a>","name":"","module":"Cooked.Skeleton","link":""},{"display_html":"module <a href=\"Cooked-Skeleton-ReferenceScript.html\">Cooked.Skeleton.ReferenceScript</a>","name":"","module":"Cooked.Skeleton","link":""},{"display_html":"module <a href=\"Cooked-Skeleton-Redeemer.html\">Cooked.Skeleton.Redeemer</a>","name":"","module":"Cooked.Skeleton","link":""},{"display_html":"module <a href=\"Cooked-Skeleton-Proposal.html\">Cooked.Skeleton.Proposal</a>","name":"","module":"Cooked.Skeleton","link":""},{"display_html":"module <a href=\"Cooked-Skeleton-Payable.html\">Cooked.Skeleton.Payable</a>","name":"","module":"Cooked.Skeleton","link":""},{"display_html":"module <a href=\"Cooked-Skeleton-Output.html\">Cooked.Skeleton.Output</a>","name":"","module":"Cooked.Skeleton","link":""},{"display_html":"module <a href=\"Cooked-Skeleton-Option.html\">Cooked.Skeleton.Option</a>","name":"","module":"Cooked.Skeleton","link":""},{"display_html":"module <a href=\"Cooked-Skeleton-Mint.html\">Cooked.Skeleton.Mint</a>","name":"","module":"Cooked.Skeleton","link":""},{"display_html":"module <a href=\"Cooked-Skeleton-Label.html\">Cooked.Skeleton.Label</a>","name":"","module":"Cooked.Skeleton","link":""},{"display_html":"module <a href=\"Cooked-Skeleton-Datum.html\">Cooked.Skeleton.Datum</a>","name":"","module":"Cooked.Skeleton","link":""},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkel\">TxSkel</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkel\">TxSkel</a> :: {..} -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a></li></ul>","name":"TxSkel TxSkel txSkelLabel txSkelOpts txSkelMints txSkelSigners txSkelValidityRange txSkelIns txSkelInsReference txSkelOuts txSkelProposals txSkelWithdrawals","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#t:TxSkel"},{"display_html":"<a href=\"#v:txSkelLabelL\">txSkelLabelL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"Cooked-Skeleton-Label.html#t:TxSkelLabel\" title=\"Cooked.Skeleton.Label\">TxSkelLabel</a>)","name":"txSkelLabelL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelLabelL"},{"display_html":"<a href=\"#v:txSkelOptsL\">txSkelOptsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> <a href=\"Cooked-Skeleton-Option.html#t:TxSkelOpts\" title=\"Cooked.Skeleton.Option\">TxSkelOpts</a>","name":"txSkelOptsL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelOptsL"},{"display_html":"<a href=\"#v:txSkelMintsL\">txSkelMintsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> <a href=\"Cooked-Skeleton-Mint.html#t:TxSkelMints\" title=\"Cooked.Skeleton.Mint\">TxSkelMints</a>","name":"txSkelMintsL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelMintsL"},{"display_html":"<a href=\"#v:txSkelValidityRangeL\">txSkelValidityRangeL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"txSkelValidityRangeL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelValidityRangeL"},{"display_html":"<a href=\"#v:txSkelProposalsL\">txSkelProposalsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> [<a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a>]","name":"txSkelProposalsL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelProposalsL"},{"display_html":"<a href=\"#v:txSkelSignersL\">txSkelSignersL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"txSkelSignersL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelSignersL"},{"display_html":"<a href=\"#v:txSkelInsL\">txSkelInsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>)","name":"txSkelInsL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelInsL"},{"display_html":"<a href=\"#v:txSkelInsReferenceL\">txSkelInsReferenceL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>)","name":"txSkelInsReferenceL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelInsReferenceL"},{"display_html":"<a href=\"#v:txSkelOutsL\">txSkelOutsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> [<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>]","name":"txSkelOutsL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelOutsL"},{"display_html":"<a href=\"#v:txSkelWithdrawalsL\">txSkelWithdrawalsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> <a href=\"Cooked-Skeleton-Withdrawal.html#t:TxSkelWithdrawals\" title=\"Cooked.Skeleton.Withdrawal\">TxSkelWithdrawals</a>","name":"txSkelWithdrawalsL","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelWithdrawalsL"},{"display_html":"<a href=\"#v:txSkelTemplate\">txSkelTemplate</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>","name":"txSkelTemplate","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelTemplate"},{"display_html":"<a href=\"#v:txSkelKnownTxOutRefs\">txSkelKnownTxOutRefs</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>","name":"txSkelKnownTxOutRefs","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelKnownTxOutRefs"},{"display_html":"<a href=\"#v:txSkelWithdrawnValue\">txSkelWithdrawnValue</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelWithdrawnValue","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelWithdrawnValue"},{"display_html":"<a href=\"#v:txSkelWithdrawingScripts\">txSkelWithdrawingScripts</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>]","name":"txSkelWithdrawingScripts","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelWithdrawingScripts"},{"display_html":"<a href=\"#v:txSkelValueInOutputs\">txSkelValueInOutputs</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelValueInOutputs","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelValueInOutputs"},{"display_html":"<a href=\"#v:txSkelInsReferenceInRedeemers\">txSkelInsReferenceInRedeemers</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>","name":"txSkelInsReferenceInRedeemers","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelInsReferenceInRedeemers"},{"display_html":"<a href=\"#v:txSkelProposingScripts\">txSkelProposingScripts</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>]","name":"txSkelProposingScripts","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelProposingScripts"},{"display_html":"<a href=\"#v:txSkelMintingScripts\">txSkelMintingScripts</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>]","name":"txSkelMintingScripts","module":"Cooked.Skeleton","link":"Cooked-Skeleton.html#v:txSkelMintingScripts"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UtxoState\">UtxoState</a> = <a href=\"#v:UtxoState\">UtxoState</a> {<ul class=\"subs\"><li><a href=\"#v:availableUtxos\">availableUtxos</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a> <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayloadSet\" title=\"Cooked.MockChain.UtxoState\">UtxoPayloadSet</a></li><li><a href=\"#v:consumedUtxos\">consumedUtxos</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a> <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayloadSet\" title=\"Cooked.MockChain.UtxoState\">UtxoPayloadSet</a></li></ul>}","name":"UtxoState UtxoState availableUtxos consumedUtxos","module":"Cooked.MockChain.UtxoState","link":"Cooked-MockChain-UtxoState.html#t:UtxoState"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:UtxoPayloadSet\">UtxoPayloadSet</a> = <a href=\"#v:UtxoPayloadSet\">UtxoPayloadSet</a> {<ul class=\"subs\"><li><a href=\"#v:utxoPayloadSet\">utxoPayloadSet</a> :: [<a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a>]</li></ul>}","name":"UtxoPayloadSet UtxoPayloadSet utxoPayloadSet","module":"Cooked.MockChain.UtxoState","link":"Cooked-MockChain-UtxoState.html#t:UtxoPayloadSet"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UtxoPayload\">UtxoPayload</a> = <a href=\"#v:UtxoPayload\">UtxoPayload</a> {<ul class=\"subs\"><li><a href=\"#v:utxoPayloadTxOutRef\">utxoPayloadTxOutRef</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a></li><li><a href=\"#v:utxoPayloadValue\">utxoPayloadValue</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a></li><li><a href=\"#v:utxoPayloadDatum\">utxoPayloadDatum</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayloadDatum\" title=\"Cooked.MockChain.UtxoState\">UtxoPayloadDatum</a></li><li><a href=\"#v:utxoPayloadReferenceScript\">utxoPayloadReferenceScript</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a></li></ul>}","name":"UtxoPayload UtxoPayload utxoPayloadTxOutRef utxoPayloadValue utxoPayloadDatum utxoPayloadReferenceScript","module":"Cooked.MockChain.UtxoState","link":"Cooked-MockChain-UtxoState.html#t:UtxoPayload"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UtxoPayloadDatum\">UtxoPayloadDatum</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:NoUtxoPayloadDatum\">NoUtxoPayloadDatum</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayloadDatum\" title=\"Cooked.MockChain.UtxoState\">UtxoPayloadDatum</a></li><li><a href=\"#v:SomeUtxoPayloadDatum\">SomeUtxoPayloadDatum</a> :: <a href=\"Cooked-Skeleton-Datum.html#t:DatumConstrs\" title=\"Cooked.Skeleton.Datum\">DatumConstrs</a> dat =&gt; dat -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayloadDatum\" title=\"Cooked.MockChain.UtxoState\">UtxoPayloadDatum</a></li></ul>","name":"UtxoPayloadDatum NoUtxoPayloadDatum SomeUtxoPayloadDatum","module":"Cooked.MockChain.UtxoState","link":"Cooked-MockChain-UtxoState.html#t:UtxoPayloadDatum"},{"display_html":"<a href=\"#v:holdsInState\">holdsInState</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> a =&gt; a -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"holdsInState","module":"Cooked.MockChain.UtxoState","link":"Cooked-MockChain-UtxoState.html#v:holdsInState"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainState\">MockChainState</a> = <a href=\"#v:MockChainState\">MockChainState</a> {<ul class=\"subs\"><li><a href=\"#v:mcstParams\">mcstParams</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a></li><li><a href=\"#v:mcstLedgerState\">mcstLedgerState</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Validation.html#t:EmulatedLedgerState\" title=\"Cardano.Node.Emulator.Internal.Node.Validation\">EmulatedLedgerState</a></li><li><a href=\"#v:mcstOutputs\">mcstOutputs</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> (<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>)</li><li><a href=\"#v:mcstConstitution\">mcstConstitution</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>)</li></ul>}","name":"MockChainState MockChainState mcstParams mcstLedgerState mcstOutputs mcstConstitution","module":"Cooked.MockChain.MockChainState","link":"Cooked-MockChain-MockChainState.html#t:MockChainState"},{"display_html":"<a href=\"#v:mcstParamsL\">mcstParamsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-MockChain-MockChainState.html#t:MockChainState\" title=\"Cooked.MockChain.MockChainState\">MockChainState</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a>","name":"mcstParamsL","module":"Cooked.MockChain.MockChainState","link":"Cooked-MockChain-MockChainState.html#v:mcstParamsL"},{"display_html":"<a href=\"#v:mcstLedgerStateL\">mcstLedgerStateL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-MockChain-MockChainState.html#t:MockChainState\" title=\"Cooked.MockChain.MockChainState\">MockChainState</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Validation.html#t:EmulatedLedgerState\" title=\"Cardano.Node.Emulator.Internal.Node.Validation\">EmulatedLedgerState</a>","name":"mcstLedgerStateL","module":"Cooked.MockChain.MockChainState","link":"Cooked-MockChain-MockChainState.html#v:mcstLedgerStateL"},{"display_html":"<a href=\"#v:mcstOutputsL\">mcstOutputsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-MockChain-MockChainState.html#t:MockChainState\" title=\"Cooked.MockChain.MockChainState\">MockChainState</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> (<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>))","name":"mcstOutputsL","module":"Cooked.MockChain.MockChainState","link":"Cooked-MockChain-MockChainState.html#v:mcstOutputsL"},{"display_html":"<a href=\"#v:mcstConstitutionL\">mcstConstitutionL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked-MockChain-MockChainState.html#t:MockChainState\" title=\"Cooked.MockChain.MockChainState\">MockChainState</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>))","name":"mcstConstitutionL","module":"Cooked.MockChain.MockChainState","link":"Cooked-MockChain-MockChainState.html#v:mcstConstitutionL"},{"display_html":"<a href=\"#v:mcstToUtxoState\">mcstToUtxoState</a> :: <a href=\"Cooked-MockChain-MockChainState.html#t:MockChainState\" title=\"Cooked.MockChain.MockChainState\">MockChainState</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a>","name":"mcstToUtxoState","module":"Cooked.MockChain.MockChainState","link":"Cooked-MockChain-MockChainState.html#v:mcstToUtxoState"},{"display_html":"<a href=\"#v:addOutput\">addOutput</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; <a href=\"Cooked-MockChain-MockChainState.html#t:MockChainState\" title=\"Cooked.MockChain.MockChainState\">MockChainState</a> -&gt; <a href=\"Cooked-MockChain-MockChainState.html#t:MockChainState\" title=\"Cooked.MockChain.MockChainState\">MockChainState</a>","name":"addOutput","module":"Cooked.MockChain.MockChainState","link":"Cooked-MockChain-MockChainState.html#v:addOutput"},{"display_html":"<a href=\"#v:removeOutput\">removeOutput</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-MockChain-MockChainState.html#t:MockChainState\" title=\"Cooked.MockChain.MockChainState\">MockChainState</a> -&gt; <a href=\"Cooked-MockChain-MockChainState.html#t:MockChainState\" title=\"Cooked.MockChain.MockChainState\">MockChainState</a>","name":"removeOutput","module":"Cooked.MockChain.MockChainState","link":"Cooked-MockChain-MockChainState.html#v:removeOutput"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Contextualized\">Contextualized</a> a = <a href=\"#v:Contextualized\">Contextualized</a> {<ul class=\"subs\"><li><a href=\"#v:_ctxOutputs\">_ctxOutputs</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> (<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>)</li><li><a href=\"#v:ctxContent\">ctxContent</a> :: a</li></ul>}","name":"Contextualized Contextualized _ctxOutputs ctxContent","module":"Cooked.Pretty.Skeleton","link":"Cooked-Pretty-Skeleton.html#t:Contextualized"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainError\">MockChainError</a><ul class=\"subs\"><li>= <a href=\"#v:MCEValidationError\">MCEValidationError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:ValidationPhase\" title=\"Ledger.Index.Internal\">ValidationPhase</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:ValidationError\" title=\"Ledger.Index.Internal\">ValidationError</a></li><li>| <a href=\"#v:MCEUnbalanceable\">MCEUnbalanceable</a> <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a></li><li>| <a href=\"#v:MCEMissingBalancingWallet\">MCEMissingBalancingWallet</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li><li>| <a href=\"#v:MCENoSuitableCollateral\">MCENoSuitableCollateral</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a></li><li>| <a href=\"#v:MCEToCardanoError\">MCEToCardanoError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:ToCardanoError\" title=\"Ledger.Tx.CardanoAPI.Internal\">ToCardanoError</a></li><li>| <a href=\"#v:MCEWrongReferenceScriptError\">MCEWrongReferenceScriptError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>)</li><li>| <a href=\"#v:MCEUnknownOutRef\">MCEUnknownOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a></li><li>| <a href=\"#v:MCEPastSlot\">MCEPastSlot</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a></li><li>| <a href=\"#v:MCEUnsupportedFeature\">MCEUnsupportedFeature</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li><li>| <a href=\"#v:FailWith\">FailWith</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li></ul>","name":"MockChainError MCEValidationError MCEUnbalanceable MCEMissingBalancingWallet MCENoSuitableCollateral MCEToCardanoError MCEWrongReferenceScriptError MCEUnknownOutRef MCEPastSlot MCEUnsupportedFeature FailWith","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#t:MockChainError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainLogEntry\">MockChainLogEntry</a><ul class=\"subs\"><li>= <a href=\"#v:MCLogSubmittedTxSkel\">MCLogSubmittedTxSkel</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a></li><li>| <a href=\"#v:MCLogAdjustedTxSkel\">MCLogAdjustedTxSkel</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>))</li><li>| <a href=\"#v:MCLogNewTx\">MCLogNewTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Tx.html#t:TxId\" title=\"PlutusLedgerApi.V3.Tx\">TxId</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a></li><li>| <a href=\"#v:MCLogDiscardedUtxos\">MCLogDiscardedUtxos</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li><li>| <a href=\"#v:MCLogUnusedCollaterals\">MCLogUnusedCollaterals</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>))</li><li>| <a href=\"#v:MCLogAddedReferenceScript\">MCLogAddedReferenceScript</a> <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a></li><li>| <a href=\"#v:MCLogAdjustedTxSkelOut\">MCLogAdjustedTxSkelOut</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a></li></ul>","name":"MockChainLogEntry MCLogSubmittedTxSkel MCLogAdjustedTxSkel MCLogNewTx MCLogDiscardedUtxos MCLogUnusedCollaterals MCLogAddedReferenceScript MCLogAdjustedTxSkelOut","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-MonadFail.html#t:MonadFail\" title=\"Distribution.Compat.MonadFail\">MonadFail</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:MonadError\" title=\"Cardano.Api\">MonadError</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> m) =&gt; <a href=\"#t:MonadBlockChainBalancing\">MonadBlockChainBalancing</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:getParams\">getParams</a> :: m <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a></li><li><a href=\"#v:utxosAt\">utxosAt</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> a =&gt; a -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>)]</li><li><a href=\"#v:txSkelOutByRef\">txSkelOutByRef</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a></li><li><a href=\"#v:logEvent\">logEvent</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a> -&gt; m ()</li></ul>","name":"MonadBlockChainBalancing getParams logEvent utxosAt txSkelOutByRef","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"#t:MonadBlockChainWithoutValidation\">MonadBlockChainWithoutValidation</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:allUtxos\">allUtxos</a> :: m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>)]</li><li><a href=\"#v:setParams\">setParams</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; m ()</li><li><a href=\"#v:waitNSlots\">waitNSlots</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i =&gt; i -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a></li><li><a href=\"#v:define\">define</a> :: <a href=\"Cooked-Pretty-Hashable.html#t:ToHash\" title=\"Cooked.Pretty.Hashable\">ToHash</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; a -&gt; m a</li><li><a href=\"#v:setConstitutionScript\">setConstitutionScript</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> s =&gt; s -&gt; m ()</li><li><a href=\"#v:getConstitutionScript\">getConstitutionScript</a> :: m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>))</li><li><a href=\"#v:registerStakingCred\">registerStakingCred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToCredential\" title=\"Plutus.Script.Utils.Address\">ToCredential</a> c =&gt; c -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m ()</li></ul>","name":"MonadBlockChainWithoutValidation allUtxos setParams waitNSlots define setConstitutionScript getConstitutionScript registerStakingCred","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"#t:MonadBlockChain\">MonadBlockChain</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:validateTxSkel\">validateTxSkel</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a></li><li><a href=\"#v:forceOutputs\">forceOutputs</a> :: [<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>] -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>]</li></ul>","name":"MonadBlockChain validateTxSkel forceOutputs","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#t:MonadBlockChain"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:AsTrans\">AsTrans</a> t (m :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:AsTrans\">AsTrans</a> {<ul class=\"subs\"><li><a href=\"#v:getTrans\">getTrans</a> :: t m a</li></ul>}","name":"AsTrans AsTrans getTrans","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#t:AsTrans"},{"display_html":"<a href=\"#v:currentMSRange\">currentMSRange</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>)","name":"currentMSRange","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:currentMSRange"},{"display_html":"<a href=\"#v:utxosFromCardanoTx\">utxosFromCardanoTx</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a> -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>)]","name":"utxosFromCardanoTx","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:utxosFromCardanoTx"},{"display_html":"<a href=\"#v:currentSlot\">currentSlot</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"currentSlot","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:currentSlot"},{"display_html":"<a href=\"#v:awaitSlot\">awaitSlot</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i) =&gt; i -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"awaitSlot","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:awaitSlot"},{"display_html":"<a href=\"#v:getEnclosingSlot\">getEnclosingSlot</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"getEnclosingSlot","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:getEnclosingSlot"},{"display_html":"<a href=\"#v:awaitEnclosingSlot\">awaitEnclosingSlot</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"awaitEnclosingSlot","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:awaitEnclosingSlot"},{"display_html":"<a href=\"#v:waitNMSFromSlotLowerBound\">waitNMSFromSlotLowerBound</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i) =&gt; i -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitNMSFromSlotLowerBound","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:waitNMSFromSlotLowerBound"},{"display_html":"<a href=\"#v:waitNMSFromSlotUpperBound\">waitNMSFromSlotUpperBound</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i) =&gt; i -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitNMSFromSlotUpperBound","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:waitNMSFromSlotUpperBound"},{"display_html":"<a href=\"#v:slotRangeBefore\">slotRangeBefore</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"slotRangeBefore","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:slotRangeBefore"},{"display_html":"<a href=\"#v:slotRangeAfter\">slotRangeAfter</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"slotRangeAfter","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:slotRangeAfter"},{"display_html":"<a href=\"#v:slotToMSRange\">slotToMSRange</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i) =&gt; i -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>)","name":"slotToMSRange","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:slotToMSRange"},{"display_html":"<a href=\"#v:txSkelInputValidators\">txSkelInputValidators</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Validator\" title=\"Ledger\">Validator</a>]","name":"txSkelInputValidators","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txSkelInputValidators"},{"display_html":"<a href=\"#v:txSkelInputValue\">txSkelInputValue</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelInputValue","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txSkelInputValue"},{"display_html":"<a href=\"#v:lookupUtxos\">lookupUtxos</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>] -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>)","name":"lookupUtxos","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:lookupUtxos"},{"display_html":"<a href=\"#v:validateTxSkel-39-\">validateTxSkel'</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>]","name":"validateTxSkel'","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:validateTxSkel-39-"},{"display_html":"<a href=\"#v:validateTxSkel_\">validateTxSkel_</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m ()","name":"validateTxSkel_","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:validateTxSkel_"},{"display_html":"<a href=\"#v:txSkelProposalsDeposit\">txSkelProposalsDeposit</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"txSkelProposalsDeposit","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txSkelProposalsDeposit"},{"display_html":"<a href=\"#v:govActionDeposit\">govActionDeposit</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"govActionDeposit","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:govActionDeposit"},{"display_html":"<a href=\"#v:defineM\">defineM</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m, <a href=\"Cooked-Pretty-Hashable.html#t:ToHash\" title=\"Cooked.Pretty.Hashable\">ToHash</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; m a -&gt; m a","name":"defineM","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:defineM"},{"display_html":"<a href=\"#v:txSkelAllScripts\">txSkelAllScripts</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>]","name":"txSkelAllScripts","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:txSkelAllScripts"},{"display_html":"<a href=\"#v:previewByRef\">previewByRef</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> af <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:An_AffineFold\" title=\"Optics.AffineFold\">An_AffineFold</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> af is <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> c -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> c)","name":"previewByRef","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:previewByRef"},{"display_html":"<a href=\"#v:viewByRef\">viewByRef</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> g <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> g is <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> c -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m c","name":"viewByRef","module":"Cooked.MockChain.BlockChain","link":"Cooked-MockChain-BlockChain.html#v:viewByRef"},{"display_html":"<a href=\"#v:runTweakInChain\">runTweakInChain</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:MonadPlus\" title=\"Distribution.Compat.Prelude\">MonadPlus</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> m a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (a, <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>)","name":"runTweakInChain","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:runTweakInChain"},{"display_html":"<a href=\"#v:runTweakInChain-39-\">runTweakInChain'</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> m a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m [(a, <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>)]","name":"runTweakInChain'","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:runTweakInChain-39-"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Tweak\">Tweak</a> m = <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Prelude.html#t:StateT\" title=\"Cardano.Prelude\">StateT</a> <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> (<a href=\"https://hackage.haskell.org/package/-/docs/ListT.html#t:ListT\" title=\"ListT\">ListT</a> m)","name":"Tweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#t:Tweak"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UntypedTweak\">UntypedTweak</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:UntypedTweak\">UntypedTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> m a -&gt; <a href=\"Cooked-Tweak-Common.html#t:UntypedTweak\" title=\"Cooked.Tweak.Common\">UntypedTweak</a> m</li></ul>","name":"UntypedTweak UntypedTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#t:UntypedTweak"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:MonadPlus\" title=\"Distribution.Compat.Prelude\">MonadPlus</a> m, <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m) =&gt; <a href=\"#t:MonadTweak\">MonadTweak</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:getTxSkel\">getTxSkel</a> :: m <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a></li><li><a href=\"#v:putTxSkel\">putTxSkel</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m ()</li></ul>","name":"MonadTweak getTxSkel putTxSkel","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#t:MonadTweak"},{"display_html":"<a href=\"#v:failingTweak\">failingTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m a","name":"failingTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:failingTweak"},{"display_html":"<a href=\"#v:doNothingTweak\">doNothingTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m ()","name":"doNothingTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:doNothingTweak"},{"display_html":"<a href=\"#v:viewTweak\">viewTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; m a","name":"viewTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:viewTweak"},{"display_html":"<a href=\"#v:viewAllTweak\">viewAllTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Fold.html#t:A_Fold\" title=\"Optics.Fold\">A_Fold</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; m [a]","name":"viewAllTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:viewAllTweak"},{"display_html":"<a href=\"#v:setTweak\">setTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-IxSetter.html#t:A_Setter\" title=\"Optics.IxSetter\">A_Setter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; a -&gt; m ()","name":"setTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:setTweak"},{"display_html":"<a href=\"#v:overTweak\">overTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-IxSetter.html#t:A_Setter\" title=\"Optics.IxSetter\">A_Setter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (a -&gt; a) -&gt; m ()","name":"overTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:overTweak"},{"display_html":"<a href=\"#v:overMaybeTweak\">overMaybeTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; m [a]","name":"overMaybeTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:overMaybeTweak"},{"display_html":"<a href=\"#v:overMaybeSelectingTweak\">overMaybeSelectingTweak</a> :: <span class=\"keyword\">forall</span> a m k is. (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [a]","name":"overMaybeSelectingTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:overMaybeSelectingTweak"},{"display_html":"<a href=\"#v:selectP\">selectP</a> :: (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> a a","name":"selectP","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:selectP"},{"display_html":"<a href=\"#v:combineModsTweak\">combineModsTweak</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> is, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>, <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m) =&gt; ([is] -&gt; [[is]]) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> x -&gt; (is -&gt; x -&gt; m [(x, l)]) -&gt; m [l]","name":"combineModsTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:combineModsTweak"},{"display_html":"<a href=\"#v:iviewTweak\">iviewTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; m (is, a)","name":"iviewTweak","module":"Cooked.Tweak.Common","link":"Cooked-Tweak-Common.html#v:iviewTweak"},{"display_html":"<a href=\"#v:getSignersTweak\">getSignersTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"getSignersTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:getSignersTweak"},{"display_html":"<a href=\"#v:modifySignersTweak\">modifySignersTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; ([<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]) -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"modifySignersTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:modifySignersTweak"},{"display_html":"<a href=\"#v:setSignersTweak\">setSignersTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"setSignersTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:setSignersTweak"},{"display_html":"<a href=\"#v:signersSatisfyTweak\">signersSatisfyTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; ([<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"signersSatisfyTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:signersSatisfyTweak"},{"display_html":"<a href=\"#v:isSignerTweak\">isSignerTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isSignerTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:isSignerTweak"},{"display_html":"<a href=\"#v:hasSignersTweak\">hasSignersTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasSignersTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:hasSignersTweak"},{"display_html":"<a href=\"#v:addFirstSignerTweak\">addFirstSignerTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"addFirstSignerTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:addFirstSignerTweak"},{"display_html":"<a href=\"#v:addSignersTweak\">addSignersTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"addSignersTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:addSignersTweak"},{"display_html":"<a href=\"#v:addLastSignerTweak\">addLastSignerTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"addLastSignerTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:addLastSignerTweak"},{"display_html":"<a href=\"#v:removeSignersTweak\">removeSignersTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"removeSignersTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:removeSignersTweak"},{"display_html":"<a href=\"#v:removeSignerTweak\">removeSignerTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"removeSignerTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:removeSignerTweak"},{"display_html":"<a href=\"#v:replaceFirstSignerTweak\">replaceFirstSignerTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"replaceFirstSignerTweak","module":"Cooked.Tweak.Signers","link":"Cooked-Tweak-Signers.html#v:replaceFirstSignerTweak"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PermutOutTweakMode\">PermutOutTweakMode</a><ul class=\"subs\"><li>= <a href=\"#v:KeepIdentity\">KeepIdentity</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>)</li><li>| <a href=\"#v:OmitIdentity\">OmitIdentity</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>)</li></ul>","name":"PermutOutTweakMode KeepIdentity OmitIdentity","module":"Cooked.Tweak.OutPermutations","link":"Cooked-Tweak-OutPermutations.html#t:PermutOutTweakMode"},{"display_html":"<a href=\"#v:allOutPermutsTweak\">allOutPermutsTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Tweak-OutPermutations.html#t:PermutOutTweakMode\" title=\"Cooked.Tweak.OutPermutations\">PermutOutTweakMode</a> -&gt; m ()","name":"allOutPermutsTweak","module":"Cooked.Tweak.OutPermutations","link":"Cooked-Tweak-OutPermutations.html#v:allOutPermutsTweak"},{"display_html":"<a href=\"#v:singleOutPermutTweak\">singleOutPermutTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a> -&gt; m ()","name":"singleOutPermutTweak","module":"Cooked.Tweak.OutPermutations","link":"Cooked-Tweak-OutPermutations.html#v:singleOutPermutTweak"},{"display_html":"<a href=\"#v:distinctPermutations\">distinctPermutations</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a =&gt; [a] -&gt; [[a]]","name":"distinctPermutations","module":"Cooked.Tweak.OutPermutations","link":"Cooked-Tweak-OutPermutations.html#v:distinctPermutations"},{"display_html":"<a href=\"#v:addMintsTweak\">addMintsTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a>] -&gt; m ()","name":"addMintsTweak","module":"Cooked.Tweak.Mint","link":"Cooked-Tweak-Mint.html#v:addMintsTweak"},{"display_html":"<a href=\"#v:removeMintTweak\">removeMintTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; (<a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [<a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a>]","name":"removeMintTweak","module":"Cooked.Tweak.Mint","link":"Cooked-Tweak-Mint.html#v:removeMintTweak"},{"display_html":"<a href=\"#v:addLabelTweak\">addLabelTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Label.html#t:LabelConstrs\" title=\"Cooked.Skeleton.Label\">LabelConstrs</a> x) =&gt; x -&gt; m ()","name":"addLabelTweak","module":"Cooked.Tweak.Labels","link":"Cooked-Tweak-Labels.html#v:addLabelTweak"},{"display_html":"<a href=\"#v:removeLabelTweak\">removeLabelTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Label.html#t:LabelConstrs\" title=\"Cooked.Skeleton.Label\">LabelConstrs</a> x) =&gt; x -&gt; m ()","name":"removeLabelTweak","module":"Cooked.Tweak.Labels","link":"Cooked-Tweak-Labels.html#v:removeLabelTweak"},{"display_html":"<a href=\"#v:hasLabelTweak\">hasLabelTweak</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Label.html#t:LabelConstrs\" title=\"Cooked.Skeleton.Label\">LabelConstrs</a> x) =&gt; x -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasLabelTweak","module":"Cooked.Tweak.Labels","link":"Cooked-Tweak-Labels.html#v:hasLabelTweak"},{"display_html":"<a href=\"#v:ensureOutputTweak\">ensureOutputTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>)","name":"ensureOutputTweak","module":"Cooked.Tweak.Outputs","link":"Cooked-Tweak-Outputs.html#v:ensureOutputTweak"},{"display_html":"<a href=\"#v:addOutputTweak\">addOutputTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; m ()","name":"addOutputTweak","module":"Cooked.Tweak.Outputs","link":"Cooked-Tweak-Outputs.html#v:addOutputTweak"},{"display_html":"<a href=\"#v:removeOutputTweak\">removeOutputTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; (<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>]","name":"removeOutputTweak","module":"Cooked.Tweak.Outputs","link":"Cooked-Tweak-Outputs.html#v:removeOutputTweak"},{"display_html":"<a href=\"#v:tamperDatumTweak\">tamperDatumTweak</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Datum.html#t:DatumConstrs\" title=\"Cooked.Skeleton.Datum\">DatumConstrs</a> a) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; m [a]","name":"tamperDatumTweak","module":"Cooked.Tweak.Outputs","link":"Cooked-Tweak-Outputs.html#v:tamperDatumTweak"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TamperDatumLbl\">TamperDatumLbl</a> = <a href=\"#v:TamperDatumLbl\">TamperDatumLbl</a>","name":"TamperDatumLbl TamperDatumLbl","module":"Cooked.Tweak.Outputs","link":"Cooked-Tweak-Outputs.html#t:TamperDatumLbl"},{"display_html":"<a href=\"#v:malformDatumTweak\">malformDatumTweak</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Datum.html#t:DatumConstrs\" title=\"Cooked.Skeleton.Datum\">DatumConstrs</a> a) =&gt; (a -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinData\" title=\"PlutusLedgerApi.Common\">BuiltinData</a>]) -&gt; m ()","name":"malformDatumTweak","module":"Cooked.Tweak.Outputs","link":"Cooked-Tweak-Outputs.html#v:malformDatumTweak"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MalformDatumLbl\">MalformDatumLbl</a> = <a href=\"#v:MalformDatumLbl\">MalformDatumLbl</a>","name":"MalformDatumLbl MalformDatumLbl","module":"Cooked.Tweak.Outputs","link":"Cooked-Tweak-Outputs.html#t:MalformDatumLbl"},{"display_html":"<a href=\"#v:ensureInputTweak\">ensureInputTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>))","name":"ensureInputTweak","module":"Cooked.Tweak.Inputs","link":"Cooked-Tweak-Inputs.html#v:ensureInputTweak"},{"display_html":"<a href=\"#v:addInputTweak\">addInputTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> -&gt; m ()","name":"addInputTweak","module":"Cooked.Tweak.Inputs","link":"Cooked-Tweak-Inputs.html#v:addInputTweak"},{"display_html":"<a href=\"#v:removeInputTweak\">removeInputTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>)]","name":"removeInputTweak","module":"Cooked.Tweak.Inputs","link":"Cooked-Tweak-Inputs.html#v:removeInputTweak"},{"display_html":"<a href=\"#v:modifySpendRedeemersOfTypeTweak\">modifySpendRedeemersOfTypeTweak</a> :: <span class=\"keyword\">forall</span> a b m. (<a href=\"Cooked-Skeleton-Redeemer.html#t:RedeemerConstrs\" title=\"Cooked.Skeleton.Redeemer\">RedeemerConstrs</a> a, <a href=\"Cooked-Skeleton-Redeemer.html#t:RedeemerConstrs\" title=\"Cooked.Skeleton.Redeemer\">RedeemerConstrs</a> b, <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b) -&gt; m [<a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>]","name":"modifySpendRedeemersOfTypeTweak","module":"Cooked.Tweak.Inputs","link":"Cooked-Tweak-Inputs.html#v:modifySpendRedeemersOfTypeTweak"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UtxoSearch\">UtxoSearch</a> m a = <a href=\"https://hackage.haskell.org/package/-/docs/ListT.html#t:ListT\" title=\"ListT\">ListT</a> m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, a)","name":"UtxoSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch"},{"display_html":"<a href=\"#v:runUtxoSearch\">runUtxoSearch</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, a)]","name":"runUtxoSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:runUtxoSearch"},{"display_html":"<a href=\"#v:allUtxosSearch\">allUtxosSearch</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"allUtxosSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:allUtxosSearch"},{"display_html":"<a href=\"#v:utxosOwnedBySearch\">utxosOwnedBySearch</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"utxosOwnedBySearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:utxosOwnedBySearch"},{"display_html":"<a href=\"#v:utxosFromCardanoTxSearch\">utxosFromCardanoTxSearch</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a> -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"utxosFromCardanoTxSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:utxosFromCardanoTxSearch"},{"display_html":"<a href=\"#v:txSkelOutByRefSearch\">txSkelOutByRefSearch</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>] -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"txSkelOutByRefSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:txSkelOutByRefSearch"},{"display_html":"<a href=\"#v:filterWith\">filterWith</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; (a -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b)) -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m b","name":"filterWith","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWith"},{"display_html":"<a href=\"#v:filterWithPure\">filterWithPure</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b) -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m b","name":"filterWithPure","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithPure"},{"display_html":"<a href=\"#v:filterWithOptic\">filterWithOptic</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:An_AffineFold\" title=\"Optics.AffineFold\">An_AffineFold</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m) =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is a b -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m b","name":"filterWithOptic","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithOptic"},{"display_html":"<a href=\"#v:filterWithPred\">filterWithPred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a","name":"filterWithPred","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithPred"},{"display_html":"<a href=\"#v:filterWithValuePred\">filterWithValuePred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"filterWithValuePred","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithValuePred"},{"display_html":"<a href=\"#v:filterWithOnlyAda\">filterWithOnlyAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"filterWithOnlyAda","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithOnlyAda"},{"display_html":"<a href=\"#v:filterWithNotOnlyAda\">filterWithNotOnlyAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"filterWithNotOnlyAda","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithNotOnlyAda"},{"display_html":"<a href=\"#v:onlyValueOutputsAtSearch\">onlyValueOutputsAtSearch</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"onlyValueOutputsAtSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:onlyValueOutputsAtSearch"},{"display_html":"<a href=\"#v:vanillaOutputsAtSearch\">vanillaOutputsAtSearch</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"vanillaOutputsAtSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:vanillaOutputsAtSearch"},{"display_html":"<a href=\"#v:filterWithAlways\">filterWithAlways</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; (a -&gt; b) -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m b","name":"filterWithAlways","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithAlways"},{"display_html":"<a href=\"#v:referenceScriptOutputsSearch\">referenceScriptOutputsSearch</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChain</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToScriptHash\" title=\"Ledger\">ToScriptHash</a> s) =&gt; s -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"referenceScriptOutputsSearch","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:referenceScriptOutputsSearch"},{"display_html":"<a href=\"#v:filterWithPureRev\">filterWithPureRev</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b) -&gt; <a href=\"Cooked-MockChain-UtxoSearch.html#t:UtxoSearch\" title=\"Cooked.MockChain.UtxoSearch\">UtxoSearch</a> m a","name":"filterWithPureRev","module":"Cooked.MockChain.UtxoSearch","link":"Cooked-MockChain-UtxoSearch.html#v:filterWithPureRev"},{"display_html":"<a href=\"#v:throwOnToCardanoErrorOrApply\">throwOnToCardanoErrorOrApply</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:MonadError\" title=\"Cardano.Api\">MonadError</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; (a -&gt; b) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:ToCardanoError\" title=\"Ledger.Tx.CardanoAPI.Internal\">ToCardanoError</a> a -&gt; m b","name":"throwOnToCardanoErrorOrApply","module":"Cooked.MockChain.GenerateTx.Common","link":"Cooked-MockChain-GenerateTx-Common.html#v:throwOnToCardanoErrorOrApply"},{"display_html":"<a href=\"#v:throwOnToCardanoError\">throwOnToCardanoError</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:MonadError\" title=\"Cardano.Api\">MonadError</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:ToCardanoError\" title=\"Ledger.Tx.CardanoAPI.Internal\">ToCardanoError</a> a -&gt; m a","name":"throwOnToCardanoError","module":"Cooked.MockChain.GenerateTx.Common","link":"Cooked-MockChain-GenerateTx-Common.html#v:throwOnToCardanoError"},{"display_html":"<a href=\"#v:toRewardAccount\">toRewardAccount</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Ledger.html#t:RewardAccount\" title=\"Cardano.Api.Ledger\">RewardAccount</a>","name":"toRewardAccount","module":"Cooked.MockChain.GenerateTx.Witness","link":"Cooked-MockChain-GenerateTx-Witness.html#v:toRewardAccount"},{"display_html":"<a href=\"#v:toScriptWitness\">toScriptWitness</a> :: (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> a) =&gt; a -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Script.html#t:ScriptDatum\" title=\"Cardano.Api.Internal.Script\">ScriptDatum</a> b -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Script.html#t:ScriptWitness\" title=\"Cardano.Api.Internal.Script\">ScriptWitness</a> b <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"toScriptWitness","module":"Cooked.MockChain.GenerateTx.Witness","link":"Cooked-MockChain-GenerateTx-Witness.html#v:toScriptWitness"},{"display_html":"<a href=\"#v:toKeyWitness\">toKeyWitness</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:TxBody\" title=\"Cardano.Api.Internal.Tx.Sign\">TxBody</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a> -&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:KeyWitness\" title=\"Cardano.Api.Internal.Tx.Sign\">KeyWitness</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>","name":"toKeyWitness","module":"Cooked.MockChain.GenerateTx.Witness","link":"Cooked-MockChain-GenerateTx-Witness.html#v:toKeyWitness"},{"display_html":"<a href=\"#v:toWithdrawals\">toWithdrawals</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton-Withdrawal.html#t:TxSkelWithdrawals\" title=\"Cooked.Skeleton.Withdrawal\">TxSkelWithdrawals</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:TxWithdrawals\" title=\"Cardano.Api.Internal.Tx.Body\">TxWithdrawals</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:BuildTx\" title=\"Cardano.Api.Internal.Tx.Body\">BuildTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"toWithdrawals","module":"Cooked.MockChain.GenerateTx.Withdrawals","link":"Cooked-MockChain-GenerateTx-Withdrawals.html#v:toWithdrawals"},{"display_html":"<a href=\"#v:toInsReference\">toInsReference</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:TxInsReference\" title=\"Cardano.Api.Internal.Tx.Body\">TxInsReference</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:BuildTx\" title=\"Cardano.Api.Internal.Tx.Body\">BuildTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"toInsReference","module":"Cooked.MockChain.GenerateTx.ReferenceInputs","link":"Cooked-MockChain-GenerateTx-ReferenceInputs.html#v:toInsReference"},{"display_html":"<a href=\"#v:toProposalProcedures\">toProposalProcedures</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"Cooked-Skeleton-Proposal.html#t:TxSkelProposal\" title=\"Cooked.Skeleton.Proposal\">TxSkelProposal</a>] -&gt; <a href=\"Cooked-Skeleton-Option.html#t:AnchorResolution\" title=\"Cooked.Skeleton.Option\">AnchorResolution</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:TxProposalProcedures\" title=\"Cardano.Api.Internal.Tx.Body\">TxProposalProcedures</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:BuildTx\" title=\"Cardano.Api.Internal.Tx.Body\">BuildTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"toProposalProcedures","module":"Cooked.MockChain.GenerateTx.Proposal","link":"Cooked-MockChain-GenerateTx-Proposal.html#v:toProposalProcedures"},{"display_html":"<a href=\"#v:toCardanoTxOut\">toCardanoTxOut</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:TxOut\" title=\"Cardano.Api.Internal.Tx.Body\">TxOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:CtxTx\" title=\"Cardano.Api.Internal.Tx.Body\">CtxTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"toCardanoTxOut","module":"Cooked.MockChain.GenerateTx.Output","link":"Cooked-MockChain-GenerateTx-Output.html#v:toCardanoTxOut"},{"display_html":"<a href=\"#v:toTxSkelOutWithMinAda\">toTxSkelOutWithMinAda</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"toTxSkelOutWithMinAda","module":"Cooked.MockChain.MinAda","link":"Cooked-MockChain-MinAda.html#v:toTxSkelOutWithMinAda"},{"display_html":"<a href=\"#v:toTxSkelWithMinAda\">toTxSkelWithMinAda</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>","name":"toTxSkelWithMinAda","module":"Cooked.MockChain.MinAda","link":"Cooked-MockChain-MinAda.html#v:toTxSkelWithMinAda"},{"display_html":"<a href=\"#v:getTxSkelOutMinAda\">getTxSkelOutMinAda</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"getTxSkelOutMinAda","module":"Cooked.MockChain.MinAda","link":"Cooked-MockChain-MinAda.html#v:getTxSkelOutMinAda"},{"display_html":"<a href=\"#v:toMintValue\">toMintValue</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton-Mint.html#t:TxSkelMints\" title=\"Cooked.Skeleton.Mint\">TxSkelMints</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:TxMintValue\" title=\"Cardano.Api.Internal.Tx.Body\">TxMintValue</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:BuildTx\" title=\"Cardano.Api.Internal.Tx.Body\">BuildTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"toMintValue","module":"Cooked.MockChain.GenerateTx.Mint","link":"Cooked-MockChain-GenerateTx-Mint.html#v:toMintValue"},{"display_html":"<a href=\"#v:toTxInAndWitness\">toTxInAndWitness</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>) -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:TxIn\" title=\"Cardano.Api.Internal.Tx.Body\">TxIn</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:BuildTxWith\" title=\"Cardano.Api.Internal.Tx.Body\">BuildTxWith</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:BuildTx\" title=\"Cardano.Api.Internal.Tx.Body\">BuildTx</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Script.html#t:Witness\" title=\"Cardano.Api.Internal.Script\">Witness</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Script.html#t:WitCtxTxIn\" title=\"Cardano.Api.Internal.Script\">WitCtxTxIn</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>))","name":"toTxInAndWitness","module":"Cooked.MockChain.GenerateTx.Input","link":"Cooked-MockChain-GenerateTx-Input.html#v:toTxInAndWitness"},{"display_html":"<a href=\"#v:toCollateralTriplet\">toCollateralTriplet</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>) -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:TxInsCollateral\" title=\"Cardano.Api.Internal.Tx.Body\">TxInsCollateral</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:TxTotalCollateral\" title=\"Cardano.Api.Internal.Tx.Body\">TxTotalCollateral</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:TxReturnCollateral\" title=\"Cardano.Api.Internal.Tx.Body\">TxReturnCollateral</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:CtxTx\" title=\"Cardano.Api.Internal.Tx.Body\">CtxTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"toCollateralTriplet","module":"Cooked.MockChain.GenerateTx.Collateral","link":"Cooked-MockChain-GenerateTx-Collateral.html#v:toCollateralTriplet"},{"display_html":"<a href=\"#v:txSkelToTxBody\">txSkelToTxBody</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>) -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:TxBody\" title=\"Cardano.Api.Internal.Tx.Sign\">TxBody</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"txSkelToTxBody","module":"Cooked.MockChain.GenerateTx.Body","link":"Cooked-MockChain-GenerateTx-Body.html#v:txSkelToTxBody"},{"display_html":"<a href=\"#v:txBodyContentToTxBody\">txBodyContentToTxBody</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:TxBodyContent\" title=\"Cardano.Api.Internal.Tx.Body\">TxBodyContent</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:BuildTx\" title=\"Cardano.Api.Internal.Tx.Body\">BuildTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:TxBody\" title=\"Cardano.Api.Internal.Tx.Sign\">TxBody</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"txBodyContentToTxBody","module":"Cooked.MockChain.GenerateTx.Body","link":"Cooked-MockChain-GenerateTx-Body.html#v:txBodyContentToTxBody"},{"display_html":"<a href=\"#v:txSkelToTxBodyContent\">txSkelToTxBodyContent</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>) -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:TxBodyContent\" title=\"Cardano.Api.Internal.Tx.Body\">TxBodyContent</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Body.html#t:BuildTx\" title=\"Cardano.Api.Internal.Tx.Body\">BuildTx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"txSkelToTxBodyContent","module":"Cooked.MockChain.GenerateTx.Body","link":"Cooked-MockChain-GenerateTx-Body.html#v:txSkelToTxBodyContent"},{"display_html":"<a href=\"#v:txSkelToIndex\">txSkelToIndex</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>) -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:UTxO\" title=\"Cardano.Api\">UTxO</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"txSkelToIndex","module":"Cooked.MockChain.GenerateTx.Body","link":"Cooked-MockChain-GenerateTx-Body.html#v:txSkelToIndex"},{"display_html":"<a href=\"#v:txSignersAndBodyToCardanoTx\">txSignersAndBodyToCardanoTx</a> :: [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:TxBody\" title=\"Cardano.Api.Internal.Tx.Sign\">TxBody</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>","name":"txSignersAndBodyToCardanoTx","module":"Cooked.MockChain.GenerateTx","link":"Cooked-MockChain-GenerateTx.html#v:txSignersAndBodyToCardanoTx"},{"display_html":"<a href=\"#v:txSkelToCardanoTx\">txSkelToCardanoTx</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>) -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"txSkelToCardanoTx","module":"Cooked.MockChain.GenerateTx","link":"Cooked-MockChain-GenerateTx.html#v:txSkelToCardanoTx"},{"display_html":"<a href=\"#v:toTxSkelWithReferenceScripts\">toTxSkelWithReferenceScripts</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>","name":"toTxSkelWithReferenceScripts","module":"Cooked.MockChain.AutoReferenceScripts","link":"Cooked-MockChain-AutoReferenceScripts.html#v:toTxSkelWithReferenceScripts"},{"display_html":"<a href=\"#v:balanceTxSkel\">balanceTxSkel</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>))","name":"balanceTxSkel","module":"Cooked.MockChain.Balancing","link":"Cooked-MockChain-Balancing.html#v:balanceTxSkel"},{"display_html":"<a href=\"#v:getMinAndMaxFee\">getMinAndMaxFee</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)","name":"getMinAndMaxFee","module":"Cooked.MockChain.Balancing","link":"Cooked-MockChain-Balancing.html#v:getMinAndMaxFee"},{"display_html":"<a href=\"#v:estimateTxSkelFee\">estimateTxSkelFee</a> :: <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"estimateTxSkelFee","module":"Cooked.MockChain.Balancing","link":"Cooked-MockChain-Balancing.html#v:estimateTxSkelFee"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:InitialDistribution\">InitialDistribution</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:InitialDistribution\">InitialDistribution</a> :: {..} -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a></li></ul>","name":"InitialDistribution InitialDistribution unInitialDistribution","module":"Cooked.InitialDistribution","link":"Cooked-InitialDistribution.html#t:InitialDistribution"},{"display_html":"<a href=\"#v:distributionFromList\">distributionFromList</a> :: [(<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>, [<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>])] -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a>","name":"distributionFromList","module":"Cooked.InitialDistribution","link":"Cooked-InitialDistribution.html#v:distributionFromList"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainBook\">MockChainBook</a> = <a href=\"#v:MockChainBook\">MockChainBook</a> {<ul class=\"subs\"><li><a href=\"#v:mcbJournal\">mcbJournal</a> :: [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>]</li><li><a href=\"#v:mcbAliases\">mcbAliases</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li></ul>}","name":"MockChainBook mcbAliases mcbJournal MockChainBook","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#t:MockChainBook"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:MockChainT\">MockChainT</a> m a = <a href=\"#v:MockChainT\">MockChainT</a> {<ul class=\"subs\"><li><a href=\"#v:unMockChain\">unMockChain</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ExceptT\" title=\"Cardano.Api\">ExceptT</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Data-MemPack.html#t:StateT\" title=\"Data.MemPack\">StateT</a> <a href=\"Cooked-MockChain-MockChainState.html#t:MockChainState\" title=\"Cooked.MockChain.MockChainState\">MockChainState</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Control-Monad-Writer-Lazy.html#t:WriterT\" title=\"Control.Monad.Writer.Lazy\">WriterT</a> <a href=\"Cooked-MockChain-Direct.html#t:MockChainBook\" title=\"Cooked.MockChain.Direct\">MockChainBook</a> m)) a</li></ul>}","name":"MockChainT unMockChain MockChainT","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#t:MockChainT"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MockChain\">MockChain</a> = <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Identity\" title=\"Distribution.Compat.Prelude\">Identity</a>","name":"MockChain","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#t:MockChain"},{"display_html":"<a href=\"#v:combineMockChainT\">combineMockChainT</a> :: (<span class=\"keyword\">forall</span> a. m a -&gt; m a -&gt; m a) -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m x -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m x -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m x","name":"combineMockChainT","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:combineMockChainT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainReturn\">MockChainReturn</a> a = <a href=\"#v:MockChainReturn\">MockChainReturn</a> {<ul class=\"subs\"><li><a href=\"#v:mcrValue\">mcrValue</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> a</li><li><a href=\"#v:mcrOutputs\">mcrOutputs</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> (<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>)</li><li><a href=\"#v:mcrUtxoState\">mcrUtxoState</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a></li><li><a href=\"#v:mcrJournal\">mcrJournal</a> :: [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>]</li><li><a href=\"#v:mcrAliases\">mcrAliases</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li></ul>}","name":"MockChainReturn mcrAliases mcrJournal mcrUtxoState mcrOutputs mcrValue MockChainReturn","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#t:MockChainReturn"},{"display_html":"<a href=\"#v:runMockChainTRaw\">runMockChainTRaw</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m a -&gt; m (<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a)","name":"runMockChainTRaw","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:runMockChainTRaw"},{"display_html":"<a href=\"#v:runMockChainTFrom\">runMockChainTFrom</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m a -&gt; m (<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a)","name":"runMockChainTFrom","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:runMockChainTFrom"},{"display_html":"<a href=\"#v:runMockChainT\">runMockChainT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m a -&gt; m (<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a)","name":"runMockChainT","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:runMockChainT"},{"display_html":"<a href=\"#v:runMockChainFrom\">runMockChainFrom</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChain\" title=\"Cooked.MockChain.Direct\">MockChain</a> a -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a","name":"runMockChainFrom","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:runMockChainFrom"},{"display_html":"<a href=\"#v:runMockChain\">runMockChain</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChain\" title=\"Cooked.MockChain.Direct\">MockChain</a> a -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a","name":"runMockChain","module":"Cooked.MockChain.Direct","link":"Cooked-MockChain-Direct.html#v:runMockChain"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DocCooked\">DocCooked</a> = <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Pretty.html#t:Doc\" title=\"Cardano.Api.Internal.Pretty\">Doc</a> ()","name":"DocCooked","module":"Cooked.Pretty","link":"Cooked-Pretty.html#t:DocCooked"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PrettyCooked\">PrettyCooked</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:prettyCookedOpt\">prettyCookedOpt</a> :: <a href=\"Cooked-Pretty.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a></li><li><a href=\"#v:prettyCooked\">prettyCooked</a> :: a -&gt; <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a></li></ul>","name":"PrettyCooked prettyCookedOpt prettyCooked","module":"Cooked.Pretty","link":"Cooked-Pretty.html#t:PrettyCooked"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PrettyCookedList\">PrettyCookedList</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:prettyCookedOptList\">prettyCookedOptList</a> :: <a href=\"Cooked-Pretty.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty\">PrettyCookedOpts</a> -&gt; a -&gt; [<a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a>]</li><li><a href=\"#v:prettyCookedOptListMaybe\">prettyCookedOptListMaybe</a> :: <a href=\"Cooked-Pretty.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty\">PrettyCookedOpts</a> -&gt; a -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a>]</li><li><a href=\"#v:prettyCookedList\">prettyCookedList</a> :: a -&gt; [<a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a>]</li></ul>","name":"PrettyCookedList prettyCookedOptList prettyCookedOptListMaybe prettyCookedList","module":"Cooked.Pretty","link":"Cooked-Pretty.html#t:PrettyCookedList"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PrettyCookedMaybe\">PrettyCookedMaybe</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:prettyCookedOptMaybe\">prettyCookedOptMaybe</a> :: <a href=\"Cooked-Pretty.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a></li><li><a href=\"#v:prettyCookedMaybe\">prettyCookedMaybe</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a></li></ul>","name":"PrettyCookedMaybe prettyCookedOptMaybe prettyCookedMaybe","module":"Cooked.Pretty","link":"Cooked-Pretty.html#t:PrettyCookedMaybe"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToHash\">ToHash</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toHash\">toHash</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a></li></ul>","name":"ToHash toHash","module":"Cooked.Pretty","link":"Cooked-Pretty.html#t:ToHash"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PrettyCookedOpts\">PrettyCookedOpts</a> = <a href=\"#v:PrettyCookedOpts\">PrettyCookedOpts</a> {<ul class=\"subs\"><li><a href=\"#v:pcOptPrintTxHashes\">pcOptPrintTxHashes</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptPrintTxOutRefs\">pcOptPrintTxOutRefs</a> :: <a href=\"Cooked-Pretty.html#t:PCOptTxOutRefs\" title=\"Cooked.Pretty\">PCOptTxOutRefs</a></li><li><a href=\"#v:pcOptPrintDefaultTxSkelOpts\">pcOptPrintDefaultTxSkelOpts</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptNumericUnderscores\">pcOptNumericUnderscores</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptHashes\">pcOptHashes</a> :: <a href=\"Cooked-Pretty.html#t:PrettyCookedHashOpts\" title=\"Cooked.Pretty\">PrettyCookedHashOpts</a></li><li><a href=\"#v:pcOptPrintLog\">pcOptPrintLog</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptPrintConsumedUTxOs\">pcOptPrintConsumedUTxOs</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li></ul>}","name":"PrettyCookedOpts PrettyCookedOpts pcOptPrintTxHashes pcOptPrintTxOutRefs pcOptPrintDefaultTxSkelOpts pcOptNumericUnderscores pcOptHashes pcOptPrintLog pcOptPrintConsumedUTxOs","module":"Cooked.Pretty","link":"Cooked-Pretty.html#t:PrettyCookedOpts"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PrettyCookedHashOpts\">PrettyCookedHashOpts</a> = <a href=\"#v:PrettyCookedHashOpts\">PrettyCookedHashOpts</a> {<ul class=\"subs\"><li><a href=\"#v:pcOptHashLength\">pcOptHashLength</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a></li><li><a href=\"#v:pcOptHashNames\">pcOptHashNames</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li><li><a href=\"#v:pcOptHashVerbose\">pcOptHashVerbose</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li></ul>}","name":"PrettyCookedHashOpts PrettyCookedHashOpts pcOptHashLength pcOptHashNames pcOptHashVerbose","module":"Cooked.Pretty","link":"Cooked-Pretty.html#t:PrettyCookedHashOpts"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PCOptTxOutRefs\">PCOptTxOutRefs</a><ul class=\"subs\"><li>= <a href=\"#v:PCOptTxOutRefsHidden\">PCOptTxOutRefsHidden</a></li><li>| <a href=\"#v:PCOptTxOutRefsFull\">PCOptTxOutRefsFull</a></li><li>| <a href=\"#v:PCOptTxOutRefsPartial\">PCOptTxOutRefsPartial</a></li></ul>","name":"PCOptTxOutRefs PCOptTxOutRefsHidden PCOptTxOutRefsFull PCOptTxOutRefsPartial","module":"Cooked.Pretty","link":"Cooked-Pretty.html#t:PCOptTxOutRefs"},{"display_html":"<a href=\"#v:renderString\">renderString</a> :: (a -&gt; <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a>) -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"renderString","module":"Cooked.Pretty","link":"Cooked-Pretty.html#v:renderString"},{"display_html":"<a href=\"#v:printCookedOpt\">printCookedOpt</a> :: <a href=\"Cooked-Pretty.html#t:PrettyCooked\" title=\"Cooked.Pretty\">PrettyCooked</a> a =&gt; <a href=\"Cooked-Pretty.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> ()","name":"printCookedOpt","module":"Cooked.Pretty","link":"Cooked-Pretty.html#v:printCookedOpt"},{"display_html":"<a href=\"#v:printCooked\">printCooked</a> :: <a href=\"Cooked-Pretty.html#t:PrettyCooked\" title=\"Cooked.Pretty\">PrettyCooked</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> ()","name":"printCooked","module":"Cooked.Pretty","link":"Cooked-Pretty.html#v:printCooked"},{"display_html":"<a href=\"#v:prettyHash\">prettyHash</a> :: <a href=\"Cooked-Pretty.html#t:ToHash\" title=\"Cooked.Pretty\">ToHash</a> a =&gt; <a href=\"Cooked-Pretty.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a>","name":"prettyHash","module":"Cooked.Pretty","link":"Cooked-Pretty.html#v:prettyHash"},{"display_html":"<a href=\"#v:prettyItemize\">prettyItemize</a> :: <a href=\"Cooked-Pretty.html#t:PrettyCookedList\" title=\"Cooked.Pretty\">PrettyCookedList</a> a =&gt; <a href=\"Cooked-Pretty.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a> -&gt; <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a> -&gt; a -&gt; <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a>","name":"prettyItemize","module":"Cooked.Pretty","link":"Cooked-Pretty.html#v:prettyItemize"},{"display_html":"<a href=\"#v:prettyItemizeNoTitle\">prettyItemizeNoTitle</a> :: <a href=\"Cooked-Pretty.html#t:PrettyCookedList\" title=\"Cooked.Pretty\">PrettyCookedList</a> a =&gt; <a href=\"Cooked-Pretty.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a> -&gt; a -&gt; <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a>","name":"prettyItemizeNoTitle","module":"Cooked.Pretty","link":"Cooked-Pretty.html#v:prettyItemizeNoTitle"},{"display_html":"<a href=\"#v:prettyItemizeNonEmpty\">prettyItemizeNonEmpty</a> :: <a href=\"Cooked-Pretty.html#t:PrettyCookedList\" title=\"Cooked.Pretty\">PrettyCookedList</a> a =&gt; <a href=\"Cooked-Pretty.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a> -&gt; <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Pretty.html#t:DocCooked\" title=\"Cooked.Pretty\">DocCooked</a>","name":"prettyItemizeNonEmpty","module":"Cooked.Pretty","link":"Cooked-Pretty.html#v:prettyItemizeNonEmpty"},{"display_html":"<a href=\"#v:hashNamesFromList\">hashNamesFromList</a> :: <a href=\"Cooked-Pretty.html#t:ToHash\" title=\"Cooked.Pretty\">ToHash</a> a =&gt; [(a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>)] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"hashNamesFromList","module":"Cooked.Pretty","link":"Cooked-Pretty.html#v:hashNamesFromList"},{"display_html":"<a href=\"#v:defaultHashNames\">defaultHashNames</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"defaultHashNames","module":"Cooked.Pretty","link":"Cooked-Pretty.html#v:defaultHashNames"},{"display_html":"<a href=\"#v:addHashNames\">addHashNames</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-Pretty.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-Pretty.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty\">PrettyCookedOpts</a>","name":"addHashNames","module":"Cooked.Pretty","link":"Cooked-Pretty.html#v:addHashNames"},{"display_html":"<a href=\"#v:interpretAndRunWith\">interpretAndRunWith</a> :: (<span class=\"keyword\">forall</span> m. <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> m a -&gt; m res) -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; [res]","name":"interpretAndRunWith","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:interpretAndRunWith"},{"display_html":"<a href=\"#v:interpretAndRun\">interpretAndRun</a> :: <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; [<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a]","name":"interpretAndRun","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:interpretAndRun"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:StagedMockChain\">StagedMockChain</a> = <a href=\"Cooked-Ltl.html#t:Staged\" title=\"Cooked.Ltl\">Staged</a> (<a href=\"Cooked-Ltl.html#t:LtlOp\" title=\"Cooked.Ltl\">LtlOp</a> (<a href=\"Cooked-Tweak-Common.html#t:UntypedTweak\" title=\"Cooked.Tweak.Common\">UntypedTweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a>) <a href=\"Cooked-MockChain-Staged.html#t:MockChainBuiltin\" title=\"Cooked.MockChain.Staged\">MockChainBuiltin</a>)","name":"StagedMockChain","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#t:StagedMockChain"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainBuiltin\">MockChainBuiltin</a> a","name":"MockChainBuiltin","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#t:MockChainBuiltin"},{"display_html":"<a href=\"#v:runTweakFrom\">runTweakFrom</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> (a, <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>)]","name":"runTweakFrom","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:runTweakFrom"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadModalBlockChain\">MonadModalBlockChain</a> m = (<a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChain</a> m, <a href=\"Cooked-Ltl.html#t:MonadModal\" title=\"Cooked.Ltl\">MonadModal</a> m, <a href=\"Cooked-Ltl.html#t:Modification\" title=\"Cooked.Ltl\">Modification</a> m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:-126-\" title=\"Distribution.Compat.Prelude\">~</a> <a href=\"Cooked-Tweak-Common.html#t:UntypedTweak\" title=\"Cooked.Tweak.Common\">UntypedTweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a>)","name":"MonadModalBlockChain","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#t:MonadModalBlockChain"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:InterpMockChain\">InterpMockChain</a> = <a href=\"Cooked-MockChain-Direct.html#t:MockChainT\" title=\"Cooked.MockChain.Direct\">MockChainT</a> <a href=\"https://hackage.haskell.org/package/-/docs/GHC-List.html#t:List\" title=\"GHC.List\">List</a>","name":"InterpMockChain","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#t:InterpMockChain"},{"display_html":"<a href=\"#v:somewhere\">somewhere</a> :: <a href=\"Cooked-MockChain-Staged.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain.Staged\">MonadModalBlockChain</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> b -&gt; m a -&gt; m a","name":"somewhere","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:somewhere"},{"display_html":"<a href=\"#v:runTweak\">runTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> (a, <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>)]","name":"runTweak","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:runTweak"},{"display_html":"<a href=\"#v:everywhere\">everywhere</a> :: <a href=\"Cooked-MockChain-Staged.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain.Staged\">MonadModalBlockChain</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> b -&gt; m a -&gt; m a","name":"everywhere","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:everywhere"},{"display_html":"<a href=\"#v:withTweak\">withTweak</a> :: <a href=\"Cooked-MockChain-Staged.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain.Staged\">MonadModalBlockChain</a> m =&gt; m x -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> a -&gt; m x","name":"withTweak","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:withTweak"},{"display_html":"<a href=\"#v:there\">there</a> :: <a href=\"Cooked-MockChain-Staged.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain.Staged\">MonadModalBlockChain</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> b -&gt; m a -&gt; m a","name":"there","module":"Cooked.MockChain.Staged","link":"Cooked-MockChain-Staged.html#v:there"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsProp\">IsProp</a> prop <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:testCounterexample\">testCounterexample</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; prop -&gt; prop</li><li><a href=\"#v:testConjoin\">testConjoin</a> :: [prop] -&gt; prop</li><li><a href=\"#v:testDisjoin\">testDisjoin</a> :: [prop] -&gt; prop</li><li><a href=\"#v:testFailure\">testFailure</a> :: prop</li><li><a href=\"#v:testSuccess\">testSuccess</a> :: prop</li><li><a href=\"#v:testFailureMsg\">testFailureMsg</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; prop</li></ul>","name":"IsProp testFailureMsg testSuccess testFailure testDisjoin testConjoin testCounterexample","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#t:IsProp"},{"display_html":"<a href=\"#v:testBool\">testBool</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a> -&gt; prop","name":"testBool","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testBool"},{"display_html":"<a href=\"#v:testAll\">testAll</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; (a -&gt; prop) -&gt; [a] -&gt; prop","name":"testAll","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testAll"},{"display_html":"<a href=\"#v:testAny\">testAny</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; (a -&gt; prop) -&gt; [a] -&gt; prop","name":"testAny","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testAny"},{"display_html":"<a href=\"#v:.-61--61-.\">(.==.)</a> :: (<a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; a -&gt; a -&gt; prop","name":".==.","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:.-61--61-."},{"display_html":"<a href=\"#v:.-38--38-.\">(.&amp;&amp;.)</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; prop -&gt; prop -&gt; prop","name":".&&.","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:.-38--38-."},{"display_html":"<a href=\"#v:.-124--124-.\">(.||.)</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; prop -&gt; prop -&gt; prop","name":".||.","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:.-124--124-."},{"display_html":"<a href=\"#v:assertionToMaybe\">assertionToMaybe</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:HUnitFailure\" title=\"Test.Tasty.HUnit\">HUnitFailure</a>)","name":"assertionToMaybe","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:assertionToMaybe"},{"display_html":"<a href=\"#v:forAll\">forAll</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"forAll","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:forAll"},{"display_html":"<a href=\"#v:assertSubset\">assertSubset</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; [a] -&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a>","name":"assertSubset","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:assertSubset"},{"display_html":"<a href=\"#v:assertSameSets\">assertSameSets</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; [a] -&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a>","name":"assertSameSets","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:assertSameSets"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FailureProp\">FailureProp</a> prop = <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>] -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; prop","name":"FailureProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#t:FailureProp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SuccessProp\">SuccessProp</a> a prop = <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>] -&gt; a -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; prop","name":"SuccessProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#t:SuccessProp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SizeProp\">SizeProp</a> prop = <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; prop","name":"SizeProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#t:SizeProp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:JournalProp\">JournalProp</a> prop = <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>] -&gt; prop","name":"JournalProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#t:JournalProp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:StateProp\">StateProp</a> prop = <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; prop","name":"StateProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#t:StateProp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Test\">Test</a> a prop = <a href=\"#v:Test\">Test</a> {<ul class=\"subs\"><li><a href=\"#v:testTrace\">testTrace</a> :: <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a</li><li><a href=\"#v:testInitDist\">testInitDist</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a></li><li><a href=\"#v:testSizeProp\">testSizeProp</a> :: <a href=\"Cooked-MockChain-Testing.html#t:SizeProp\" title=\"Cooked.MockChain.Testing\">SizeProp</a> prop</li><li><a href=\"#v:testFailureProp\">testFailureProp</a> :: <a href=\"Cooked-MockChain-Testing.html#t:FailureProp\" title=\"Cooked.MockChain.Testing\">FailureProp</a> prop</li><li><a href=\"#v:testSuccessProp\">testSuccessProp</a> :: <a href=\"Cooked-MockChain-Testing.html#t:SuccessProp\" title=\"Cooked.MockChain.Testing\">SuccessProp</a> a prop</li><li><a href=\"#v:testPrettyOpts\">testPrettyOpts</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a></li></ul>}","name":"Test testPrettyOpts testSuccessProp testFailureProp testSizeProp testInitDist testTrace Test","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#t:Test"},{"display_html":"<a href=\"#v:testToProp\">testToProp</a> :: (<a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a) =&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop -&gt; prop","name":"testToProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testToProp"},{"display_html":"<a href=\"#v:testCooked\">testCooked</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testCooked","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testCooked"},{"display_html":"<a href=\"#v:testCookedQC\">testCookedQC</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testCookedQC","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:testCookedQC"},{"display_html":"<a href=\"#v:mustSucceedTest\">mustSucceedTest</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"mustSucceedTest","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:mustSucceedTest"},{"display_html":"<a href=\"#v:mustFailTest\">mustFailTest</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"mustFailTest","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:mustFailTest"},{"display_html":"<a href=\"#v:withInitDist\">withInitDist</a> :: <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"withInitDist","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:withInitDist"},{"display_html":"<a href=\"#v:withPrettyOpts\">withPrettyOpts</a> :: <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop -&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"withPrettyOpts","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:withPrettyOpts"},{"display_html":"<a href=\"#v:withJournalProp\">withJournalProp</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop -&gt; <a href=\"Cooked-MockChain-Testing.html#t:JournalProp\" title=\"Cooked.MockChain.Testing\">JournalProp</a> prop -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"withJournalProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:withJournalProp"},{"display_html":"<a href=\"#v:withStateProp\">withStateProp</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop -&gt; <a href=\"Cooked-MockChain-Testing.html#t:StateProp\" title=\"Cooked.MockChain.Testing\">StateProp</a> prop -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"withStateProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:withStateProp"},{"display_html":"<a href=\"#v:withSuccessProp\">withSuccessProp</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop -&gt; <a href=\"Cooked-MockChain-Testing.html#t:SuccessProp\" title=\"Cooked.MockChain.Testing\">SuccessProp</a> a prop -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"withSuccessProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:withSuccessProp"},{"display_html":"<a href=\"#v:withResultProp\">withResultProp</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop -&gt; (a -&gt; prop) -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"withResultProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:withResultProp"},{"display_html":"<a href=\"#v:withSizeProp\">withSizeProp</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop -&gt; <a href=\"Cooked-MockChain-Testing.html#t:SizeProp\" title=\"Cooked.MockChain.Testing\">SizeProp</a> prop -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"withSizeProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:withSizeProp"},{"display_html":"<a href=\"#v:withFailureProp\">withFailureProp</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop -&gt; <a href=\"Cooked-MockChain-Testing.html#t:FailureProp\" title=\"Cooked.MockChain.Testing\">FailureProp</a> prop -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"withFailureProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:withFailureProp"},{"display_html":"<a href=\"#v:withErrorProp\">withErrorProp</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop -&gt; (<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainError\" title=\"Cooked.MockChain.BlockChain\">MockChainError</a> -&gt; prop) -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"withErrorProp","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:withErrorProp"},{"display_html":"<a href=\"#v:isPhase1Failure\">isPhase1Failure</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Testing.html#t:FailureProp\" title=\"Cooked.MockChain.Testing\">FailureProp</a> prop","name":"isPhase1Failure","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:isPhase1Failure"},{"display_html":"<a href=\"#v:isPhase2Failure\">isPhase2Failure</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Testing.html#t:FailureProp\" title=\"Cooked.MockChain.Testing\">FailureProp</a> prop","name":"isPhase2Failure","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:isPhase2Failure"},{"display_html":"<a href=\"#v:isPhase1FailureWithMsg\">isPhase1FailureWithMsg</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Testing.html#t:FailureProp\" title=\"Cooked.MockChain.Testing\">FailureProp</a> prop","name":"isPhase1FailureWithMsg","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:isPhase1FailureWithMsg"},{"display_html":"<a href=\"#v:isPhase2FailureWithMsg\">isPhase2FailureWithMsg</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Testing.html#t:FailureProp\" title=\"Cooked.MockChain.Testing\">FailureProp</a> prop","name":"isPhase2FailureWithMsg","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:isPhase2FailureWithMsg"},{"display_html":"<a href=\"#v:isOfSize\">isOfSize</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain-Testing.html#t:SizeProp\" title=\"Cooked.MockChain.Testing\">SizeProp</a> prop","name":"isOfSize","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:isOfSize"},{"display_html":"<a href=\"#v:isAtLeastOfSize\">isAtLeastOfSize</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain-Testing.html#t:SizeProp\" title=\"Cooked.MockChain.Testing\">SizeProp</a> prop","name":"isAtLeastOfSize","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:isAtLeastOfSize"},{"display_html":"<a href=\"#v:isAtMostOfSize\">isAtMostOfSize</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain-Testing.html#t:SizeProp\" title=\"Cooked.MockChain.Testing\">SizeProp</a> prop","name":"isAtMostOfSize","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:isAtMostOfSize"},{"display_html":"<a href=\"#v:happened\">happened</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Testing.html#t:JournalProp\" title=\"Cooked.MockChain.Testing\">JournalProp</a> prop","name":"happened","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:happened"},{"display_html":"<a href=\"#v:didNotHappen\">didNotHappen</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Testing.html#t:JournalProp\" title=\"Cooked.MockChain.Testing\">JournalProp</a> prop","name":"didNotHappen","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:didNotHappen"},{"display_html":"<a href=\"#v:isInWallets\">isInWallets</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; [(<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>, [(<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:AssetClass\" title=\"PlutusLedgerApi.V1.Value\">AssetClass</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>)])] -&gt; <a href=\"Cooked-MockChain-Testing.html#t:SuccessProp\" title=\"Cooked.MockChain.Testing\">SuccessProp</a> a prop","name":"isInWallets","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:isInWallets"},{"display_html":"<a href=\"#v:isInWallet\">isInWallet</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; (<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:AssetClass\" title=\"PlutusLedgerApi.V1.Value\">AssetClass</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>) -&gt; <a href=\"Cooked-MockChain-Testing.html#t:SuccessProp\" title=\"Cooked.MockChain.Testing\">SuccessProp</a> a prop","name":"isInWallet","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:isInWallet"},{"display_html":"<a href=\"#v:mustFailInPhase2Test\">mustFailInPhase2Test</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"mustFailInPhase2Test","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:mustFailInPhase2Test"},{"display_html":"<a href=\"#v:mustFailInPhase2WithMsgTest\">mustFailInPhase2WithMsgTest</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"mustFailInPhase2WithMsgTest","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:mustFailInPhase2WithMsgTest"},{"display_html":"<a href=\"#v:mustFailInPhase1Test\">mustFailInPhase1Test</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"mustFailInPhase1Test","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:mustFailInPhase1Test"},{"display_html":"<a href=\"#v:mustFailInPhase1WithMsgTest\">mustFailInPhase1WithMsgTest</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"mustFailInPhase1WithMsgTest","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:mustFailInPhase1WithMsgTest"},{"display_html":"<a href=\"#v:mustSucceedWithSizeTest\">mustSucceedWithSizeTest</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"mustSucceedWithSizeTest","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:mustSucceedWithSizeTest"},{"display_html":"<a href=\"#v:mustFailWithSizeTest\">mustFailWithSizeTest</a> :: <a href=\"Cooked-MockChain-Testing.html#t:IsProp\" title=\"Cooked.MockChain.Testing\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain-Testing.html#t:Test\" title=\"Cooked.MockChain.Testing\">Test</a> a prop","name":"mustFailWithSizeTest","module":"Cooked.MockChain.Testing","link":"Cooked-MockChain-Testing.html#v:mustFailWithSizeTest"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Test\">Test</a> a prop = <a href=\"#v:Test\">Test</a> {<ul class=\"subs\"><li><a href=\"#v:testTrace\">testTrace</a> :: <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a</li><li><a href=\"#v:testInitDist\">testInitDist</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a></li><li><a href=\"#v:testSizeProp\">testSizeProp</a> :: <a href=\"Cooked-MockChain.html#t:SizeProp\" title=\"Cooked.MockChain\">SizeProp</a> prop</li><li><a href=\"#v:testFailureProp\">testFailureProp</a> :: <a href=\"Cooked-MockChain.html#t:FailureProp\" title=\"Cooked.MockChain\">FailureProp</a> prop</li><li><a href=\"#v:testSuccessProp\">testSuccessProp</a> :: <a href=\"Cooked-MockChain.html#t:SuccessProp\" title=\"Cooked.MockChain\">SuccessProp</a> a prop</li><li><a href=\"#v:testPrettyOpts\">testPrettyOpts</a> :: <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a></li></ul>}","name":"Test Test testTrace testInitDist testSizeProp testFailureProp testSuccessProp testPrettyOpts","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:Test"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MockChain\">MockChain</a> = <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Identity\" title=\"Distribution.Compat.Prelude\">Identity</a>","name":"MockChain","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MockChain"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainState\">MockChainState</a> = <a href=\"#v:MockChainState\">MockChainState</a> {<ul class=\"subs\"><li><a href=\"#v:mcstParams\">mcstParams</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a></li><li><a href=\"#v:mcstLedgerState\">mcstLedgerState</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Validation.html#t:EmulatedLedgerState\" title=\"Cardano.Node.Emulator.Internal.Node.Validation\">EmulatedLedgerState</a></li><li><a href=\"#v:mcstOutputs\">mcstOutputs</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> (<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>)</li><li><a href=\"#v:mcstConstitution\">mcstConstitution</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>)</li></ul>}","name":"MockChainState MockChainState mcstParams mcstLedgerState mcstOutputs mcstConstitution","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MockChainState"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UtxoSearch\">UtxoSearch</a> m a = <a href=\"https://hackage.haskell.org/package/-/docs/ListT.html#t:ListT\" title=\"ListT\">ListT</a> m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, a)","name":"UtxoSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:UtxoSearch"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainError\">MockChainError</a><ul class=\"subs\"><li>= <a href=\"#v:MCEValidationError\">MCEValidationError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:ValidationPhase\" title=\"Ledger.Index.Internal\">ValidationPhase</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:ValidationError\" title=\"Ledger.Index.Internal\">ValidationError</a></li><li>| <a href=\"#v:MCEUnbalanceable\">MCEUnbalanceable</a> <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a></li><li>| <a href=\"#v:MCEMissingBalancingWallet\">MCEMissingBalancingWallet</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li><li>| <a href=\"#v:MCENoSuitableCollateral\">MCENoSuitableCollateral</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a></li><li>| <a href=\"#v:MCEToCardanoError\">MCEToCardanoError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:ToCardanoError\" title=\"Ledger.Tx.CardanoAPI.Internal\">ToCardanoError</a></li><li>| <a href=\"#v:MCEWrongReferenceScriptError\">MCEWrongReferenceScriptError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>)</li><li>| <a href=\"#v:MCEUnknownOutRef\">MCEUnknownOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a></li><li>| <a href=\"#v:MCEPastSlot\">MCEPastSlot</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a></li><li>| <a href=\"#v:MCEUnsupportedFeature\">MCEUnsupportedFeature</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li><li>| <a href=\"#v:FailWith\">FailWith</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li></ul>","name":"MockChainError MCEValidationError MCEUnbalanceable MCEMissingBalancingWallet MCENoSuitableCollateral MCEToCardanoError MCEWrongReferenceScriptError MCEUnknownOutRef MCEPastSlot MCEUnsupportedFeature FailWith","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MockChainError"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-MonadFail.html#t:MonadFail\" title=\"Distribution.Compat.MonadFail\">MonadFail</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:MonadError\" title=\"Cardano.Api\">MonadError</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> m) =&gt; <a href=\"#t:MonadBlockChainBalancing\">MonadBlockChainBalancing</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:getParams\">getParams</a> :: m <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a></li><li><a href=\"#v:utxosAt\">utxosAt</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> a =&gt; a -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>)]</li><li><a href=\"#v:txSkelOutByRef\">txSkelOutByRef</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a></li></ul>","name":"MonadBlockChainBalancing getParams utxosAt txSkelOutByRef","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MonadBlockChainBalancing"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"#t:MonadBlockChainWithoutValidation\">MonadBlockChainWithoutValidation</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:allUtxos\">allUtxos</a> :: m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>)]</li><li><a href=\"#v:setParams\">setParams</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; m ()</li><li><a href=\"#v:waitNSlots\">waitNSlots</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i =&gt; i -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a></li><li><a href=\"#v:define\">define</a> :: <a href=\"Cooked-Pretty-Hashable.html#t:ToHash\" title=\"Cooked.Pretty.Hashable\">ToHash</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; a -&gt; m a</li><li><a href=\"#v:setConstitutionScript\">setConstitutionScript</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> s =&gt; s -&gt; m ()</li><li><a href=\"#v:getConstitutionScript\">getConstitutionScript</a> :: m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>))</li><li><a href=\"#v:registerStakingCred\">registerStakingCred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToCredential\" title=\"Plutus.Script.Utils.Address\">ToCredential</a> c =&gt; c -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m ()</li></ul>","name":"MonadBlockChainWithoutValidation allUtxos setParams waitNSlots define setConstitutionScript getConstitutionScript registerStakingCred","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"#t:MonadBlockChain\">MonadBlockChain</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:validateTxSkel\">validateTxSkel</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a></li><li><a href=\"#v:forceOutputs\">forceOutputs</a> :: [<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>] -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>]</li></ul>","name":"MonadBlockChain validateTxSkel forceOutputs","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MonadBlockChain"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:AsTrans\">AsTrans</a> t (m :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:AsTrans\">AsTrans</a> {<ul class=\"subs\"><li><a href=\"#v:getTrans\">getTrans</a> :: t m a</li></ul>}","name":"AsTrans AsTrans getTrans","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:AsTrans"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainBook\">MockChainBook</a> = <a href=\"#v:MockChainBook\">MockChainBook</a> {<ul class=\"subs\"><li><a href=\"#v:mcbJournal\">mcbJournal</a> :: [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>]</li><li><a href=\"#v:mcbAliases\">mcbAliases</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li></ul>}","name":"MockChainBook MockChainBook mcbJournal mcbAliases","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MockChainBook"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadModalBlockChain\">MonadModalBlockChain</a> m = (<a href=\"Cooked-MockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain\">MonadBlockChain</a> m, <a href=\"Cooked-Ltl.html#t:MonadModal\" title=\"Cooked.Ltl\">MonadModal</a> m, <a href=\"Cooked-Ltl.html#t:Modification\" title=\"Cooked.Ltl\">Modification</a> m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:-126-\" title=\"Distribution.Compat.Prelude\">~</a> <a href=\"Cooked-Tweak-Common.html#t:UntypedTweak\" title=\"Cooked.Tweak.Common\">UntypedTweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a>)","name":"MonadModalBlockChain","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MonadModalBlockChain"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsProp\">IsProp</a> prop <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:testCounterexample\">testCounterexample</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; prop -&gt; prop</li><li><a href=\"#v:testConjoin\">testConjoin</a> :: [prop] -&gt; prop</li><li><a href=\"#v:testDisjoin\">testDisjoin</a> :: [prop] -&gt; prop</li><li><a href=\"#v:testFailure\">testFailure</a> :: prop</li><li><a href=\"#v:testSuccess\">testSuccess</a> :: prop</li><li><a href=\"#v:testFailureMsg\">testFailureMsg</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; prop</li></ul>","name":"IsProp testCounterexample testConjoin testDisjoin testFailure testSuccess testFailureMsg","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:IsProp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UtxoPayloadDatum\">UtxoPayloadDatum</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:NoUtxoPayloadDatum\">NoUtxoPayloadDatum</a> :: <a href=\"Cooked-MockChain.html#t:UtxoPayloadDatum\" title=\"Cooked.MockChain\">UtxoPayloadDatum</a></li><li><a href=\"#v:SomeUtxoPayloadDatum\">SomeUtxoPayloadDatum</a> :: <a href=\"Cooked-Skeleton-Datum.html#t:DatumConstrs\" title=\"Cooked.Skeleton.Datum\">DatumConstrs</a> dat =&gt; dat -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a> -&gt; <a href=\"Cooked-MockChain.html#t:UtxoPayloadDatum\" title=\"Cooked.MockChain\">UtxoPayloadDatum</a></li></ul>","name":"UtxoPayloadDatum NoUtxoPayloadDatum SomeUtxoPayloadDatum","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:UtxoPayloadDatum"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:MockChainT\">MockChainT</a> m a = <a href=\"#v:MockChainT\">MockChainT</a> {<ul class=\"subs\"><li><a href=\"#v:unMockChain\">unMockChain</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ExceptT\" title=\"Cardano.Api\">ExceptT</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Data-MemPack.html#t:StateT\" title=\"Data.MemPack\">StateT</a> <a href=\"Cooked-MockChain.html#t:MockChainState\" title=\"Cooked.MockChain\">MockChainState</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Control-Monad-Writer-Lazy.html#t:WriterT\" title=\"Control.Monad.Writer.Lazy\">WriterT</a> <a href=\"Cooked-MockChain.html#t:MockChainBook\" title=\"Cooked.MockChain\">MockChainBook</a> m)) a</li></ul>}","name":"MockChainT MockChainT unMockChain","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:MockChainT"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FailureProp\">FailureProp</a> prop = <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>] -&gt; <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; prop","name":"FailureProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:FailureProp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SuccessProp\">SuccessProp</a> a prop = <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>] -&gt; a -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; prop","name":"SuccessProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:SuccessProp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SizeProp\">SizeProp</a> prop = <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; prop","name":"SizeProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:SizeProp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:JournalProp\">JournalProp</a> prop = <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>] -&gt; prop","name":"JournalProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:JournalProp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:StateProp\">StateProp</a> prop = <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; prop","name":"StateProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#t:StateProp"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogSubmittedTxSkel\">MCLogSubmittedTxSkel</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogSubmittedTxSkel","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:MCLogSubmittedTxSkel"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogAdjustedTxSkel\">MCLogAdjustedTxSkel</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>) -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogAdjustedTxSkel","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:MCLogAdjustedTxSkel"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogNewTx\">MCLogNewTx</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Tx.html#t:TxId\" title=\"PlutusLedgerApi.V3.Tx\">TxId</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogNewTx","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:MCLogNewTx"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogDiscardedUtxos\">MCLogDiscardedUtxos</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogDiscardedUtxos","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:MCLogDiscardedUtxos"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogUnusedCollaterals\">MCLogUnusedCollaterals</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>) -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogUnusedCollaterals","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:MCLogUnusedCollaterals"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogAddedReferenceScript\">MCLogAddedReferenceScript</a> :: <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogAddedReferenceScript","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:MCLogAddedReferenceScript"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogAdjustedTxSkelOut\">MCLogAdjustedTxSkelOut</a> :: <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogAdjustedTxSkelOut","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:MCLogAdjustedTxSkelOut"},{"display_html":"<a href=\"#v:.-38--38-.\">(.&amp;&amp;.)</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; prop -&gt; prop -&gt; prop","name":".&&.","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:.-38--38-."},{"display_html":"<a href=\"#v:.-124--124-.\">(.||.)</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; prop -&gt; prop -&gt; prop","name":".||.","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:.-124--124-."},{"display_html":"<a href=\"#v:forAll\">forAll</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"forAll","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:forAll"},{"display_html":"<a href=\"#v:currentSlot\">currentSlot</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"currentSlot","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:currentSlot"},{"display_html":"<a href=\"#v:awaitSlot\">awaitSlot</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i) =&gt; i -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"awaitSlot","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:awaitSlot"},{"display_html":"<a href=\"#v:.-61--61-.\">(.==.)</a> :: (<a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; a -&gt; a -&gt; prop","name":".==.","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:.-61--61-."},{"display_html":"<a href=\"#v:there\">there</a> :: <a href=\"Cooked-MockChain.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain\">MonadModalBlockChain</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> b -&gt; m a -&gt; m a","name":"there","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:there"},{"display_html":"<a href=\"#v:everywhere\">everywhere</a> :: <a href=\"Cooked-MockChain.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain\">MonadModalBlockChain</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> b -&gt; m a -&gt; m a","name":"everywhere","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:everywhere"},{"display_html":"<a href=\"#v:somewhere\">somewhere</a> :: <a href=\"Cooked-MockChain.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain\">MonadModalBlockChain</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> b -&gt; m a -&gt; m a","name":"somewhere","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:somewhere"},{"display_html":"<a href=\"#v:balanceTxSkel\">balanceTxSkel</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m (<a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>))","name":"balanceTxSkel","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:balanceTxSkel"},{"display_html":"<a href=\"#v:getMinAndMaxFee\">getMinAndMaxFee</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)","name":"getMinAndMaxFee","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:getMinAndMaxFee"},{"display_html":"<a href=\"#v:estimateTxSkelFee\">estimateTxSkelFee</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"estimateTxSkelFee","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:estimateTxSkelFee"},{"display_html":"<a href=\"#v:currentMSRange\">currentMSRange</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>)","name":"currentMSRange","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:currentMSRange"},{"display_html":"<a href=\"#v:utxosFromCardanoTx\">utxosFromCardanoTx</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a> -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>)]","name":"utxosFromCardanoTx","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxosFromCardanoTx"},{"display_html":"<a href=\"#v:getEnclosingSlot\">getEnclosingSlot</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"getEnclosingSlot","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:getEnclosingSlot"},{"display_html":"<a href=\"#v:awaitEnclosingSlot\">awaitEnclosingSlot</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"awaitEnclosingSlot","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:awaitEnclosingSlot"},{"display_html":"<a href=\"#v:waitNMSFromSlotLowerBound\">waitNMSFromSlotLowerBound</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i) =&gt; i -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitNMSFromSlotLowerBound","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:waitNMSFromSlotLowerBound"},{"display_html":"<a href=\"#v:waitNMSFromSlotUpperBound\">waitNMSFromSlotUpperBound</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i) =&gt; i -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitNMSFromSlotUpperBound","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:waitNMSFromSlotUpperBound"},{"display_html":"<a href=\"#v:slotRangeBefore\">slotRangeBefore</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"slotRangeBefore","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:slotRangeBefore"},{"display_html":"<a href=\"#v:slotRangeAfter\">slotRangeAfter</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"slotRangeAfter","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:slotRangeAfter"},{"display_html":"<a href=\"#v:slotToMSRange\">slotToMSRange</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i) =&gt; i -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>)","name":"slotToMSRange","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:slotToMSRange"},{"display_html":"<a href=\"#v:txSkelInputValidators\">txSkelInputValidators</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Validator\" title=\"Ledger\">Validator</a>]","name":"txSkelInputValidators","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelInputValidators"},{"display_html":"<a href=\"#v:txSkelInputValue\">txSkelInputValue</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelInputValue","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelInputValue"},{"display_html":"<a href=\"#v:lookupUtxos\">lookupUtxos</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>] -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>)","name":"lookupUtxos","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:lookupUtxos"},{"display_html":"<a href=\"#v:validateTxSkel-39-\">validateTxSkel'</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>]","name":"validateTxSkel'","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:validateTxSkel-39-"},{"display_html":"<a href=\"#v:validateTxSkel_\">validateTxSkel_</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m ()","name":"validateTxSkel_","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:validateTxSkel_"},{"display_html":"<a href=\"#v:txSkelProposalsDeposit\">txSkelProposalsDeposit</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"txSkelProposalsDeposit","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelProposalsDeposit"},{"display_html":"<a href=\"#v:govActionDeposit\">govActionDeposit</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"govActionDeposit","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:govActionDeposit"},{"display_html":"<a href=\"#v:defineM\">defineM</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain\">MonadBlockChainWithoutValidation</a> m, <a href=\"Cooked-Pretty-Hashable.html#t:ToHash\" title=\"Cooked.Pretty.Hashable\">ToHash</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; m a -&gt; m a","name":"defineM","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:defineM"},{"display_html":"<a href=\"#v:txSkelAllScripts\">txSkelAllScripts</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>]","name":"txSkelAllScripts","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelAllScripts"},{"display_html":"<a href=\"#v:previewByRef\">previewByRef</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> af <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:An_AffineFold\" title=\"Optics.AffineFold\">An_AffineFold</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> af is <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> c -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> c)","name":"previewByRef","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:previewByRef"},{"display_html":"<a href=\"#v:viewByRef\">viewByRef</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> g <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> g is <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> c -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m c","name":"viewByRef","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:viewByRef"},{"display_html":"<a href=\"#v:toTxSkelOutWithMinAda\">toTxSkelOutWithMinAda</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"toTxSkelOutWithMinAda","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:toTxSkelOutWithMinAda"},{"display_html":"<a href=\"#v:toTxSkelWithMinAda\">toTxSkelWithMinAda</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>","name":"toTxSkelWithMinAda","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:toTxSkelWithMinAda"},{"display_html":"<a href=\"#v:getTxSkelOutMinAda\">getTxSkelOutMinAda</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"getTxSkelOutMinAda","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:getTxSkelOutMinAda"},{"display_html":"<a href=\"#v:interpretAndRunWith\">interpretAndRunWith</a> :: (<span class=\"keyword\">forall</span> m. <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m a -&gt; m res) -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; [res]","name":"interpretAndRunWith","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:interpretAndRunWith"},{"display_html":"<a href=\"#v:interpretAndRun\">interpretAndRun</a> :: <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; [<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a]","name":"interpretAndRun","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:interpretAndRun"},{"display_html":"<a href=\"#v:runTweakFrom\">runTweakFrom</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> (a, <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>)]","name":"runTweakFrom","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runTweakFrom"},{"display_html":"<a href=\"#v:runTweak\">runTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> a -&gt; <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; [<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> (a, <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a>)]","name":"runTweak","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runTweak"},{"display_html":"<a href=\"#v:withTweak\">withTweak</a> :: <a href=\"Cooked-MockChain.html#t:MonadModalBlockChain\" title=\"Cooked.MockChain\">MonadModalBlockChain</a> m =&gt; m x -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> a -&gt; m x","name":"withTweak","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:withTweak"},{"display_html":"<a href=\"#v:runUtxoSearch\">runUtxoSearch</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, a)]","name":"runUtxoSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runUtxoSearch"},{"display_html":"<a href=\"#v:allUtxosSearch\">allUtxosSearch</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain\">MonadBlockChain</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"allUtxosSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:allUtxosSearch"},{"display_html":"<a href=\"#v:utxosOwnedBySearch\">utxosOwnedBySearch</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"utxosOwnedBySearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxosOwnedBySearch"},{"display_html":"<a href=\"#v:utxosFromCardanoTxSearch\">utxosFromCardanoTxSearch</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a> -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"utxosFromCardanoTxSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxosFromCardanoTxSearch"},{"display_html":"<a href=\"#v:txSkelOutByRefSearch\">txSkelOutByRefSearch</a> :: <a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>] -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"txSkelOutByRefSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:txSkelOutByRefSearch"},{"display_html":"<a href=\"#v:filterWith\">filterWith</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; (a -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b)) -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m b","name":"filterWith","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWith"},{"display_html":"<a href=\"#v:filterWithPure\">filterWithPure</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b) -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m b","name":"filterWithPure","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithPure"},{"display_html":"<a href=\"#v:filterWithOptic\">filterWithOptic</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:An_AffineFold\" title=\"Optics.AffineFold\">An_AffineFold</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m) =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is a b -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m b","name":"filterWithOptic","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithOptic"},{"display_html":"<a href=\"#v:filterWithPred\">filterWithPred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a","name":"filterWithPred","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithPred"},{"display_html":"<a href=\"#v:filterWithValuePred\">filterWithValuePred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"filterWithValuePred","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithValuePred"},{"display_html":"<a href=\"#v:filterWithOnlyAda\">filterWithOnlyAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"filterWithOnlyAda","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithOnlyAda"},{"display_html":"<a href=\"#v:filterWithNotOnlyAda\">filterWithNotOnlyAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"filterWithNotOnlyAda","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithNotOnlyAda"},{"display_html":"<a href=\"#v:onlyValueOutputsAtSearch\">onlyValueOutputsAtSearch</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"onlyValueOutputsAtSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:onlyValueOutputsAtSearch"},{"display_html":"<a href=\"#v:vanillaOutputsAtSearch\">vanillaOutputsAtSearch</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChainBalancing\" title=\"Cooked.MockChain\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"vanillaOutputsAtSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:vanillaOutputsAtSearch"},{"display_html":"<a href=\"#v:filterWithAlways\">filterWithAlways</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; (a -&gt; b) -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m b","name":"filterWithAlways","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithAlways"},{"display_html":"<a href=\"#v:referenceScriptOutputsSearch\">referenceScriptOutputsSearch</a> :: (<a href=\"Cooked-MockChain.html#t:MonadBlockChain\" title=\"Cooked.MockChain\">MonadBlockChain</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToScriptHash\" title=\"Ledger\">ToScriptHash</a> s) =&gt; s -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"referenceScriptOutputsSearch","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:referenceScriptOutputsSearch"},{"display_html":"<a href=\"#v:filterWithPureRev\">filterWithPureRev</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b) -&gt; <a href=\"Cooked-MockChain.html#t:UtxoSearch\" title=\"Cooked.MockChain\">UtxoSearch</a> m a","name":"filterWithPureRev","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:filterWithPureRev"},{"display_html":"<a href=\"#v:holdsInState\">holdsInState</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> a =&gt; a -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"holdsInState","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:holdsInState"},{"display_html":"<a href=\"#v:utxoPayloadSet\">utxoPayloadSet</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayloadSet\" title=\"Cooked.MockChain.UtxoState\">UtxoPayloadSet</a> -&gt; [<a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a>]","name":"utxoPayloadSet","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoPayloadSet"},{"display_html":"<a href=\"#v:utxoPayloadTxOutRef\">utxoPayloadTxOutRef</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>","name":"utxoPayloadTxOutRef","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoPayloadTxOutRef"},{"display_html":"<a href=\"#v:utxoPayloadValue\">utxoPayloadValue</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"utxoPayloadValue","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoPayloadValue"},{"display_html":"<a href=\"#v:utxoPayloadDatum\">utxoPayloadDatum</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"Cooked-MockChain.html#t:UtxoPayloadDatum\" title=\"Cooked.MockChain\">UtxoPayloadDatum</a>","name":"utxoPayloadDatum","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoPayloadDatum"},{"display_html":"<a href=\"#v:utxoPayloadReferenceScript\">utxoPayloadReferenceScript</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>","name":"utxoPayloadReferenceScript","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:utxoPayloadReferenceScript"},{"display_html":"<a href=\"#v:combineMockChainT\">combineMockChainT</a> :: (<span class=\"keyword\">forall</span> a. m a -&gt; m a -&gt; m a) -&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m x -&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m x -&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m x","name":"combineMockChainT","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:combineMockChainT"},{"display_html":"<a href=\"#v:mcrValue\">mcrValue</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> a","name":"mcrValue","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mcrValue"},{"display_html":"<a href=\"#v:mcrOutputs\">mcrOutputs</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> (<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>)","name":"mcrOutputs","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mcrOutputs"},{"display_html":"<a href=\"#v:mcrUtxoState\">mcrUtxoState</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a>","name":"mcrUtxoState","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mcrUtxoState"},{"display_html":"<a href=\"#v:mcrJournal\">mcrJournal</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a -&gt; [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>]","name":"mcrJournal","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mcrJournal"},{"display_html":"<a href=\"#v:mcrAliases\">mcrAliases</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"mcrAliases","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mcrAliases"},{"display_html":"<a href=\"#v:runMockChainTRaw\">runMockChainTRaw</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m a -&gt; m (<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a)","name":"runMockChainTRaw","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runMockChainTRaw"},{"display_html":"<a href=\"#v:runMockChainTFrom\">runMockChainTFrom</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m a -&gt; m (<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a)","name":"runMockChainTFrom","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runMockChainTFrom"},{"display_html":"<a href=\"#v:runMockChainT\">runMockChainT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked-MockChain.html#t:MockChainT\" title=\"Cooked.MockChain\">MockChainT</a> m a -&gt; m (<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a)","name":"runMockChainT","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runMockChainT"},{"display_html":"<a href=\"#v:runMockChainFrom\">runMockChainFrom</a> :: <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain.html#t:MockChain\" title=\"Cooked.MockChain\">MockChain</a> a -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a","name":"runMockChainFrom","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runMockChainFrom"},{"display_html":"<a href=\"#v:runMockChain\">runMockChain</a> :: <a href=\"Cooked-MockChain.html#t:MockChain\" title=\"Cooked.MockChain\">MockChain</a> a -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a","name":"runMockChain","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:runMockChain"},{"display_html":"<a href=\"#v:testBool\">testBool</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a> -&gt; prop","name":"testBool","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testBool"},{"display_html":"<a href=\"#v:testAll\">testAll</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; (a -&gt; prop) -&gt; [a] -&gt; prop","name":"testAll","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testAll"},{"display_html":"<a href=\"#v:testAny\">testAny</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; (a -&gt; prop) -&gt; [a] -&gt; prop","name":"testAny","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testAny"},{"display_html":"<a href=\"#v:assertionToMaybe\">assertionToMaybe</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:HUnitFailure\" title=\"Test.Tasty.HUnit\">HUnitFailure</a>)","name":"assertionToMaybe","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:assertionToMaybe"},{"display_html":"<a href=\"#v:assertSubset\">assertSubset</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; [a] -&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a>","name":"assertSubset","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:assertSubset"},{"display_html":"<a href=\"#v:assertSameSets\">assertSameSets</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; [a] -&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a>","name":"assertSameSets","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:assertSameSets"},{"display_html":"<a href=\"#v:testToProp\">testToProp</a> :: (<a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a) =&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop -&gt; prop","name":"testToProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testToProp"},{"display_html":"<a href=\"#v:testCooked\">testCooked</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testCooked","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testCooked"},{"display_html":"<a href=\"#v:testCookedQC\">testCookedQC</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testCookedQC","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:testCookedQC"},{"display_html":"<a href=\"#v:mustSucceedTest\">mustSucceedTest</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"mustSucceedTest","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mustSucceedTest"},{"display_html":"<a href=\"#v:mustFailTest\">mustFailTest</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"mustFailTest","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mustFailTest"},{"display_html":"<a href=\"#v:withInitDist\">withInitDist</a> :: <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop -&gt; <a href=\"Cooked-InitialDistribution.html#t:InitialDistribution\" title=\"Cooked.InitialDistribution\">InitialDistribution</a> -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"withInitDist","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:withInitDist"},{"display_html":"<a href=\"#v:withPrettyOpts\">withPrettyOpts</a> :: <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop -&gt; <a href=\"Cooked-Pretty-Options.html#t:PrettyCookedOpts\" title=\"Cooked.Pretty.Options\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"withPrettyOpts","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:withPrettyOpts"},{"display_html":"<a href=\"#v:withJournalProp\">withJournalProp</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop -&gt; <a href=\"Cooked-MockChain.html#t:JournalProp\" title=\"Cooked.MockChain\">JournalProp</a> prop -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"withJournalProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:withJournalProp"},{"display_html":"<a href=\"#v:withStateProp\">withStateProp</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop -&gt; <a href=\"Cooked-MockChain.html#t:StateProp\" title=\"Cooked.MockChain\">StateProp</a> prop -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"withStateProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:withStateProp"},{"display_html":"<a href=\"#v:withSuccessProp\">withSuccessProp</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop -&gt; <a href=\"Cooked-MockChain.html#t:SuccessProp\" title=\"Cooked.MockChain\">SuccessProp</a> a prop -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"withSuccessProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:withSuccessProp"},{"display_html":"<a href=\"#v:withResultProp\">withResultProp</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop -&gt; (a -&gt; prop) -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"withResultProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:withResultProp"},{"display_html":"<a href=\"#v:withSizeProp\">withSizeProp</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop -&gt; <a href=\"Cooked-MockChain.html#t:SizeProp\" title=\"Cooked.MockChain\">SizeProp</a> prop -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"withSizeProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:withSizeProp"},{"display_html":"<a href=\"#v:withFailureProp\">withFailureProp</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop -&gt; <a href=\"Cooked-MockChain.html#t:FailureProp\" title=\"Cooked.MockChain\">FailureProp</a> prop -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"withFailureProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:withFailureProp"},{"display_html":"<a href=\"#v:withErrorProp\">withErrorProp</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop -&gt; (<a href=\"Cooked-MockChain.html#t:MockChainError\" title=\"Cooked.MockChain\">MockChainError</a> -&gt; prop) -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"withErrorProp","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:withErrorProp"},{"display_html":"<a href=\"#v:isPhase1Failure\">isPhase1Failure</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain.html#t:FailureProp\" title=\"Cooked.MockChain\">FailureProp</a> prop","name":"isPhase1Failure","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:isPhase1Failure"},{"display_html":"<a href=\"#v:isPhase2Failure\">isPhase2Failure</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain.html#t:FailureProp\" title=\"Cooked.MockChain\">FailureProp</a> prop","name":"isPhase2Failure","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:isPhase2Failure"},{"display_html":"<a href=\"#v:isPhase1FailureWithMsg\">isPhase1FailureWithMsg</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain.html#t:FailureProp\" title=\"Cooked.MockChain\">FailureProp</a> prop","name":"isPhase1FailureWithMsg","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:isPhase1FailureWithMsg"},{"display_html":"<a href=\"#v:isPhase2FailureWithMsg\">isPhase2FailureWithMsg</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain.html#t:FailureProp\" title=\"Cooked.MockChain\">FailureProp</a> prop","name":"isPhase2FailureWithMsg","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:isPhase2FailureWithMsg"},{"display_html":"<a href=\"#v:isOfSize\">isOfSize</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain.html#t:SizeProp\" title=\"Cooked.MockChain\">SizeProp</a> prop","name":"isOfSize","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:isOfSize"},{"display_html":"<a href=\"#v:isAtLeastOfSize\">isAtLeastOfSize</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain.html#t:SizeProp\" title=\"Cooked.MockChain\">SizeProp</a> prop","name":"isAtLeastOfSize","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:isAtLeastOfSize"},{"display_html":"<a href=\"#v:isAtMostOfSize\">isAtMostOfSize</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain.html#t:SizeProp\" title=\"Cooked.MockChain\">SizeProp</a> prop","name":"isAtMostOfSize","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:isAtMostOfSize"},{"display_html":"<a href=\"#v:happened\">happened</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain.html#t:JournalProp\" title=\"Cooked.MockChain\">JournalProp</a> prop","name":"happened","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:happened"},{"display_html":"<a href=\"#v:didNotHappen\">didNotHappen</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain.html#t:JournalProp\" title=\"Cooked.MockChain\">JournalProp</a> prop","name":"didNotHappen","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:didNotHappen"},{"display_html":"<a href=\"#v:isInWallets\">isInWallets</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; [(<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>, [(<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:AssetClass\" title=\"PlutusLedgerApi.V1.Value\">AssetClass</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>)])] -&gt; <a href=\"Cooked-MockChain.html#t:SuccessProp\" title=\"Cooked.MockChain\">SuccessProp</a> a prop","name":"isInWallets","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:isInWallets"},{"display_html":"<a href=\"#v:isInWallet\">isInWallet</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; (<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:AssetClass\" title=\"PlutusLedgerApi.V1.Value\">AssetClass</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>) -&gt; <a href=\"Cooked-MockChain.html#t:SuccessProp\" title=\"Cooked.MockChain\">SuccessProp</a> a prop","name":"isInWallet","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:isInWallet"},{"display_html":"<a href=\"#v:mustFailInPhase2Test\">mustFailInPhase2Test</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"mustFailInPhase2Test","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mustFailInPhase2Test"},{"display_html":"<a href=\"#v:mustFailInPhase2WithMsgTest\">mustFailInPhase2WithMsgTest</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"mustFailInPhase2WithMsgTest","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mustFailInPhase2WithMsgTest"},{"display_html":"<a href=\"#v:mustFailInPhase1Test\">mustFailInPhase1Test</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"mustFailInPhase1Test","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mustFailInPhase1Test"},{"display_html":"<a href=\"#v:mustFailInPhase1WithMsgTest\">mustFailInPhase1WithMsgTest</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"mustFailInPhase1WithMsgTest","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mustFailInPhase1WithMsgTest"},{"display_html":"<a href=\"#v:mustSucceedWithSizeTest\">mustSucceedWithSizeTest</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"mustSucceedWithSizeTest","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mustSucceedWithSizeTest"},{"display_html":"<a href=\"#v:mustFailWithSizeTest\">mustFailWithSizeTest</a> :: <a href=\"Cooked-MockChain.html#t:IsProp\" title=\"Cooked.MockChain\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked-MockChain.html#t:Test\" title=\"Cooked.MockChain\">Test</a> a prop","name":"mustFailWithSizeTest","module":"Cooked.MockChain","link":"Cooked-MockChain.html#v:mustFailWithSizeTest"},{"display_html":"<a href=\"#v:getValidityRangeTweak\">getValidityRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"getValidityRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:getValidityRangeTweak"},{"display_html":"<a href=\"#v:setValidityRangeTweak\">setValidityRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:setValidityRangeTweak"},{"display_html":"<a href=\"#v:setAlwaysValidRangeTweak\">setAlwaysValidRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setAlwaysValidRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:setAlwaysValidRangeTweak"},{"display_html":"<a href=\"#v:setValidityStartTweak\">setValidityStartTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityStartTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:setValidityStartTweak"},{"display_html":"<a href=\"#v:setValidityEndTweak\">setValidityEndTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityEndTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:setValidityEndTweak"},{"display_html":"<a href=\"#v:validityRangeSatisfiesTweak\">validityRangeSatisfiesTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"validityRangeSatisfiesTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:validityRangeSatisfiesTweak"},{"display_html":"<a href=\"#v:isValidAtTweak\">isValidAtTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidAtTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:isValidAtTweak"},{"display_html":"<a href=\"#v:isValidNowTweak\">isValidNowTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidNowTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:isValidNowTweak"},{"display_html":"<a href=\"#v:isValidDuringTweak\">isValidDuringTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidDuringTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:isValidDuringTweak"},{"display_html":"<a href=\"#v:hasEmptyTimeRangeTweak\">hasEmptyTimeRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasEmptyTimeRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:hasEmptyTimeRangeTweak"},{"display_html":"<a href=\"#v:hasFullTimeRangeTweak\">hasFullTimeRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasFullTimeRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:hasFullTimeRangeTweak"},{"display_html":"<a href=\"#v:intersectValidityRangeTweak\">intersectValidityRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"intersectValidityRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:intersectValidityRangeTweak"},{"display_html":"<a href=\"#v:centerAroundValidityRangeTweak\">centerAroundValidityRangeTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"centerAroundValidityRangeTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:centerAroundValidityRangeTweak"},{"display_html":"<a href=\"#v:makeValidityRangeSingletonTweak\">makeValidityRangeSingletonTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"makeValidityRangeSingletonTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:makeValidityRangeSingletonTweak"},{"display_html":"<a href=\"#v:makeValidityRangeNowTweak\">makeValidityRangeNowTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"makeValidityRangeNowTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:makeValidityRangeNowTweak"},{"display_html":"<a href=\"#v:waitUntilValidTweak\">waitUntilValidTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitUntilValidTweak","module":"Cooked.Tweak.ValidityRange","link":"Cooked-Tweak-ValidityRange.html#v:waitUntilValidTweak"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:MonadPlus\" title=\"Distribution.Compat.Prelude\">MonadPlus</a> m, <a href=\"Cooked-MockChain-BlockChain.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked.MockChain.BlockChain\">MonadBlockChainWithoutValidation</a> m) =&gt; <a href=\"#t:MonadTweak\">MonadTweak</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:getTxSkel\">getTxSkel</a> :: m <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a></li><li><a href=\"#v:putTxSkel\">putTxSkel</a> :: <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> -&gt; m ()</li></ul>","name":"MonadTweak getTxSkel putTxSkel","module":"Cooked.Tweak","link":"Cooked-Tweak.html#t:MonadTweak"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PermutOutTweakMode\">PermutOutTweakMode</a><ul class=\"subs\"><li>= <a href=\"#v:KeepIdentity\">KeepIdentity</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>)</li><li>| <a href=\"#v:OmitIdentity\">OmitIdentity</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>)</li></ul>","name":"PermutOutTweakMode KeepIdentity OmitIdentity","module":"Cooked.Tweak","link":"Cooked-Tweak.html#t:PermutOutTweakMode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TamperDatumLbl\">TamperDatumLbl</a> = <a href=\"#v:TamperDatumLbl\">TamperDatumLbl</a>","name":"TamperDatumLbl TamperDatumLbl","module":"Cooked.Tweak","link":"Cooked-Tweak.html#t:TamperDatumLbl"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MalformDatumLbl\">MalformDatumLbl</a> = <a href=\"#v:MalformDatumLbl\">MalformDatumLbl</a>","name":"MalformDatumLbl MalformDatumLbl","module":"Cooked.Tweak","link":"Cooked-Tweak.html#t:MalformDatumLbl"},{"display_html":"<a href=\"#v:failingTweak\">failingTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m a","name":"failingTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:failingTweak"},{"display_html":"<a href=\"#v:doNothingTweak\">doNothingTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m ()","name":"doNothingTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:doNothingTweak"},{"display_html":"<a href=\"#v:viewTweak\">viewTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; m a","name":"viewTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:viewTweak"},{"display_html":"<a href=\"#v:viewAllTweak\">viewAllTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Fold.html#t:A_Fold\" title=\"Optics.Fold\">A_Fold</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; m [a]","name":"viewAllTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:viewAllTweak"},{"display_html":"<a href=\"#v:setTweak\">setTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-IxSetter.html#t:A_Setter\" title=\"Optics.IxSetter\">A_Setter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; a -&gt; m ()","name":"setTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:setTweak"},{"display_html":"<a href=\"#v:overTweak\">overTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-IxSetter.html#t:A_Setter\" title=\"Optics.IxSetter\">A_Setter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (a -&gt; a) -&gt; m ()","name":"overTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:overTweak"},{"display_html":"<a href=\"#v:overMaybeTweak\">overMaybeTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; m [a]","name":"overMaybeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:overMaybeTweak"},{"display_html":"<a href=\"#v:overMaybeSelectingTweak\">overMaybeSelectingTweak</a> :: <span class=\"keyword\">forall</span> a m k is. (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [a]","name":"overMaybeSelectingTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:overMaybeSelectingTweak"},{"display_html":"<a href=\"#v:selectP\">selectP</a> :: (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> a a","name":"selectP","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:selectP"},{"display_html":"<a href=\"#v:combineModsTweak\">combineModsTweak</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> is, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>, <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m) =&gt; ([is] -&gt; [[is]]) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> x -&gt; (is -&gt; x -&gt; m [(x, l)]) -&gt; m [l]","name":"combineModsTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:combineModsTweak"},{"display_html":"<a href=\"#v:iviewTweak\">iviewTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; m (is, a)","name":"iviewTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:iviewTweak"},{"display_html":"<a href=\"#v:ensureInputTweak\">ensureInputTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>))","name":"ensureInputTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:ensureInputTweak"},{"display_html":"<a href=\"#v:addInputTweak\">addInputTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> -&gt; m ()","name":"addInputTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addInputTweak"},{"display_html":"<a href=\"#v:removeInputTweak\">removeInputTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>)]","name":"removeInputTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:removeInputTweak"},{"display_html":"<a href=\"#v:modifySpendRedeemersOfTypeTweak\">modifySpendRedeemersOfTypeTweak</a> :: <span class=\"keyword\">forall</span> a b m. (<a href=\"Cooked-Skeleton-Redeemer.html#t:RedeemerConstrs\" title=\"Cooked.Skeleton.Redeemer\">RedeemerConstrs</a> a, <a href=\"Cooked-Skeleton-Redeemer.html#t:RedeemerConstrs\" title=\"Cooked.Skeleton.Redeemer\">RedeemerConstrs</a> b, <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b) -&gt; m [<a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>]","name":"modifySpendRedeemersOfTypeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:modifySpendRedeemersOfTypeTweak"},{"display_html":"<a href=\"#v:addLabelTweak\">addLabelTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Label.html#t:LabelConstrs\" title=\"Cooked.Skeleton.Label\">LabelConstrs</a> x) =&gt; x -&gt; m ()","name":"addLabelTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addLabelTweak"},{"display_html":"<a href=\"#v:removeLabelTweak\">removeLabelTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Label.html#t:LabelConstrs\" title=\"Cooked.Skeleton.Label\">LabelConstrs</a> x) =&gt; x -&gt; m ()","name":"removeLabelTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:removeLabelTweak"},{"display_html":"<a href=\"#v:hasLabelTweak\">hasLabelTweak</a> :: (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Label.html#t:LabelConstrs\" title=\"Cooked.Skeleton.Label\">LabelConstrs</a> x) =&gt; x -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasLabelTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:hasLabelTweak"},{"display_html":"<a href=\"#v:addMintsTweak\">addMintsTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a>] -&gt; m ()","name":"addMintsTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addMintsTweak"},{"display_html":"<a href=\"#v:removeMintTweak\">removeMintTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; (<a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [<a href=\"Cooked-Skeleton-Mint.html#t:Mint\" title=\"Cooked.Skeleton.Mint\">Mint</a>]","name":"removeMintTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:removeMintTweak"},{"display_html":"<a href=\"#v:allOutPermutsTweak\">allOutPermutsTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Tweak.html#t:PermutOutTweakMode\" title=\"Cooked.Tweak\">PermutOutTweakMode</a> -&gt; m ()","name":"allOutPermutsTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:allOutPermutsTweak"},{"display_html":"<a href=\"#v:singleOutPermutTweak\">singleOutPermutTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a> -&gt; m ()","name":"singleOutPermutTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:singleOutPermutTweak"},{"display_html":"<a href=\"#v:ensureOutputTweak\">ensureOutputTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>)","name":"ensureOutputTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:ensureOutputTweak"},{"display_html":"<a href=\"#v:addOutputTweak\">addOutputTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; m ()","name":"addOutputTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addOutputTweak"},{"display_html":"<a href=\"#v:removeOutputTweak\">removeOutputTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; (<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>]","name":"removeOutputTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:removeOutputTweak"},{"display_html":"<a href=\"#v:tamperDatumTweak\">tamperDatumTweak</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Datum.html#t:DatumConstrs\" title=\"Cooked.Skeleton.Datum\">DatumConstrs</a> a) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; m [a]","name":"tamperDatumTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:tamperDatumTweak"},{"display_html":"<a href=\"#v:malformDatumTweak\">malformDatumTweak</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Datum.html#t:DatumConstrs\" title=\"Cooked.Skeleton.Datum\">DatumConstrs</a> a) =&gt; (a -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinData\" title=\"PlutusLedgerApi.Common\">BuiltinData</a>]) -&gt; m ()","name":"malformDatumTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:malformDatumTweak"},{"display_html":"<a href=\"#v:getSignersTweak\">getSignersTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"getSignersTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:getSignersTweak"},{"display_html":"<a href=\"#v:modifySignersTweak\">modifySignersTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; ([<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]) -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"modifySignersTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:modifySignersTweak"},{"display_html":"<a href=\"#v:setSignersTweak\">setSignersTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"setSignersTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:setSignersTweak"},{"display_html":"<a href=\"#v:signersSatisfyTweak\">signersSatisfyTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; ([<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"signersSatisfyTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:signersSatisfyTweak"},{"display_html":"<a href=\"#v:isSignerTweak\">isSignerTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isSignerTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:isSignerTweak"},{"display_html":"<a href=\"#v:hasSignersTweak\">hasSignersTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasSignersTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:hasSignersTweak"},{"display_html":"<a href=\"#v:addFirstSignerTweak\">addFirstSignerTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"addFirstSignerTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addFirstSignerTweak"},{"display_html":"<a href=\"#v:addSignersTweak\">addSignersTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"addSignersTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addSignersTweak"},{"display_html":"<a href=\"#v:addLastSignerTweak\">addLastSignerTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"addLastSignerTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:addLastSignerTweak"},{"display_html":"<a href=\"#v:removeSignersTweak\">removeSignersTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>] -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"removeSignersTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:removeSignersTweak"},{"display_html":"<a href=\"#v:removeSignerTweak\">removeSignerTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"removeSignerTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:removeSignerTweak"},{"display_html":"<a href=\"#v:replaceFirstSignerTweak\">replaceFirstSignerTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m [<a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a>]","name":"replaceFirstSignerTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:replaceFirstSignerTweak"},{"display_html":"<a href=\"#v:getValidityRangeTweak\">getValidityRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"getValidityRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:getValidityRangeTweak"},{"display_html":"<a href=\"#v:setValidityRangeTweak\">setValidityRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:setValidityRangeTweak"},{"display_html":"<a href=\"#v:setAlwaysValidRangeTweak\">setAlwaysValidRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setAlwaysValidRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:setAlwaysValidRangeTweak"},{"display_html":"<a href=\"#v:setValidityStartTweak\">setValidityStartTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityStartTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:setValidityStartTweak"},{"display_html":"<a href=\"#v:setValidityEndTweak\">setValidityEndTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityEndTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:setValidityEndTweak"},{"display_html":"<a href=\"#v:validityRangeSatisfiesTweak\">validityRangeSatisfiesTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"validityRangeSatisfiesTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:validityRangeSatisfiesTweak"},{"display_html":"<a href=\"#v:isValidAtTweak\">isValidAtTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidAtTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:isValidAtTweak"},{"display_html":"<a href=\"#v:isValidNowTweak\">isValidNowTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidNowTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:isValidNowTweak"},{"display_html":"<a href=\"#v:isValidDuringTweak\">isValidDuringTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidDuringTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:isValidDuringTweak"},{"display_html":"<a href=\"#v:hasEmptyTimeRangeTweak\">hasEmptyTimeRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasEmptyTimeRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:hasEmptyTimeRangeTweak"},{"display_html":"<a href=\"#v:hasFullTimeRangeTweak\">hasFullTimeRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasFullTimeRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:hasFullTimeRangeTweak"},{"display_html":"<a href=\"#v:intersectValidityRangeTweak\">intersectValidityRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"intersectValidityRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:intersectValidityRangeTweak"},{"display_html":"<a href=\"#v:centerAroundValidityRangeTweak\">centerAroundValidityRangeTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"centerAroundValidityRangeTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:centerAroundValidityRangeTweak"},{"display_html":"<a href=\"#v:makeValidityRangeSingletonTweak\">makeValidityRangeSingletonTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"makeValidityRangeSingletonTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:makeValidityRangeSingletonTweak"},{"display_html":"<a href=\"#v:makeValidityRangeNowTweak\">makeValidityRangeNowTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"makeValidityRangeNowTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:makeValidityRangeNowTweak"},{"display_html":"<a href=\"#v:waitUntilValidTweak\">waitUntilValidTweak</a> :: <a href=\"Cooked-Tweak.html#t:MonadTweak\" title=\"Cooked.Tweak\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitUntilValidTweak","module":"Cooked.Tweak","link":"Cooked-Tweak.html#v:waitUntilValidTweak"},{"display_html":"<a href=\"#v:dupTokenAttack\">dupTokenAttack</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> o) =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:AssetClass\" title=\"PlutusLedgerApi.V1.Value\">AssetClass</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>) -&gt; o -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"dupTokenAttack","module":"Cooked.Attack.DupToken","link":"Cooked-Attack-DupToken.html#v:dupTokenAttack"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DupTokenLbl\">DupTokenLbl</a> = <a href=\"#v:DupTokenLbl\">DupTokenLbl</a>","name":"DupTokenLbl DupTokenLbl","module":"Cooked.Attack.DupToken","link":"Cooked-Attack-DupToken.html#t:DupTokenLbl"},{"display_html":"<a href=\"#v:redirectOutputTweakAny\">redirectOutputTweakAny</a> :: <span class=\"keyword\">forall</span> owner owner' m. (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> owner, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> owner') =&gt; (<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> owner') -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"redirectOutputTweakAny","module":"Cooked.Attack.DatumHijacking","link":"Cooked-Attack-DatumHijacking.html#v:redirectOutputTweakAny"},{"display_html":"<a href=\"#v:datumHijackingAttackAny\">datumHijackingAttackAny</a> :: <span class=\"keyword\">forall</span> owner owner' m. (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> owner, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> owner') =&gt; (<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; owner' -&gt; m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"datumHijackingAttackAny","module":"Cooked.Attack.DatumHijacking","link":"Cooked-Attack-DatumHijacking.html#v:datumHijackingAttackAny"},{"display_html":"<a href=\"#v:datumHijackingAttack\">datumHijackingAttack</a> :: <span class=\"keyword\">forall</span> owner owner' m. (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> owner, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> owner') =&gt; owner' -&gt; m <a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>","name":"datumHijackingAttack","module":"Cooked.Attack.DatumHijacking","link":"Cooked-Attack-DatumHijacking.html#v:datumHijackingAttack"},{"display_html":"<a href=\"#v:redirectOutputTweakAll\">redirectOutputTweakAll</a> :: <span class=\"keyword\">forall</span> owner owner' m. (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> owner, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> owner') =&gt; (<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> owner') -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>]","name":"redirectOutputTweakAll","module":"Cooked.Attack.DatumHijacking","link":"Cooked-Attack-DatumHijacking.html#v:redirectOutputTweakAll"},{"display_html":"<a href=\"#v:datumHijackingAttackAll\">datumHijackingAttackAll</a> :: <span class=\"keyword\">forall</span> owner owner' m. (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> owner, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> owner') =&gt; (<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; owner' -&gt; m [<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>]","name":"datumHijackingAttackAll","module":"Cooked.Attack.DatumHijacking","link":"Cooked-Attack-DatumHijacking.html#v:datumHijackingAttackAll"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:DatumHijackingLbl\">DatumHijackingLbl</a> = <a href=\"#v:DatumHijackingLbl\">DatumHijackingLbl</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a>","name":"DatumHijackingLbl DatumHijackingLbl","module":"Cooked.Attack.DatumHijacking","link":"Cooked-Attack-DatumHijacking.html#t:DatumHijackingLbl"},{"display_html":"<a href=\"#v:addTokenAttack\">addTokenAttack</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"Cooked-Skeleton-Output.html#t:OwnerConstrs\" title=\"Cooked.Skeleton.Output\">OwnerConstrs</a> o) =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:MintingPolicy\" title=\"Ledger\">MintingPolicy</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)]) -&gt; o -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"addTokenAttack","module":"Cooked.Attack.AddToken","link":"Cooked-Attack-AddToken.html#v:addTokenAttack"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AddTokenLbl\">AddTokenLbl</a> = <a href=\"#v:AddTokenLbl\">AddTokenLbl</a>","name":"AddTokenLbl AddTokenLbl","module":"Cooked.Attack.AddToken","link":"Cooked-Attack-AddToken.html#t:AddTokenLbl"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DoubleSatDelta\">DoubleSatDelta</a> = (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"Cooked-Skeleton-Redeemer.html#t:TxSkelRedeemer\" title=\"Cooked.Skeleton.Redeemer\">TxSkelRedeemer</a>, [<a href=\"Cooked-Skeleton-Output.html#t:TxSkelOut\" title=\"Cooked.Skeleton.Output\">TxSkelOut</a>], <a href=\"Cooked-Skeleton-Mint.html#t:TxSkelMints\" title=\"Cooked.Skeleton.Mint\">TxSkelMints</a>)","name":"DoubleSatDelta","module":"Cooked.Attack.DoubleSat","link":"Cooked-Attack-DoubleSat.html#t:DoubleSatDelta"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DoubleSatLbl\">DoubleSatLbl</a> = <a href=\"#v:DoubleSatLbl\">DoubleSatLbl</a>","name":"DoubleSatLbl DoubleSatLbl","module":"Cooked.Attack.DoubleSat","link":"Cooked-Attack-DoubleSat.html#t:DoubleSatLbl"},{"display_html":"<a href=\"#v:doubleSatAttack\">doubleSatAttack</a> :: (<a href=\"Cooked-Tweak-Common.html#t:MonadTweak\" title=\"Cooked.Tweak.Common\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> is, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; ([is] -&gt; [[is]]) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked-Skeleton.html#t:TxSkel\" title=\"Cooked.Skeleton\">TxSkel</a> a -&gt; (is -&gt; a -&gt; m [(a, <a href=\"Cooked-Attack-DoubleSat.html#t:DoubleSatDelta\" title=\"Cooked.Attack.DoubleSat\">DoubleSatDelta</a>)]) -&gt; <a href=\"Cooked-Wallet.html#t:Wallet\" title=\"Cooked.Wallet\">Wallet</a> -&gt; m ()","name":"doubleSatAttack","module":"Cooked.Attack.DoubleSat","link":"Cooked-Attack-DoubleSat.html#v:doubleSatAttack"},{"display_html":"module <a href=\"Cooked-Attack-DupToken.html\">Cooked.Attack.DupToken</a>","name":"","module":"Cooked.Attack","link":""},{"display_html":"module <a href=\"Cooked-Attack-DoubleSat.html\">Cooked.Attack.DoubleSat</a>","name":"","module":"Cooked.Attack","link":""},{"display_html":"module <a href=\"Cooked-Attack-DatumHijacking.html\">Cooked.Attack.DatumHijacking</a>","name":"","module":"Cooked.Attack","link":""},{"display_html":"module <a href=\"Cooked-Attack-AddToken.html\">Cooked.Attack.AddToken</a>","name":"","module":"Cooked.Attack","link":""},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Test\">Test</a> a prop = <a href=\"#v:Test\">Test</a> {<ul class=\"subs\"><li><a href=\"#v:testTrace\">testTrace</a> :: <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a</li><li><a href=\"#v:testInitDist\">testInitDist</a> :: <a href=\"Cooked.html#t:InitialDistribution\" title=\"Cooked\">InitialDistribution</a></li><li><a href=\"#v:testSizeProp\">testSizeProp</a> :: <a href=\"Cooked.html#t:SizeProp\" title=\"Cooked\">SizeProp</a> prop</li><li><a href=\"#v:testFailureProp\">testFailureProp</a> :: <a href=\"Cooked.html#t:FailureProp\" title=\"Cooked\">FailureProp</a> prop</li><li><a href=\"#v:testSuccessProp\">testSuccessProp</a> :: <a href=\"Cooked.html#t:SuccessProp\" title=\"Cooked\">SuccessProp</a> a prop</li><li><a href=\"#v:testPrettyOpts\">testPrettyOpts</a> :: <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a></li></ul>}","name":"Test Test testTrace testInitDist testSizeProp testFailureProp testSuccessProp testPrettyOpts","module":"Cooked","link":"Cooked.html#t:Test"},{"display_html":"<span class=\"keyword\">type family</span> (xs :: [a]) <a href=\"#t:-8746-\">&#8746;</a> (ys :: [a]) :: [a] <span class=\"keyword\">where ...</span>","name":"∪","module":"Cooked","link":"Cooked.html#t:-8746-"},{"display_html":"<span class=\"keyword\">type family</span> (el :: a) <a href=\"#t:-8713-\">&#8713;</a> (els :: [a]) :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a> <span class=\"keyword\">where ...</span>","name":"∉","module":"Cooked","link":"Cooked.html#t:-8713-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Mint\">Mint</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:Mint\">Mint</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:MintingPolicy\" title=\"Ledger\">MintingPolicy</a> a =&gt; {..} -&gt; <a href=\"Cooked.html#t:Mint\" title=\"Cooked\">Mint</a></li></ul>","name":"Mint Mint mintMintingPolicy mintRedeemer mintTokens","module":"Cooked","link":"Cooked.html#t:Mint"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Ltl\">Ltl</a> a<ul class=\"subs\"><li>= <a href=\"#v:LtlTruth\">LtlTruth</a></li><li>| <a href=\"#v:LtlFalsity\">LtlFalsity</a></li><li>| <a href=\"#v:LtlAtom\">LtlAtom</a> a</li><li>| <a href=\"#v:LtlOr\">LtlOr</a> (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a) (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a)</li><li>| <a href=\"#v:LtlAnd\">LtlAnd</a> (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a) (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a)</li><li>| <a href=\"#v:LtlNext\">LtlNext</a> (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a)</li><li>| <a href=\"#v:LtlUntil\">LtlUntil</a> (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a) (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a)</li><li>| <a href=\"#v:LtlRelease\">LtlRelease</a> (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a) (<a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a)</li></ul>","name":"Ltl LtlTruth LtlFalsity LtlAtom LtlOr LtlAnd LtlNext LtlUntil LtlRelease","module":"Cooked","link":"Cooked.html#t:Ltl"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:InitialDistribution\">InitialDistribution</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:InitialDistribution\">InitialDistribution</a> :: {..} -&gt; <a href=\"Cooked.html#t:InitialDistribution\" title=\"Cooked\">InitialDistribution</a></li></ul>","name":"InitialDistribution InitialDistribution unInitialDistribution","module":"Cooked","link":"Cooked.html#t:InitialDistribution"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"#t:MonadModal\">MonadModal</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:Modification\">Modification</a> m :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a></li><li><a href=\"#v:modifyLtl\">modifyLtl</a> :: <a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> (<a href=\"Cooked.html#t:Modification\" title=\"Cooked\">Modification</a> m) -&gt; m a -&gt; m a</li></ul>","name":"MonadModal Modification modifyLtl","module":"Cooked","link":"Cooked.html#t:MonadModal"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MockChain\">MockChain</a> = <a href=\"Cooked.html#t:MockChainT\" title=\"Cooked\">MockChainT</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Identity\" title=\"Distribution.Compat.Prelude\">Identity</a>","name":"MockChain","module":"Cooked","link":"Cooked.html#t:MockChain"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ShowBS\">ShowBS</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:showBS\">showBS</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Builtins-Internal.html#t:BuiltinString\" title=\"PlutusTx.Builtins.Internal\">BuiltinString</a></li></ul>","name":"ShowBS showBS","module":"Cooked","link":"Cooked.html#t:ShowBS"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Wallet\">Wallet</a> = <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-CardanoWallet.html#t:MockWallet\" title=\"Ledger.CardanoWallet\">MockWallet</a>","name":"Wallet","module":"Cooked","link":"Cooked.html#t:Wallet"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AddTokenLbl\">AddTokenLbl</a> = <a href=\"#v:AddTokenLbl\">AddTokenLbl</a>","name":"AddTokenLbl AddTokenLbl","module":"Cooked","link":"Cooked.html#t:AddTokenLbl"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:DatumHijackingLbl\">DatumHijackingLbl</a> = <a href=\"#v:DatumHijackingLbl\">DatumHijackingLbl</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a>","name":"DatumHijackingLbl DatumHijackingLbl","module":"Cooked","link":"Cooked.html#t:DatumHijackingLbl"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DoubleSatDelta\">DoubleSatDelta</a> = (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>, [<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>], <a href=\"Cooked.html#t:TxSkelMints\" title=\"Cooked\">TxSkelMints</a>)","name":"DoubleSatDelta","module":"Cooked","link":"Cooked.html#t:DoubleSatDelta"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DoubleSatLbl\">DoubleSatLbl</a> = <a href=\"#v:DoubleSatLbl\">DoubleSatLbl</a>","name":"DoubleSatLbl DoubleSatLbl","module":"Cooked","link":"Cooked.html#t:DoubleSatLbl"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DupTokenLbl\">DupTokenLbl</a> = <a href=\"#v:DupTokenLbl\">DupTokenLbl</a>","name":"DupTokenLbl DupTokenLbl","module":"Cooked","link":"Cooked.html#t:DupTokenLbl"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainState\">MockChainState</a> = <a href=\"#v:MockChainState\">MockChainState</a> {<ul class=\"subs\"><li><a href=\"#v:mcstParams\">mcstParams</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a></li><li><a href=\"#v:mcstLedgerState\">mcstLedgerState</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Validation.html#t:EmulatedLedgerState\" title=\"Cardano.Node.Emulator.Internal.Node.Validation\">EmulatedLedgerState</a></li><li><a href=\"#v:mcstOutputs\">mcstOutputs</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> (<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>)</li><li><a href=\"#v:mcstConstitution\">mcstConstitution</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>)</li></ul>}","name":"MockChainState MockChainState mcstParams mcstLedgerState mcstOutputs mcstConstitution","module":"Cooked","link":"Cooked.html#t:MockChainState"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UtxoSearch\">UtxoSearch</a> m a = <a href=\"https://hackage.haskell.org/package/-/docs/ListT.html#t:ListT\" title=\"ListT\">ListT</a> m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, a)","name":"UtxoSearch","module":"Cooked","link":"Cooked.html#t:UtxoSearch"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainError\">MockChainError</a><ul class=\"subs\"><li>= <a href=\"#v:MCEValidationError\">MCEValidationError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:ValidationPhase\" title=\"Ledger.Index.Internal\">ValidationPhase</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Index-Internal.html#t:ValidationError\" title=\"Ledger.Index.Internal\">ValidationError</a></li><li>| <a href=\"#v:MCEUnbalanceable\">MCEUnbalanceable</a> <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a></li><li>| <a href=\"#v:MCEMissingBalancingWallet\">MCEMissingBalancingWallet</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li><li>| <a href=\"#v:MCENoSuitableCollateral\">MCENoSuitableCollateral</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a></li><li>| <a href=\"#v:MCEToCardanoError\">MCEToCardanoError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:ToCardanoError\" title=\"Ledger.Tx.CardanoAPI.Internal\">ToCardanoError</a></li><li>| <a href=\"#v:MCEWrongReferenceScriptError\">MCEWrongReferenceScriptError</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>)</li><li>| <a href=\"#v:MCEUnknownOutRef\">MCEUnknownOutRef</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a></li><li>| <a href=\"#v:MCEPastSlot\">MCEPastSlot</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a></li><li>| <a href=\"#v:MCEUnsupportedFeature\">MCEUnsupportedFeature</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li><li>| <a href=\"#v:FailWith\">FailWith</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li></ul>","name":"MockChainError MCEValidationError MCEUnbalanceable MCEMissingBalancingWallet MCENoSuitableCollateral MCEToCardanoError MCEWrongReferenceScriptError MCEUnknownOutRef MCEPastSlot MCEUnsupportedFeature FailWith","module":"Cooked","link":"Cooked.html#t:MockChainError"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-MonadFail.html#t:MonadFail\" title=\"Distribution.Compat.MonadFail\">MonadFail</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:MonadError\" title=\"Cardano.Api\">MonadError</a> <a href=\"Cooked.html#t:MockChainError\" title=\"Cooked\">MockChainError</a> m) =&gt; <a href=\"#t:MonadBlockChainBalancing\">MonadBlockChainBalancing</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:getParams\">getParams</a> :: m <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a></li><li><a href=\"#v:utxosAt\">utxosAt</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> a =&gt; a -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>)]</li><li><a href=\"#v:txSkelOutByRef\">txSkelOutByRef</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a></li></ul>","name":"MonadBlockChainBalancing getParams utxosAt txSkelOutByRef","module":"Cooked","link":"Cooked.html#t:MonadBlockChainBalancing"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"#t:MonadBlockChainWithoutValidation\">MonadBlockChainWithoutValidation</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:allUtxos\">allUtxos</a> :: m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>)]</li><li><a href=\"#v:setParams\">setParams</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; m ()</li><li><a href=\"#v:waitNSlots\">waitNSlots</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i =&gt; i -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a></li><li><a href=\"#v:define\">define</a> :: <a href=\"Cooked.html#t:ToHash\" title=\"Cooked\">ToHash</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; a -&gt; m a</li><li><a href=\"#v:setConstitutionScript\">setConstitutionScript</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> s =&gt; s -&gt; m ()</li><li><a href=\"#v:getConstitutionScript\">getConstitutionScript</a> :: m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>))</li><li><a href=\"#v:registerStakingCred\">registerStakingCred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToCredential\" title=\"Plutus.Script.Utils.Address\">ToCredential</a> c =&gt; c -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m ()</li></ul>","name":"MonadBlockChainWithoutValidation allUtxos setParams waitNSlots define setConstitutionScript getConstitutionScript registerStakingCred","module":"Cooked","link":"Cooked.html#t:MonadBlockChainWithoutValidation"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"#t:MonadBlockChain\">MonadBlockChain</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:validateTxSkel\">validateTxSkel</a> :: <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a></li><li><a href=\"#v:forceOutputs\">forceOutputs</a> :: [<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>] -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>]</li></ul>","name":"MonadBlockChain validateTxSkel forceOutputs","module":"Cooked","link":"Cooked.html#t:MonadBlockChain"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:AsTrans\">AsTrans</a> t (m :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a = <a href=\"#v:AsTrans\">AsTrans</a> {<ul class=\"subs\"><li><a href=\"#v:getTrans\">getTrans</a> :: t m a</li></ul>}","name":"AsTrans AsTrans getTrans","module":"Cooked","link":"Cooked.html#t:AsTrans"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MockChainBook\">MockChainBook</a> = <a href=\"#v:MockChainBook\">MockChainBook</a> {<ul class=\"subs\"><li><a href=\"#v:mcbJournal\">mcbJournal</a> :: [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>]</li><li><a href=\"#v:mcbAliases\">mcbAliases</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li></ul>}","name":"MockChainBook MockChainBook mcbJournal mcbAliases","module":"Cooked","link":"Cooked.html#t:MockChainBook"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:MonadModalBlockChain\">MonadModalBlockChain</a> m = (<a href=\"Cooked.html#t:MonadBlockChain\" title=\"Cooked\">MonadBlockChain</a> m, <a href=\"Cooked.html#t:MonadModal\" title=\"Cooked\">MonadModal</a> m, <a href=\"Cooked.html#t:Modification\" title=\"Cooked\">Modification</a> m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:-126-\" title=\"Distribution.Compat.Prelude\">~</a> <a href=\"Cooked-Tweak-Common.html#t:UntypedTweak\" title=\"Cooked.Tweak.Common\">UntypedTweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a>)","name":"MonadModalBlockChain","module":"Cooked","link":"Cooked.html#t:MonadModalBlockChain"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsProp\">IsProp</a> prop <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:testCounterexample\">testCounterexample</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; prop -&gt; prop</li><li><a href=\"#v:testConjoin\">testConjoin</a> :: [prop] -&gt; prop</li><li><a href=\"#v:testDisjoin\">testDisjoin</a> :: [prop] -&gt; prop</li><li><a href=\"#v:testFailure\">testFailure</a> :: prop</li><li><a href=\"#v:testSuccess\">testSuccess</a> :: prop</li><li><a href=\"#v:testFailureMsg\">testFailureMsg</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; prop</li></ul>","name":"IsProp testCounterexample testConjoin testDisjoin testFailure testSuccess testFailureMsg","module":"Cooked","link":"Cooked.html#t:IsProp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UtxoPayloadDatum\">UtxoPayloadDatum</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:NoUtxoPayloadDatum\">NoUtxoPayloadDatum</a> :: <a href=\"Cooked.html#t:UtxoPayloadDatum\" title=\"Cooked\">UtxoPayloadDatum</a></li><li><a href=\"#v:SomeUtxoPayloadDatum\">SomeUtxoPayloadDatum</a> :: <a href=\"Cooked.html#t:DatumConstrs\" title=\"Cooked\">DatumConstrs</a> dat =&gt; dat -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a> -&gt; <a href=\"Cooked.html#t:UtxoPayloadDatum\" title=\"Cooked\">UtxoPayloadDatum</a></li></ul>","name":"UtxoPayloadDatum NoUtxoPayloadDatum SomeUtxoPayloadDatum","module":"Cooked","link":"Cooked.html#t:UtxoPayloadDatum"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DocCooked\">DocCooked</a> = <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Pretty.html#t:Doc\" title=\"Cardano.Api.Internal.Pretty\">Doc</a> ()","name":"DocCooked","module":"Cooked","link":"Cooked.html#t:DocCooked"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PrettyCooked\">PrettyCooked</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:prettyCookedOpt\">prettyCookedOpt</a> :: <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a></li><li><a href=\"#v:prettyCooked\">prettyCooked</a> :: a -&gt; <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a></li></ul>","name":"PrettyCooked prettyCookedOpt prettyCooked","module":"Cooked","link":"Cooked.html#t:PrettyCooked"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PrettyCookedList\">PrettyCookedList</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:prettyCookedOptList\">prettyCookedOptList</a> :: <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; a -&gt; [<a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a>]</li><li><a href=\"#v:prettyCookedOptListMaybe\">prettyCookedOptListMaybe</a> :: <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; a -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a>]</li><li><a href=\"#v:prettyCookedList\">prettyCookedList</a> :: a -&gt; [<a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a>]</li></ul>","name":"PrettyCookedList prettyCookedOptList prettyCookedOptListMaybe prettyCookedList","module":"Cooked","link":"Cooked.html#t:PrettyCookedList"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:PrettyCookedMaybe\">PrettyCookedMaybe</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:prettyCookedOptMaybe\">prettyCookedOptMaybe</a> :: <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a></li><li><a href=\"#v:prettyCookedMaybe\">prettyCookedMaybe</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a></li></ul>","name":"PrettyCookedMaybe prettyCookedOptMaybe prettyCookedMaybe","module":"Cooked","link":"Cooked.html#t:PrettyCookedMaybe"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToHash\">ToHash</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toHash\">toHash</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a></li></ul>","name":"ToHash toHash","module":"Cooked","link":"Cooked.html#t:ToHash"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PrettyCookedOpts\">PrettyCookedOpts</a> = <a href=\"#v:PrettyCookedOpts\">PrettyCookedOpts</a> {<ul class=\"subs\"><li><a href=\"#v:pcOptPrintTxHashes\">pcOptPrintTxHashes</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptPrintTxOutRefs\">pcOptPrintTxOutRefs</a> :: <a href=\"Cooked.html#t:PCOptTxOutRefs\" title=\"Cooked\">PCOptTxOutRefs</a></li><li><a href=\"#v:pcOptPrintDefaultTxSkelOpts\">pcOptPrintDefaultTxSkelOpts</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptNumericUnderscores\">pcOptNumericUnderscores</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptHashes\">pcOptHashes</a> :: <a href=\"Cooked.html#t:PrettyCookedHashOpts\" title=\"Cooked\">PrettyCookedHashOpts</a></li><li><a href=\"#v:pcOptPrintLog\">pcOptPrintLog</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:pcOptPrintConsumedUTxOs\">pcOptPrintConsumedUTxOs</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li></ul>}","name":"PrettyCookedOpts PrettyCookedOpts pcOptPrintTxHashes pcOptPrintTxOutRefs pcOptPrintDefaultTxSkelOpts pcOptNumericUnderscores pcOptHashes pcOptPrintLog pcOptPrintConsumedUTxOs","module":"Cooked","link":"Cooked.html#t:PrettyCookedOpts"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PrettyCookedHashOpts\">PrettyCookedHashOpts</a> = <a href=\"#v:PrettyCookedHashOpts\">PrettyCookedHashOpts</a> {<ul class=\"subs\"><li><a href=\"#v:pcOptHashLength\">pcOptHashLength</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a></li><li><a href=\"#v:pcOptHashNames\">pcOptHashNames</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a></li><li><a href=\"#v:pcOptHashVerbose\">pcOptHashVerbose</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li></ul>}","name":"PrettyCookedHashOpts PrettyCookedHashOpts pcOptHashLength pcOptHashNames pcOptHashVerbose","module":"Cooked","link":"Cooked.html#t:PrettyCookedHashOpts"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PCOptTxOutRefs\">PCOptTxOutRefs</a><ul class=\"subs\"><li>= <a href=\"#v:PCOptTxOutRefsHidden\">PCOptTxOutRefsHidden</a></li><li>| <a href=\"#v:PCOptTxOutRefsFull\">PCOptTxOutRefsFull</a></li><li>| <a href=\"#v:PCOptTxOutRefsPartial\">PCOptTxOutRefsPartial</a></li></ul>","name":"PCOptTxOutRefs PCOptTxOutRefsHidden PCOptTxOutRefsFull PCOptTxOutRefsPartial","module":"Cooked","link":"Cooked.html#t:PCOptTxOutRefs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkel\">TxSkel</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkel\">TxSkel</a> :: {..} -&gt; <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a></li></ul>","name":"TxSkel TxSkel txSkelLabel txSkelOpts txSkelMints txSkelSigners txSkelValidityRange txSkelIns txSkelInsReference txSkelOuts txSkelProposals txSkelWithdrawals","module":"Cooked","link":"Cooked.html#t:TxSkel"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Payable\">Payable</a> :: [<a href=\"https://hackage.haskell.org/package/-/docs/GHC-TypeLits.html#t:Symbol\" title=\"GHC.TypeLits\">Symbol</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:VisibleHashedDatum\">VisibleHashedDatum</a> :: <a href=\"Cooked.html#t:DatumConstrs\" title=\"Cooked\">DatumConstrs</a> a =&gt; a -&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> '[&quot;Datum&quot;]</li><li><a href=\"#v:InlineDatum\">InlineDatum</a> :: <a href=\"Cooked.html#t:DatumConstrs\" title=\"Cooked\">DatumConstrs</a> a =&gt; a -&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> '[&quot;Datum&quot;]</li><li><a href=\"#v:HiddenHashedDatum\">HiddenHashedDatum</a> :: <a href=\"Cooked.html#t:DatumConstrs\" title=\"Cooked\">DatumConstrs</a> a =&gt; a -&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> '[&quot;Datum&quot;]</li><li><a href=\"#v:ReferenceScript\">ReferenceScript</a> :: <a href=\"Cooked.html#t:ReferenceScriptConstrs\" title=\"Cooked\">ReferenceScriptConstrs</a> s =&gt; s -&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> '[&quot;Reference Script&quot;]</li><li><a href=\"#v:Value\">Value</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Value.html#t:ToValue\" title=\"Plutus.Script.Utils.Value\">ToValue</a> a =&gt; a -&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> '[&quot;Value&quot;]</li><li><a href=\"#v:FixedValue\">FixedValue</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Value.html#t:ToValue\" title=\"Plutus.Script.Utils.Value\">ToValue</a> a =&gt; a -&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> '[&quot;Value&quot;]</li><li><a href=\"#v:StakingCredential\">StakingCredential</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToMaybeStakingCredential\" title=\"Plutus.Script.Utils.Address\">ToMaybeStakingCredential</a> cred =&gt; cred -&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> '[&quot;Staking Credential&quot;]</li><li><a href=\"#v:PayableAnd\">PayableAnd</a> :: els <a href=\"Cooked.html#t:-10816-\" title=\"Cooked\">&#10816;</a> els' =&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> els -&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> els' -&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> (els <a href=\"Cooked.html#t:-8746-\" title=\"Cooked\">&#8746;</a> els')</li></ul>","name":"Payable Value ReferenceScript InlineDatum StakingCredential VisibleHashedDatum HiddenHashedDatum FixedValue PayableAnd","module":"Cooked","link":"Cooked.html#t:Payable"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:DatumConstrs\">DatumConstrs</a> datum = (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> datum, <a href=\"Cooked.html#t:PrettyCooked\" title=\"Cooked\">PrettyCooked</a> datum, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:ToData\" title=\"PlutusLedgerApi.Common\">ToData</a> datum, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:FromData\" title=\"PlutusLedgerApi.Common\">FromData</a> datum, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> datum, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> datum)","name":"DatumConstrs","module":"Cooked","link":"Cooked.html#t:DatumConstrs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DatumResolved\">DatumResolved</a><ul class=\"subs\"><li>= <a href=\"#v:NotResolved\">NotResolved</a></li><li>| <a href=\"#v:Resolved\">Resolved</a></li></ul>","name":"DatumResolved NotResolved Resolved","module":"Cooked","link":"Cooked.html#t:DatumResolved"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DatumKind\">DatumKind</a><ul class=\"subs\"><li>= <a href=\"#v:Inline\">Inline</a></li><li>| <a href=\"#v:Hashed\">Hashed</a> <a href=\"Cooked.html#t:DatumResolved\" title=\"Cooked\">DatumResolved</a></li></ul>","name":"DatumKind Inline Hashed","module":"Cooked","link":"Cooked.html#t:DatumKind"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelOutDatum\">TxSkelOutDatum</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:NoTxSkelOutDatum\">NoTxSkelOutDatum</a> :: <a href=\"Cooked.html#t:TxSkelOutDatum\" title=\"Cooked\">TxSkelOutDatum</a></li><li><a href=\"#v:SomeTxSkelOutDatum\">SomeTxSkelOutDatum</a> :: <a href=\"Cooked.html#t:DatumConstrs\" title=\"Cooked\">DatumConstrs</a> dat =&gt; dat -&gt; <a href=\"Cooked.html#t:DatumKind\" title=\"Cooked\">DatumKind</a> -&gt; <a href=\"Cooked.html#t:TxSkelOutDatum\" title=\"Cooked\">TxSkelOutDatum</a></li></ul>","name":"TxSkelOutDatum NoTxSkelOutDatum SomeTxSkelOutDatum","module":"Cooked","link":"Cooked.html#t:TxSkelOutDatum"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:LabelConstrs\">LabelConstrs</a> x = (<a href=\"Cooked.html#t:PrettyCooked\" title=\"Cooked\">PrettyCooked</a> x, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> x, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> x, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> x, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Ord\" title=\"Distribution.Compat.Prelude\">Ord</a> x)","name":"LabelConstrs","module":"Cooked","link":"Cooked.html#t:LabelConstrs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelLabel\">TxSkelLabel</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkelLabel\">TxSkelLabel</a> :: <a href=\"Cooked.html#t:LabelConstrs\" title=\"Cooked\">LabelConstrs</a> x =&gt; x -&gt; <a href=\"Cooked.html#t:TxSkelLabel\" title=\"Cooked\">TxSkelLabel</a></li></ul>","name":"TxSkelLabel TxSkelLabel","module":"Cooked","link":"Cooked.html#t:TxSkelLabel"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TxSkelMints\">TxSkelMints</a> = <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:MintingPolicy\" title=\"Ledger\">MintingPolicy</a>) (<a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Data-Map-NonEmpty.html#t:NEMap\" title=\"Data.Map.NonEmpty\">NEMap</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck-Modifiers.html#t:NonZero\" title=\"Test.QuickCheck.Modifiers\">NonZero</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>))","name":"TxSkelMints","module":"Cooked","link":"Cooked.html#t:TxSkelMints"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BalanceOutputPolicy\">BalanceOutputPolicy</a><ul class=\"subs\"><li>= <a href=\"#v:AdjustExistingOutput\">AdjustExistingOutput</a></li><li>| <a href=\"#v:DontAdjustExistingOutput\">DontAdjustExistingOutput</a></li></ul>","name":"BalanceOutputPolicy AdjustExistingOutput DontAdjustExistingOutput","module":"Cooked","link":"Cooked.html#t:BalanceOutputPolicy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FeePolicy\">FeePolicy</a><ul class=\"subs\"><li>= <a href=\"#v:AutoFeeComputation\">AutoFeeComputation</a></li><li>| <a href=\"#v:ManualFee\">ManualFee</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a></li></ul>","name":"FeePolicy AutoFeeComputation ManualFee","module":"Cooked","link":"Cooked.html#t:FeePolicy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BalancingPolicy\">BalancingPolicy</a><ul class=\"subs\"><li>= <a href=\"#v:BalanceWithFirstSigner\">BalanceWithFirstSigner</a></li><li>| <a href=\"#v:BalanceWith\">BalanceWith</a> <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a></li><li>| <a href=\"#v:DoNotBalance\">DoNotBalance</a></li></ul>","name":"BalancingPolicy BalanceWithFirstSigner BalanceWith DoNotBalance","module":"Cooked","link":"Cooked.html#t:BalancingPolicy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BalancingUtxos\">BalancingUtxos</a><ul class=\"subs\"><li>= <a href=\"#v:BalancingUtxosFromBalancingWallet\">BalancingUtxosFromBalancingWallet</a></li><li>| <a href=\"#v:BalancingUtxosFromSet\">BalancingUtxosFromSet</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>)</li></ul>","name":"BalancingUtxos BalancingUtxosFromBalancingWallet BalancingUtxosFromSet","module":"Cooked","link":"Cooked.html#t:BalancingUtxos"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CollateralUtxos\">CollateralUtxos</a><ul class=\"subs\"><li>= <a href=\"#v:CollateralUtxosFromBalancingWallet\">CollateralUtxosFromBalancingWallet</a></li><li>| <a href=\"#v:CollateralUtxosFromWallet\">CollateralUtxosFromWallet</a> <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a></li><li>| <a href=\"#v:CollateralUtxosFromSet\">CollateralUtxosFromSet</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>) <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a></li></ul>","name":"CollateralUtxos CollateralUtxosFromBalancingWallet CollateralUtxosFromWallet CollateralUtxosFromSet","module":"Cooked","link":"Cooked.html#t:CollateralUtxos"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AnchorResolution\">AnchorResolution</a><ul class=\"subs\"><li>= <a href=\"#v:AnchorResolutionLocal\">AnchorResolutionLocal</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> <a href=\"https://hackage.haskell.org/package/-/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a>)</li><li>| <a href=\"#v:AnchorResolutionHttp\">AnchorResolutionHttp</a></li></ul>","name":"AnchorResolution AnchorResolutionLocal AnchorResolutionHttp","module":"Cooked","link":"Cooked.html#t:AnchorResolution"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelOpts\">TxSkelOpts</a> = <a href=\"#v:TxSkelOpts\">TxSkelOpts</a> {<ul class=\"subs\"><li><a href=\"#v:txSkelOptAutoSlotIncrease\">txSkelOptAutoSlotIncrease</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a></li><li><a href=\"#v:txSkelOptModTx\">txSkelOptModTx</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a></li><li><a href=\"#v:txSkelOptBalancingPolicy\">txSkelOptBalancingPolicy</a> :: <a href=\"Cooked.html#t:BalancingPolicy\" title=\"Cooked\">BalancingPolicy</a></li><li><a href=\"#v:txSkelOptFeePolicy\">txSkelOptFeePolicy</a> :: <a href=\"Cooked.html#t:FeePolicy\" title=\"Cooked\">FeePolicy</a></li><li><a href=\"#v:txSkelOptBalanceOutputPolicy\">txSkelOptBalanceOutputPolicy</a> :: <a href=\"Cooked.html#t:BalanceOutputPolicy\" title=\"Cooked\">BalanceOutputPolicy</a></li><li><a href=\"#v:txSkelOptBalancingUtxos\">txSkelOptBalancingUtxos</a> :: <a href=\"Cooked.html#t:BalancingUtxos\" title=\"Cooked\">BalancingUtxos</a></li><li><a href=\"#v:txSkelOptModParams\">txSkelOptModParams</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a></li><li><a href=\"#v:txSkelOptCollateralUtxos\">txSkelOptCollateralUtxos</a> :: <a href=\"Cooked.html#t:CollateralUtxos\" title=\"Cooked\">CollateralUtxos</a></li><li><a href=\"#v:txSkelOptAnchorResolution\">txSkelOptAnchorResolution</a> :: <a href=\"Cooked.html#t:AnchorResolution\" title=\"Cooked\">AnchorResolution</a></li></ul>}","name":"TxSkelOpts TxSkelOpts txSkelOptAutoSlotIncrease txSkelOptModTx txSkelOptBalancingPolicy txSkelOptFeePolicy txSkelOptBalanceOutputPolicy txSkelOptBalancingUtxos txSkelOptModParams txSkelOptCollateralUtxos txSkelOptAnchorResolution","module":"Cooked","link":"Cooked.html#t:TxSkelOpts"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelOut\">TxSkelOut</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkelOut\">TxSkelOut</a> :: <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> owner =&gt; {..} -&gt; <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a></li></ul>","name":"TxSkelOut TxSkelOut txSkelOutOwner txSkelOutStakingCredential txSkelOutDatum txSkelOutValue txSkelOutValueAutoAdjust txSkelOutReferenceScript","module":"Cooked","link":"Cooked.html#t:TxSkelOut"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsTxSkelOutAllowedOwner\">IsTxSkelOutAllowedOwner</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toPKHOrValidator\">toPKHOrValidator</a> :: a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Validator\" title=\"Ledger\">Validator</a>)</li></ul>","name":"IsTxSkelOutAllowedOwner toPKHOrValidator","module":"Cooked","link":"Cooked.html#t:IsTxSkelOutAllowedOwner"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:OwnerConstrs\">OwnerConstrs</a> owner = (<a href=\"Cooked.html#t:IsTxSkelOutAllowedOwner\" title=\"Cooked\">IsTxSkelOutAllowedOwner</a> owner, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> owner, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> owner)","name":"OwnerConstrs","module":"Cooked","link":"Cooked.html#t:OwnerConstrs"},{"display_html":"<span class=\"keyword\">type family</span> (els :: [a]) <a href=\"#t:-10816-\">&#10816;</a> (els' :: [a]) :: <a href=\"https://hackage.haskell.org/package/-/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a> <span class=\"keyword\">where ...</span>","name":"⩀","module":"Cooked","link":"Cooked.html#t:-10816-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxParameterChange\">TxParameterChange</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:FeePerByte\">FeePerByte</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:FeeFixed\">FeeFixed</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:MaxBlockBodySize\">MaxBlockBodySize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:MaxTxSize\">MaxTxSize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:MaxBlockHeaderSize\">MaxBlockHeaderSize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:KeyDeposit\">KeyDeposit</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:PoolDeposit\">PoolDeposit</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:PoolRetirementMaxEpoch\">PoolRetirementMaxEpoch</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:PoolNumber\">PoolNumber</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:PoolInfluence\">PoolInfluence</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Rational\" title=\"Distribution.Compat.Prelude\">Rational</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:MonetaryExpansion\">MonetaryExpansion</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Rational\" title=\"Distribution.Compat.Prelude\">Rational</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:TreasuryCut\">TreasuryCut</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Rational\" title=\"Distribution.Compat.Prelude\">Rational</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:MinPoolCost\">MinPoolCost</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:CoinsPerUTxOByte\">CoinsPerUTxOByte</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:CostModels\">CostModels</a> :: {..} -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:Prices\">Prices</a> :: {..} -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:MaxTxExUnits\">MaxTxExUnits</a> :: {..} -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:MaxBlockExUnits\">MaxBlockExUnits</a> :: {..} -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:MaxValSize\">MaxValSize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:CollateralPercentage\">CollateralPercentage</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:MaxCollateralInputs\">MaxCollateralInputs</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:PoolVotingThresholds\">PoolVotingThresholds</a> :: {..} -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:DRepVotingThresholds\">DRepVotingThresholds</a> :: {..} -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:CommitteeMinSize\">CommitteeMinSize</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:CommitteeMaxTermLength\">CommitteeMaxTermLength</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:GovActionLifetime\">GovActionLifetime</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:GovActionDeposit\">GovActionDeposit</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:DRepRegistrationDeposit\">DRepRegistrationDeposit</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:DRepActivity\">DRepActivity</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li><li><a href=\"#v:MinFeeRefScriptCostPerByte\">MinFeeRefScriptCostPerByte</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Rational\" title=\"Distribution.Compat.Prelude\">Rational</a> -&gt; <a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a></li></ul>","name":"TxParameterChange CostModels Prices DRepVotingThresholds PoolVotingThresholds FeePerByte FeeFixed MaxBlockBodySize MaxTxSize MaxBlockHeaderSize KeyDeposit PoolDeposit PoolRetirementMaxEpoch PoolNumber PoolInfluence MonetaryExpansion TreasuryCut MinPoolCost CoinsPerUTxOByte MaxTxExUnits MaxBlockExUnits MaxValSize CollateralPercentage MaxCollateralInputs CommitteeMinSize CommitteeMaxTermLength GovActionLifetime GovActionDeposit DRepRegistrationDeposit DRepActivity MinFeeRefScriptCostPerByte pvtCommitteeNoConfidence pvtCommitteeNormal pvtMotionNoConfidence cmPlutusV1Costs cmPlutusV2Costs cmPlutusV3Costs pMemoryCost pStepCost mteuMemory mteuSteps mbeuMemory mbeuSteps pvtHardFork pvtSecurityGroup drvtMotionNoConfidence drvtCommitteeNormal drvtCommitteeNoConfidence drvtUpdateConstitution drvtHardForkInitialization drvtNetworkGroup drvtEconomicGroup drvtTechnicalGroup drvtGovernanceGroup drvtTreasuryWithdrawal","module":"Cooked","link":"Cooked.html#t:TxParameterChange"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxGovAction\">TxGovAction</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxGovActionParameterChange\">TxGovActionParameterChange</a> :: [<a href=\"Cooked.html#t:TxParameterChange\" title=\"Cooked\">TxParameterChange</a>] -&gt; <a href=\"Cooked.html#t:TxGovAction\" title=\"Cooked\">TxGovAction</a></li><li><a href=\"#v:TxGovActionHardForkInitiation\">TxGovActionHardForkInitiation</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Contexts.html#t:ProtocolVersion\" title=\"PlutusLedgerApi.V3.Contexts\">ProtocolVersion</a> -&gt; <a href=\"Cooked.html#t:TxGovAction\" title=\"Cooked\">TxGovAction</a></li><li><a href=\"#v:TxGovActionTreasuryWithdrawals\">TxGovActionTreasuryWithdrawals</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a> -&gt; <a href=\"Cooked.html#t:TxGovAction\" title=\"Cooked\">TxGovAction</a></li><li><a href=\"#v:TxGovActionNoConfidence\">TxGovActionNoConfidence</a> :: <a href=\"Cooked.html#t:TxGovAction\" title=\"Cooked\">TxGovAction</a></li><li><a href=\"#v:TxGovActionUpdateCommittee\">TxGovActionUpdateCommittee</a> :: [<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Contexts.html#t:ColdCommitteeCredential\" title=\"PlutusLedgerApi.V3.Contexts\">ColdCommitteeCredential</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Contexts.html#t:ColdCommitteeCredential\" title=\"PlutusLedgerApi.V3.Contexts\">ColdCommitteeCredential</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3.html#t:Rational\" title=\"PlutusLedgerApi.V3\">Rational</a> -&gt; <a href=\"Cooked.html#t:TxGovAction\" title=\"Cooked\">TxGovAction</a></li><li><a href=\"#v:TxGovActionNewConstitution\">TxGovActionNewConstitution</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Contexts.html#t:Constitution\" title=\"PlutusLedgerApi.V3.Contexts\">Constitution</a> -&gt; <a href=\"Cooked.html#t:TxGovAction\" title=\"Cooked\">TxGovAction</a></li></ul>","name":"TxGovAction TxGovActionParameterChange TxGovActionHardForkInitiation TxGovActionTreasuryWithdrawals TxGovActionNoConfidence TxGovActionUpdateCommittee TxGovActionNewConstitution","module":"Cooked","link":"Cooked.html#t:TxGovAction"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelProposal\">TxSkelProposal</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkelProposal\">TxSkelProposal</a> :: {..} -&gt; <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a></li></ul>","name":"TxSkelProposal TxSkelProposal txSkelProposalAddress txSkelProposalAction txSkelProposalWitness txSkelProposalAnchor txSkelProposalAutoConstitution","module":"Cooked","link":"Cooked.html#t:TxSkelProposal"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelRedeemer\">TxSkelRedeemer</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:TxSkelRedeemer\">TxSkelRedeemer</a> :: <a href=\"Cooked.html#t:RedeemerConstrs\" title=\"Cooked\">RedeemerConstrs</a> redeemer =&gt; {..} -&gt; <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a></li></ul>","name":"TxSkelRedeemer TxSkelRedeemer txSkelRedeemerContent txSkelRedeemerReferenceInput txSkelRedeemerAutoFill","module":"Cooked","link":"Cooked.html#t:TxSkelRedeemer"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RedeemerConstrs\">RedeemerConstrs</a> redeemer = (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:ToData\" title=\"PlutusLedgerApi.Common\">ToData</a> redeemer, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:FromData\" title=\"PlutusLedgerApi.Common\">FromData</a> redeemer, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> redeemer, <a href=\"Cooked.html#t:PrettyCooked\" title=\"Cooked\">PrettyCooked</a> redeemer, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusTx-Eq.html#t:Eq\" title=\"PlutusTx.Eq\">Eq</a> redeemer, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> redeemer)","name":"RedeemerConstrs","module":"Cooked","link":"Cooked.html#t:RedeemerConstrs"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ReferenceScriptConstrs\">ReferenceScriptConstrs</a> refScript = (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> refScript, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Typeable.html#t:Typeable\" title=\"Distribution.Compat.Typeable\">Typeable</a> refScript)","name":"ReferenceScriptConstrs","module":"Cooked","link":"Cooked.html#t:ReferenceScriptConstrs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TxSkelOutReferenceScript\">TxSkelOutReferenceScript</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:NoTxSkelOutReferenceScript\">NoTxSkelOutReferenceScript</a> :: <a href=\"Cooked.html#t:TxSkelOutReferenceScript\" title=\"Cooked\">TxSkelOutReferenceScript</a></li><li><a href=\"#v:SomeTxSkelOutReferenceScript\">SomeTxSkelOutReferenceScript</a> :: <a href=\"Cooked.html#t:ReferenceScriptConstrs\" title=\"Cooked\">ReferenceScriptConstrs</a> a =&gt; a -&gt; <a href=\"Cooked.html#t:TxSkelOutReferenceScript\" title=\"Cooked\">TxSkelOutReferenceScript</a></li></ul>","name":"TxSkelOutReferenceScript NoTxSkelOutReferenceScript SomeTxSkelOutReferenceScript","module":"Cooked","link":"Cooked.html#t:TxSkelOutReferenceScript"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:TxSkelWithdrawals\">TxSkelWithdrawals</a> = <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>) <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a>) (<a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>)","name":"TxSkelWithdrawals","module":"Cooked","link":"Cooked.html#t:TxSkelWithdrawals"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:MonadPlus\" title=\"Distribution.Compat.Prelude\">MonadPlus</a> m, <a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m) =&gt; <a href=\"#t:MonadTweak\">MonadTweak</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:getTxSkel\">getTxSkel</a> :: m <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a></li><li><a href=\"#v:putTxSkel\">putTxSkel</a> :: <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; m ()</li></ul>","name":"MonadTweak getTxSkel putTxSkel","module":"Cooked","link":"Cooked.html#t:MonadTweak"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PermutOutTweakMode\">PermutOutTweakMode</a><ul class=\"subs\"><li>= <a href=\"#v:KeepIdentity\">KeepIdentity</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>)</li><li>| <a href=\"#v:OmitIdentity\">OmitIdentity</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>)</li></ul>","name":"PermutOutTweakMode KeepIdentity OmitIdentity","module":"Cooked","link":"Cooked.html#t:PermutOutTweakMode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TamperDatumLbl\">TamperDatumLbl</a> = <a href=\"#v:TamperDatumLbl\">TamperDatumLbl</a>","name":"TamperDatumLbl TamperDatumLbl","module":"Cooked","link":"Cooked.html#t:TamperDatumLbl"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MalformDatumLbl\">MalformDatumLbl</a> = <a href=\"#v:MalformDatumLbl\">MalformDatumLbl</a>","name":"MalformDatumLbl MalformDatumLbl","module":"Cooked","link":"Cooked.html#t:MalformDatumLbl"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:MockChainT\">MockChainT</a> m a = <a href=\"#v:MockChainT\">MockChainT</a> {<ul class=\"subs\"><li><a href=\"#v:unMockChain\">unMockChain</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api.html#t:ExceptT\" title=\"Cardano.Api\">ExceptT</a> <a href=\"Cooked.html#t:MockChainError\" title=\"Cooked\">MockChainError</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Data-MemPack.html#t:StateT\" title=\"Data.MemPack\">StateT</a> <a href=\"Cooked.html#t:MockChainState\" title=\"Cooked\">MockChainState</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Control-Monad-Writer-Lazy.html#t:WriterT\" title=\"Control.Monad.Writer.Lazy\">WriterT</a> <a href=\"Cooked.html#t:MockChainBook\" title=\"Cooked\">MockChainBook</a> m)) a</li></ul>}","name":"MockChainT MockChainT unMockChain","module":"Cooked","link":"Cooked.html#t:MockChainT"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FailureProp\">FailureProp</a> prop = <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>] -&gt; <a href=\"Cooked.html#t:MockChainError\" title=\"Cooked\">MockChainError</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; prop","name":"FailureProp","module":"Cooked","link":"Cooked.html#t:FailureProp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SuccessProp\">SuccessProp</a> a prop = <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>] -&gt; a -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; prop","name":"SuccessProp","module":"Cooked","link":"Cooked.html#t:SuccessProp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SizeProp\">SizeProp</a> prop = <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; prop","name":"SizeProp","module":"Cooked","link":"Cooked.html#t:SizeProp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:JournalProp\">JournalProp</a> prop = <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>] -&gt; prop","name":"JournalProp","module":"Cooked","link":"Cooked.html#t:JournalProp"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:StateProp\">StateProp</a> prop = <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; prop","name":"StateProp","module":"Cooked","link":"Cooked.html#t:StateProp"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogSubmittedTxSkel\">MCLogSubmittedTxSkel</a> :: <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogSubmittedTxSkel","module":"Cooked","link":"Cooked.html#v:MCLogSubmittedTxSkel"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogAdjustedTxSkel\">MCLogAdjustedTxSkel</a> :: <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>) -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogAdjustedTxSkel","module":"Cooked","link":"Cooked.html#v:MCLogAdjustedTxSkel"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogNewTx\">MCLogNewTx</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V3-Tx.html#t:TxId\" title=\"PlutusLedgerApi.V3.Tx\">TxId</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogNewTx","module":"Cooked","link":"Cooked.html#v:MCLogNewTx"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogDiscardedUtxos\">MCLogDiscardedUtxos</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogDiscardedUtxos","module":"Cooked","link":"Cooked.html#v:MCLogDiscardedUtxos"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogUnusedCollaterals\">MCLogUnusedCollaterals</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>) -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogUnusedCollaterals","module":"Cooked","link":"Cooked.html#v:MCLogUnusedCollaterals"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogAddedReferenceScript\">MCLogAddedReferenceScript</a> :: <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogAddedReferenceScript","module":"Cooked","link":"Cooked.html#v:MCLogAddedReferenceScript"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:MCLogAdjustedTxSkelOut\">MCLogAdjustedTxSkelOut</a> :: <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a> -&gt; <a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>","name":"MCLogAdjustedTxSkelOut","module":"Cooked","link":"Cooked.html#v:MCLogAdjustedTxSkelOut"},{"display_html":"<a href=\"#v:.-38--38-.\">(.&amp;&amp;.)</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; prop -&gt; prop -&gt; prop","name":".&&.","module":"Cooked","link":"Cooked.html#v:.-38--38-."},{"display_html":"<a href=\"#v:.-124--124-.\">(.||.)</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; prop -&gt; prop -&gt; prop","name":".||.","module":"Cooked","link":"Cooked.html#v:.-124--124-."},{"display_html":"<a href=\"#v:forAll\">forAll</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"forAll","module":"Cooked","link":"Cooked.html#v:forAll"},{"display_html":"<a href=\"#v:renderString\">renderString</a> :: (a -&gt; <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a>) -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"renderString","module":"Cooked","link":"Cooked.html#v:renderString"},{"display_html":"<a href=\"#v:currentSlot\">currentSlot</a> :: <a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"currentSlot","module":"Cooked","link":"Cooked.html#v:currentSlot"},{"display_html":"<a href=\"#v:awaitSlot\">awaitSlot</a> :: (<a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i) =&gt; i -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"awaitSlot","module":"Cooked","link":"Cooked.html#v:awaitSlot"},{"display_html":"<a href=\"#v:-60--38--38--62-\">(&lt;&amp;&amp;&gt;)</a> :: els <a href=\"Cooked.html#t:-10816-\" title=\"Cooked\">&#10816;</a> els' =&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> els -&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> els' -&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> (els <a href=\"Cooked.html#t:-8746-\" title=\"Cooked\">&#8746;</a> els')","name":"<&&>","module":"Cooked","link":"Cooked.html#v:-60--38--38--62-"},{"display_html":"<a href=\"#v:.-61--61-.\">(.==.)</a> :: (<a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; a -&gt; a -&gt; prop","name":".==.","module":"Cooked","link":"Cooked.html#v:.-61--61-."},{"display_html":"<a href=\"#v:there\">there</a> :: <a href=\"Cooked.html#t:MonadModalBlockChain\" title=\"Cooked\">MonadModalBlockChain</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> b -&gt; m a -&gt; m a","name":"there","module":"Cooked","link":"Cooked.html#v:there"},{"display_html":"<a href=\"#v:everywhere\">everywhere</a> :: <a href=\"Cooked.html#t:MonadModalBlockChain\" title=\"Cooked\">MonadModalBlockChain</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> b -&gt; m a -&gt; m a","name":"everywhere","module":"Cooked","link":"Cooked.html#v:everywhere"},{"display_html":"<a href=\"#v:somewhere\">somewhere</a> :: <a href=\"Cooked.html#t:MonadModalBlockChain\" title=\"Cooked\">MonadModalBlockChain</a> m =&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> b -&gt; m a -&gt; m a","name":"somewhere","module":"Cooked","link":"Cooked.html#v:somewhere"},{"display_html":"<a href=\"#v:withAnchor\">withAnchor</a> :: <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a>","name":"withAnchor","module":"Cooked","link":"Cooked.html#v:withAnchor"},{"display_html":"<a href=\"#v:ltlDelay\">ltlDelay</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a -&gt; <a href=\"Cooked.html#t:Ltl\" title=\"Cooked\">Ltl</a> a","name":"ltlDelay","module":"Cooked","link":"Cooked.html#v:ltlDelay"},{"display_html":"<a href=\"#v:addTokenAttack\">addTokenAttack</a> :: (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> o) =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:MintingPolicy\" title=\"Ledger\">MintingPolicy</a> -&gt; [(<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)]) -&gt; o -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"addTokenAttack","module":"Cooked","link":"Cooked.html#v:addTokenAttack"},{"display_html":"<a href=\"#v:redirectOutputTweakAny\">redirectOutputTweakAny</a> :: <span class=\"keyword\">forall</span> owner owner' m. (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> owner, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> owner') =&gt; (<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> owner') -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"redirectOutputTweakAny","module":"Cooked","link":"Cooked.html#v:redirectOutputTweakAny"},{"display_html":"<a href=\"#v:datumHijackingAttackAny\">datumHijackingAttackAny</a> :: <span class=\"keyword\">forall</span> owner owner' m. (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> owner, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> owner') =&gt; (<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; owner' -&gt; m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"datumHijackingAttackAny","module":"Cooked","link":"Cooked.html#v:datumHijackingAttackAny"},{"display_html":"<a href=\"#v:datumHijackingAttack\">datumHijackingAttack</a> :: <span class=\"keyword\">forall</span> owner owner' m. (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> owner, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> owner') =&gt; owner' -&gt; m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"datumHijackingAttack","module":"Cooked","link":"Cooked.html#v:datumHijackingAttack"},{"display_html":"<a href=\"#v:redirectOutputTweakAll\">redirectOutputTweakAll</a> :: <span class=\"keyword\">forall</span> owner owner' m. (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> owner, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> owner') =&gt; (<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> owner') -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>]","name":"redirectOutputTweakAll","module":"Cooked","link":"Cooked.html#v:redirectOutputTweakAll"},{"display_html":"<a href=\"#v:datumHijackingAttackAll\">datumHijackingAttackAll</a> :: <span class=\"keyword\">forall</span> owner owner' m. (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> owner, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> owner') =&gt; (<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; owner' -&gt; m [<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>]","name":"datumHijackingAttackAll","module":"Cooked","link":"Cooked.html#v:datumHijackingAttackAll"},{"display_html":"<a href=\"#v:doubleSatAttack\">doubleSatAttack</a> :: (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> is, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; ([is] -&gt; [[is]]) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> a -&gt; (is -&gt; a -&gt; m [(a, <a href=\"Cooked.html#t:DoubleSatDelta\" title=\"Cooked\">DoubleSatDelta</a>)]) -&gt; <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> -&gt; m ()","name":"doubleSatAttack","module":"Cooked","link":"Cooked.html#v:doubleSatAttack"},{"display_html":"<a href=\"#v:dupTokenAttack\">dupTokenAttack</a> :: (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> o) =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:AssetClass\" title=\"PlutusLedgerApi.V1.Value\">AssetClass</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>) -&gt; o -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"dupTokenAttack","module":"Cooked","link":"Cooked.html#v:dupTokenAttack"},{"display_html":"<a href=\"#v:distributionFromList\">distributionFromList</a> :: [(<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>, [<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>])] -&gt; <a href=\"Cooked.html#t:InitialDistribution\" title=\"Cooked\">InitialDistribution</a>","name":"distributionFromList","module":"Cooked","link":"Cooked.html#v:distributionFromList"},{"display_html":"<a href=\"#v:balanceTxSkel\">balanceTxSkel</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; m (<a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>))","name":"balanceTxSkel","module":"Cooked","link":"Cooked.html#v:balanceTxSkel"},{"display_html":"<a href=\"#v:getMinAndMaxFee\">getMinAndMaxFee</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)","name":"getMinAndMaxFee","module":"Cooked","link":"Cooked.html#v:getMinAndMaxFee"},{"display_html":"<a href=\"#v:estimateTxSkelFee\">estimateTxSkelFee</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"estimateTxSkelFee","module":"Cooked","link":"Cooked.html#v:estimateTxSkelFee"},{"display_html":"<a href=\"#v:currentMSRange\">currentMSRange</a> :: <a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m =&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>)","name":"currentMSRange","module":"Cooked","link":"Cooked.html#v:currentMSRange"},{"display_html":"<a href=\"#v:utxosFromCardanoTx\">utxosFromCardanoTx</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a> -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>)]","name":"utxosFromCardanoTx","module":"Cooked","link":"Cooked.html#v:utxosFromCardanoTx"},{"display_html":"<a href=\"#v:getEnclosingSlot\">getEnclosingSlot</a> :: <a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"getEnclosingSlot","module":"Cooked","link":"Cooked.html#v:getEnclosingSlot"},{"display_html":"<a href=\"#v:awaitEnclosingSlot\">awaitEnclosingSlot</a> :: <a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"awaitEnclosingSlot","module":"Cooked","link":"Cooked.html#v:awaitEnclosingSlot"},{"display_html":"<a href=\"#v:waitNMSFromSlotLowerBound\">waitNMSFromSlotLowerBound</a> :: (<a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i) =&gt; i -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitNMSFromSlotLowerBound","module":"Cooked","link":"Cooked.html#v:waitNMSFromSlotLowerBound"},{"display_html":"<a href=\"#v:waitNMSFromSlotUpperBound\">waitNMSFromSlotUpperBound</a> :: (<a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i) =&gt; i -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitNMSFromSlotUpperBound","module":"Cooked","link":"Cooked.html#v:waitNMSFromSlotUpperBound"},{"display_html":"<a href=\"#v:slotRangeBefore\">slotRangeBefore</a> :: <a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"slotRangeBefore","module":"Cooked","link":"Cooked.html#v:slotRangeBefore"},{"display_html":"<a href=\"#v:slotRangeAfter\">slotRangeAfter</a> :: <a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"slotRangeAfter","module":"Cooked","link":"Cooked.html#v:slotRangeAfter"},{"display_html":"<a href=\"#v:slotToMSRange\">slotToMSRange</a> :: (<a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integral\" title=\"Distribution.Compat.Prelude\">Integral</a> i) =&gt; i -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:POSIXTime\" title=\"Ledger\">POSIXTime</a>)","name":"slotToMSRange","module":"Cooked","link":"Cooked.html#v:slotToMSRange"},{"display_html":"<a href=\"#v:txSkelInputValidators\">txSkelInputValidators</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Validator\" title=\"Ledger\">Validator</a>]","name":"txSkelInputValidators","module":"Cooked","link":"Cooked.html#v:txSkelInputValidators"},{"display_html":"<a href=\"#v:txSkelInputValue\">txSkelInputValue</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelInputValue","module":"Cooked","link":"Cooked.html#v:txSkelInputValue"},{"display_html":"<a href=\"#v:lookupUtxos\">lookupUtxos</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>] -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>)","name":"lookupUtxos","module":"Cooked","link":"Cooked.html#v:lookupUtxos"},{"display_html":"<a href=\"#v:validateTxSkel-39-\">validateTxSkel'</a> :: <a href=\"Cooked.html#t:MonadBlockChain\" title=\"Cooked\">MonadBlockChain</a> m =&gt; <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>]","name":"validateTxSkel'","module":"Cooked","link":"Cooked.html#v:validateTxSkel-39-"},{"display_html":"<a href=\"#v:validateTxSkel_\">validateTxSkel_</a> :: <a href=\"Cooked.html#t:MonadBlockChain\" title=\"Cooked\">MonadBlockChain</a> m =&gt; <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; m ()","name":"validateTxSkel_","module":"Cooked","link":"Cooked.html#v:validateTxSkel_"},{"display_html":"<a href=\"#v:txSkelProposalsDeposit\">txSkelProposalsDeposit</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"txSkelProposalsDeposit","module":"Cooked","link":"Cooked.html#v:txSkelProposalsDeposit"},{"display_html":"<a href=\"#v:govActionDeposit\">govActionDeposit</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"govActionDeposit","module":"Cooked","link":"Cooked.html#v:govActionDeposit"},{"display_html":"<a href=\"#v:defineM\">defineM</a> :: (<a href=\"Cooked.html#t:MonadBlockChainWithoutValidation\" title=\"Cooked\">MonadBlockChainWithoutValidation</a> m, <a href=\"Cooked.html#t:ToHash\" title=\"Cooked\">ToHash</a> a) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; m a -&gt; m a","name":"defineM","module":"Cooked","link":"Cooked.html#v:defineM"},{"display_html":"<a href=\"#v:txSkelAllScripts\">txSkelAllScripts</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>]","name":"txSkelAllScripts","module":"Cooked","link":"Cooked.html#v:txSkelAllScripts"},{"display_html":"<a href=\"#v:previewByRef\">previewByRef</a> :: (<a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> af <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:An_AffineFold\" title=\"Optics.AffineFold\">An_AffineFold</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> af is <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> c -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> c)","name":"previewByRef","module":"Cooked","link":"Cooked.html#v:previewByRef"},{"display_html":"<a href=\"#v:viewByRef\">viewByRef</a> :: (<a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> g <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> g is <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> c -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; m c","name":"viewByRef","module":"Cooked","link":"Cooked.html#v:viewByRef"},{"display_html":"<a href=\"#v:toTxSkelOutWithMinAda\">toTxSkelOutWithMinAda</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"toTxSkelOutWithMinAda","module":"Cooked","link":"Cooked.html#v:toTxSkelOutWithMinAda"},{"display_html":"<a href=\"#v:toTxSkelWithMinAda\">toTxSkelWithMinAda</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; m <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a>","name":"toTxSkelWithMinAda","module":"Cooked","link":"Cooked.html#v:toTxSkelWithMinAda"},{"display_html":"<a href=\"#v:getTxSkelOutMinAda\">getTxSkelOutMinAda</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"getTxSkelOutMinAda","module":"Cooked","link":"Cooked.html#v:getTxSkelOutMinAda"},{"display_html":"<a href=\"#v:interpretAndRunWith\">interpretAndRunWith</a> :: (<span class=\"keyword\">forall</span> m. <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:MockChainT\" title=\"Cooked\">MockChainT</a> m a -&gt; m res) -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; [res]","name":"interpretAndRunWith","module":"Cooked","link":"Cooked.html#v:interpretAndRunWith"},{"display_html":"<a href=\"#v:interpretAndRun\">interpretAndRun</a> :: <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; [<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a]","name":"interpretAndRun","module":"Cooked","link":"Cooked.html#v:interpretAndRun"},{"display_html":"<a href=\"#v:runTweakFrom\">runTweakFrom</a> :: <a href=\"Cooked.html#t:InitialDistribution\" title=\"Cooked\">InitialDistribution</a> -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> a -&gt; <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; [<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> (a, <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a>)]","name":"runTweakFrom","module":"Cooked","link":"Cooked.html#v:runTweakFrom"},{"display_html":"<a href=\"#v:runTweak\">runTweak</a> :: <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> a -&gt; <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; [<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> (a, <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a>)]","name":"runTweak","module":"Cooked","link":"Cooked.html#v:runTweak"},{"display_html":"<a href=\"#v:withTweak\">withTweak</a> :: <a href=\"Cooked.html#t:MonadModalBlockChain\" title=\"Cooked\">MonadModalBlockChain</a> m =&gt; m x -&gt; <a href=\"Cooked-Tweak-Common.html#t:Tweak\" title=\"Cooked.Tweak.Common\">Tweak</a> <a href=\"Cooked-MockChain-Staged.html#t:InterpMockChain\" title=\"Cooked.MockChain.Staged\">InterpMockChain</a> a -&gt; m x","name":"withTweak","module":"Cooked","link":"Cooked.html#v:withTweak"},{"display_html":"<a href=\"#v:runUtxoSearch\">runUtxoSearch</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m a -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, a)]","name":"runUtxoSearch","module":"Cooked","link":"Cooked.html#v:runUtxoSearch"},{"display_html":"<a href=\"#v:allUtxosSearch\">allUtxosSearch</a> :: <a href=\"Cooked.html#t:MonadBlockChain\" title=\"Cooked\">MonadBlockChain</a> m =&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"allUtxosSearch","module":"Cooked","link":"Cooked.html#v:allUtxosSearch"},{"display_html":"<a href=\"#v:utxosOwnedBySearch\">utxosOwnedBySearch</a> :: (<a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"utxosOwnedBySearch","module":"Cooked","link":"Cooked.html#v:utxosOwnedBySearch"},{"display_html":"<a href=\"#v:utxosFromCardanoTxSearch\">utxosFromCardanoTxSearch</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-CardanoAPI-Internal.html#t:CardanoTx\" title=\"Ledger.Tx.CardanoAPI.Internal\">CardanoTx</a> -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"utxosFromCardanoTxSearch","module":"Cooked","link":"Cooked.html#v:utxosFromCardanoTxSearch"},{"display_html":"<a href=\"#v:txSkelOutByRefSearch\">txSkelOutByRefSearch</a> :: <a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m =&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>] -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"txSkelOutByRefSearch","module":"Cooked","link":"Cooked.html#v:txSkelOutByRefSearch"},{"display_html":"<a href=\"#v:filterWith\">filterWith</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m a -&gt; (a -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b)) -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m b","name":"filterWith","module":"Cooked","link":"Cooked.html#v:filterWith"},{"display_html":"<a href=\"#v:filterWithPure\">filterWithPure</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b) -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m b","name":"filterWithPure","module":"Cooked","link":"Cooked.html#v:filterWithPure"},{"display_html":"<a href=\"#v:filterWithOptic\">filterWithOptic</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:An_AffineFold\" title=\"Optics.AffineFold\">An_AffineFold</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m) =&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is a b -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m b","name":"filterWithOptic","module":"Cooked","link":"Cooked.html#v:filterWithOptic"},{"display_html":"<a href=\"#v:filterWithPred\">filterWithPred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m a","name":"filterWithPred","module":"Cooked","link":"Cooked.html#v:filterWithPred"},{"display_html":"<a href=\"#v:filterWithValuePred\">filterWithValuePred</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"filterWithValuePred","module":"Cooked","link":"Cooked.html#v:filterWithValuePred"},{"display_html":"<a href=\"#v:filterWithOnlyAda\">filterWithOnlyAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"filterWithOnlyAda","module":"Cooked","link":"Cooked.html#v:filterWithOnlyAda"},{"display_html":"<a href=\"#v:filterWithNotOnlyAda\">filterWithNotOnlyAda</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"filterWithNotOnlyAda","module":"Cooked","link":"Cooked.html#v:filterWithNotOnlyAda"},{"display_html":"<a href=\"#v:onlyValueOutputsAtSearch\">onlyValueOutputsAtSearch</a> :: (<a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"onlyValueOutputsAtSearch","module":"Cooked","link":"Cooked.html#v:onlyValueOutputsAtSearch"},{"display_html":"<a href=\"#v:vanillaOutputsAtSearch\">vanillaOutputsAtSearch</a> :: (<a href=\"Cooked.html#t:MonadBlockChainBalancing\" title=\"Cooked\">MonadBlockChainBalancing</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> addr) =&gt; addr -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"vanillaOutputsAtSearch","module":"Cooked","link":"Cooked.html#v:vanillaOutputsAtSearch"},{"display_html":"<a href=\"#v:filterWithAlways\">filterWithAlways</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m a -&gt; (a -&gt; b) -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m b","name":"filterWithAlways","module":"Cooked","link":"Cooked.html#v:filterWithAlways"},{"display_html":"<a href=\"#v:referenceScriptOutputsSearch\">referenceScriptOutputsSearch</a> :: (<a href=\"Cooked.html#t:MonadBlockChain\" title=\"Cooked\">MonadBlockChain</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToScriptHash\" title=\"Ledger\">ToScriptHash</a> s) =&gt; s -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"referenceScriptOutputsSearch","module":"Cooked","link":"Cooked.html#v:referenceScriptOutputsSearch"},{"display_html":"<a href=\"#v:filterWithPureRev\">filterWithPureRev</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b) -&gt; <a href=\"Cooked.html#t:UtxoSearch\" title=\"Cooked\">UtxoSearch</a> m a","name":"filterWithPureRev","module":"Cooked","link":"Cooked.html#v:filterWithPureRev"},{"display_html":"<a href=\"#v:holdsInState\">holdsInState</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> a =&gt; a -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"holdsInState","module":"Cooked","link":"Cooked.html#v:holdsInState"},{"display_html":"<a href=\"#v:printCookedOpt\">printCookedOpt</a> :: <a href=\"Cooked.html#t:PrettyCooked\" title=\"Cooked\">PrettyCooked</a> a =&gt; <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> ()","name":"printCookedOpt","module":"Cooked","link":"Cooked.html#v:printCookedOpt"},{"display_html":"<a href=\"#v:printCooked\">printCooked</a> :: <a href=\"Cooked.html#t:PrettyCooked\" title=\"Cooked\">PrettyCooked</a> a =&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> ()","name":"printCooked","module":"Cooked","link":"Cooked.html#v:printCooked"},{"display_html":"<a href=\"#v:prettyHash\">prettyHash</a> :: <a href=\"Cooked.html#t:ToHash\" title=\"Cooked\">ToHash</a> a =&gt; <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; a -&gt; <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a>","name":"prettyHash","module":"Cooked","link":"Cooked.html#v:prettyHash"},{"display_html":"<a href=\"#v:prettyItemize\">prettyItemize</a> :: <a href=\"Cooked.html#t:PrettyCookedList\" title=\"Cooked\">PrettyCookedList</a> a =&gt; <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a> -&gt; <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a> -&gt; a -&gt; <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a>","name":"prettyItemize","module":"Cooked","link":"Cooked.html#v:prettyItemize"},{"display_html":"<a href=\"#v:prettyItemizeNoTitle\">prettyItemizeNoTitle</a> :: <a href=\"Cooked.html#t:PrettyCookedList\" title=\"Cooked\">PrettyCookedList</a> a =&gt; <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a> -&gt; a -&gt; <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a>","name":"prettyItemizeNoTitle","module":"Cooked","link":"Cooked.html#v:prettyItemizeNoTitle"},{"display_html":"<a href=\"#v:prettyItemizeNonEmpty\">prettyItemizeNonEmpty</a> :: <a href=\"Cooked.html#t:PrettyCookedList\" title=\"Cooked\">PrettyCookedList</a> a =&gt; <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a> -&gt; <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a> -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked.html#t:DocCooked\" title=\"Cooked\">DocCooked</a>","name":"prettyItemizeNonEmpty","module":"Cooked","link":"Cooked.html#v:prettyItemizeNonEmpty"},{"display_html":"<a href=\"#v:hashNamesFromList\">hashNamesFromList</a> :: <a href=\"Cooked.html#t:ToHash\" title=\"Cooked\">ToHash</a> a =&gt; [(a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>)] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"hashNamesFromList","module":"Cooked","link":"Cooked.html#v:hashNamesFromList"},{"display_html":"<a href=\"#v:defaultHashNames\">defaultHashNames</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"defaultHashNames","module":"Cooked","link":"Cooked.html#v:defaultHashNames"},{"display_html":"<a href=\"#v:addHashNames\">addHashNames</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a>","name":"addHashNames","module":"Cooked","link":"Cooked.html#v:addHashNames"},{"display_html":"<a href=\"#v:txSkelLabelL\">txSkelLabelL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"Cooked.html#t:TxSkelLabel\" title=\"Cooked\">TxSkelLabel</a>)","name":"txSkelLabelL","module":"Cooked","link":"Cooked.html#v:txSkelLabelL"},{"display_html":"<a href=\"#v:txSkelOptsL\">txSkelOptsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a>","name":"txSkelOptsL","module":"Cooked","link":"Cooked.html#v:txSkelOptsL"},{"display_html":"<a href=\"#v:txSkelMintsL\">txSkelMintsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> <a href=\"Cooked.html#t:TxSkelMints\" title=\"Cooked\">TxSkelMints</a>","name":"txSkelMintsL","module":"Cooked","link":"Cooked.html#v:txSkelMintsL"},{"display_html":"<a href=\"#v:txSkelValidityRangeL\">txSkelValidityRangeL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"txSkelValidityRangeL","module":"Cooked","link":"Cooked.html#v:txSkelValidityRangeL"},{"display_html":"<a href=\"#v:txSkelProposalsL\">txSkelProposalsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> [<a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a>]","name":"txSkelProposalsL","module":"Cooked","link":"Cooked.html#v:txSkelProposalsL"},{"display_html":"<a href=\"#v:txSkelSignersL\">txSkelSignersL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>]","name":"txSkelSignersL","module":"Cooked","link":"Cooked.html#v:txSkelSignersL"},{"display_html":"<a href=\"#v:txSkelInsL\">txSkelInsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>)","name":"txSkelInsL","module":"Cooked","link":"Cooked.html#v:txSkelInsL"},{"display_html":"<a href=\"#v:txSkelInsReferenceL\">txSkelInsReferenceL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>)","name":"txSkelInsReferenceL","module":"Cooked","link":"Cooked.html#v:txSkelInsReferenceL"},{"display_html":"<a href=\"#v:txSkelOutsL\">txSkelOutsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> [<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>]","name":"txSkelOutsL","module":"Cooked","link":"Cooked.html#v:txSkelOutsL"},{"display_html":"<a href=\"#v:txSkelWithdrawalsL\">txSkelWithdrawalsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> <a href=\"Cooked.html#t:TxSkelWithdrawals\" title=\"Cooked\">TxSkelWithdrawals</a>","name":"txSkelWithdrawalsL","module":"Cooked","link":"Cooked.html#v:txSkelWithdrawalsL"},{"display_html":"<a href=\"#v:txSkelTemplate\">txSkelTemplate</a> :: <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a>","name":"txSkelTemplate","module":"Cooked","link":"Cooked.html#v:txSkelTemplate"},{"display_html":"<a href=\"#v:txSkelKnownTxOutRefs\">txSkelKnownTxOutRefs</a> :: <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>","name":"txSkelKnownTxOutRefs","module":"Cooked","link":"Cooked.html#v:txSkelKnownTxOutRefs"},{"display_html":"<a href=\"#v:txSkelWithdrawnValue\">txSkelWithdrawnValue</a> :: <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelWithdrawnValue","module":"Cooked","link":"Cooked.html#v:txSkelWithdrawnValue"},{"display_html":"<a href=\"#v:txSkelWithdrawingScripts\">txSkelWithdrawingScripts</a> :: <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>]","name":"txSkelWithdrawingScripts","module":"Cooked","link":"Cooked.html#v:txSkelWithdrawingScripts"},{"display_html":"<a href=\"#v:txSkelValueInOutputs\">txSkelValueInOutputs</a> :: <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelValueInOutputs","module":"Cooked","link":"Cooked.html#v:txSkelValueInOutputs"},{"display_html":"<a href=\"#v:txSkelInsReferenceInRedeemers\">txSkelInsReferenceInRedeemers</a> :: <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Set\" title=\"Distribution.Compat.Prelude\">Set</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>","name":"txSkelInsReferenceInRedeemers","module":"Cooked","link":"Cooked.html#v:txSkelInsReferenceInRedeemers"},{"display_html":"<a href=\"#v:txSkelProposingScripts\">txSkelProposingScripts</a> :: <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>]","name":"txSkelProposingScripts","module":"Cooked","link":"Cooked.html#v:txSkelProposingScripts"},{"display_html":"<a href=\"#v:txSkelMintingScripts\">txSkelMintingScripts</a> :: <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>]","name":"txSkelMintingScripts","module":"Cooked","link":"Cooked.html#v:txSkelMintingScripts"},{"display_html":"<a href=\"#v:datumKindResolvedP\">datumKindResolvedP</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> <a href=\"Cooked.html#t:DatumKind\" title=\"Cooked\">DatumKind</a> <a href=\"Cooked.html#t:DatumResolved\" title=\"Cooked\">DatumResolved</a>","name":"datumKindResolvedP","module":"Cooked","link":"Cooked.html#v:datumKindResolvedP"},{"display_html":"<a href=\"#v:txSkelOutDatumKindAT\">txSkelOutDatumKindAT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal-39-\" title=\"Optics.AffineTraversal\">AffineTraversal'</a> <a href=\"Cooked.html#t:TxSkelOutDatum\" title=\"Cooked\">TxSkelOutDatum</a> <a href=\"Cooked.html#t:DatumKind\" title=\"Cooked\">DatumKind</a>","name":"txSkelOutDatumKindAT","module":"Cooked","link":"Cooked.html#v:txSkelOutDatumKindAT"},{"display_html":"<a href=\"#v:txSkelOutDatumResolvedAT\">txSkelOutDatumResolvedAT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal-39-\" title=\"Optics.AffineTraversal\">AffineTraversal'</a> <a href=\"Cooked.html#t:TxSkelOutDatum\" title=\"Cooked\">TxSkelOutDatum</a> <a href=\"Cooked.html#t:DatumResolved\" title=\"Cooked\">DatumResolved</a>","name":"txSkelOutDatumResolvedAT","module":"Cooked","link":"Cooked.html#v:txSkelOutDatumResolvedAT"},{"display_html":"<a href=\"#v:txSkelOutDatumTypedAT\">txSkelOutDatumTypedAT</a> :: (<a href=\"Cooked.html#t:DatumConstrs\" title=\"Cooked\">DatumConstrs</a> a, <a href=\"Cooked.html#t:DatumConstrs\" title=\"Cooked\">DatumConstrs</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal\" title=\"Optics.AffineTraversal\">AffineTraversal</a> <a href=\"Cooked.html#t:TxSkelOutDatum\" title=\"Cooked\">TxSkelOutDatum</a> <a href=\"Cooked.html#t:TxSkelOutDatum\" title=\"Cooked\">TxSkelOutDatum</a> a b","name":"txSkelOutDatumTypedAT","module":"Cooked","link":"Cooked.html#v:txSkelOutDatumTypedAT"},{"display_html":"<a href=\"#v:txSkelOutDatumDatumAF\">txSkelOutDatumDatumAF</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:AffineFold\" title=\"Optics.AffineFold\">AffineFold</a> <a href=\"Cooked.html#t:TxSkelOutDatum\" title=\"Cooked\">TxSkelOutDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Datum\" title=\"Ledger\">Datum</a>","name":"txSkelOutDatumDatumAF","module":"Cooked","link":"Cooked.html#v:txSkelOutDatumDatumAF"},{"display_html":"<a href=\"#v:txSkelOutDatumDatumHashAF\">txSkelOutDatumDatumHashAF</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:AffineFold\" title=\"Optics.AffineFold\">AffineFold</a> <a href=\"Cooked.html#t:TxSkelOutDatum\" title=\"Cooked\">TxSkelOutDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:DatumHash\" title=\"Ledger\">DatumHash</a>","name":"txSkelOutDatumDatumHashAF","module":"Cooked","link":"Cooked.html#v:txSkelOutDatumDatumHashAF"},{"display_html":"<a href=\"#v:txSkelOutDatumOutputDatumG\">txSkelOutDatumOutputDatumG</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:Getter\" title=\"Optics.Getter\">Getter</a> <a href=\"Cooked.html#t:TxSkelOutDatum\" title=\"Cooked\">TxSkelOutDatum</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V2-Tx.html#t:OutputDatum\" title=\"PlutusLedgerApi.V2.Tx\">OutputDatum</a>","name":"txSkelOutDatumOutputDatumG","module":"Cooked","link":"Cooked.html#v:txSkelOutDatumOutputDatumG"},{"display_html":"<a href=\"#v:txSkelLabelTypedP\">txSkelLabelTypedP</a> :: <a href=\"Cooked.html#t:LabelConstrs\" title=\"Cooked\">LabelConstrs</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> <a href=\"Cooked.html#t:TxSkelLabel\" title=\"Cooked\">TxSkelLabel</a> a","name":"txSkelLabelTypedP","module":"Cooked","link":"Cooked.html#v:txSkelLabelTypedP"},{"display_html":"<a href=\"#v:mintRedeemerL\">mintRedeemerL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:Mint\" title=\"Cooked\">Mint</a> <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>","name":"mintRedeemerL","module":"Cooked","link":"Cooked.html#v:mintRedeemerL"},{"display_html":"<a href=\"#v:mintTokensL\">mintTokensL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:Mint\" title=\"Cooked\">Mint</a> [(<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)]","name":"mintTokensL","module":"Cooked","link":"Cooked.html#v:mintTokensL"},{"display_html":"<a href=\"#v:mint\">mint</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:MintingPolicy\" title=\"Ledger\">MintingPolicy</a> a =&gt; a -&gt; <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:Mint\" title=\"Cooked\">Mint</a>","name":"mint","module":"Cooked","link":"Cooked.html#v:mint"},{"display_html":"<a href=\"#v:burn\">burn</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:MintingPolicy\" title=\"Ledger\">MintingPolicy</a> a =&gt; a -&gt; <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:Mint\" title=\"Cooked\">Mint</a>","name":"burn","module":"Cooked","link":"Cooked.html#v:burn"},{"display_html":"<a href=\"#v:txSkelMintsValueG\">txSkelMintsValueG</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:Getter\" title=\"Optics.Getter\">Getter</a> <a href=\"Cooked.html#t:TxSkelMints\" title=\"Cooked\">TxSkelMints</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelMintsValueG","module":"Cooked","link":"Cooked.html#v:txSkelMintsValueG"},{"display_html":"<a href=\"#v:txSkelMintsListI\">txSkelMintsListI</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Iso.html#t:Iso-39-\" title=\"Optics.Iso\">Iso'</a> <a href=\"Cooked.html#t:TxSkelMints\" title=\"Cooked\">TxSkelMints</a> [<a href=\"Cooked.html#t:Mint\" title=\"Cooked\">Mint</a>]","name":"txSkelMintsListI","module":"Cooked","link":"Cooked.html#v:txSkelMintsListI"},{"display_html":"<a href=\"#v:mintVersionedScriptL\">mintVersionedScriptL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:Mint\" title=\"Cooked\">Mint</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>)","name":"mintVersionedScriptL","module":"Cooked","link":"Cooked.html#v:mintVersionedScriptL"},{"display_html":"<a href=\"#v:txSkelMintsAssetClassAmountL\">txSkelMintsAssetClassAmountL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:MintingPolicy\" title=\"Ledger\">MintingPolicy</a> mp =&gt; mp -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelMints\" title=\"Cooked\">TxSkelMints</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>)","name":"txSkelMintsAssetClassAmountL","module":"Cooked","link":"Cooked.html#v:txSkelMintsAssetClassAmountL"},{"display_html":"<a href=\"#v:txSkelMintsFromList\">txSkelMintsFromList</a> :: [<a href=\"Cooked.html#t:Mint\" title=\"Cooked\">Mint</a>] -&gt; <a href=\"Cooked.html#t:TxSkelMints\" title=\"Cooked\">TxSkelMints</a>","name":"txSkelMintsFromList","module":"Cooked","link":"Cooked.html#v:txSkelMintsFromList"},{"display_html":"<a href=\"#v:txSkelMintsValue\">txSkelMintsValue</a> :: <a href=\"Cooked.html#t:TxSkelMints\" title=\"Cooked\">TxSkelMints</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelMintsValue","module":"Cooked","link":"Cooked.html#v:txSkelMintsValue"},{"display_html":"<a href=\"#v:txSkelOptModTxL\">txSkelOptModTxL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>)","name":"txSkelOptModTxL","module":"Cooked","link":"Cooked.html#v:txSkelOptModTxL"},{"display_html":"<a href=\"#v:txSkelOptAutoSlotIncreaseL\">txSkelOptAutoSlotIncreaseL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"txSkelOptAutoSlotIncreaseL","module":"Cooked","link":"Cooked.html#v:txSkelOptAutoSlotIncreaseL"},{"display_html":"<a href=\"#v:txSkelOptBalancingPolicyL\">txSkelOptBalancingPolicyL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a> <a href=\"Cooked.html#t:BalancingPolicy\" title=\"Cooked\">BalancingPolicy</a>","name":"txSkelOptBalancingPolicyL","module":"Cooked","link":"Cooked.html#v:txSkelOptBalancingPolicyL"},{"display_html":"<a href=\"#v:txSkelOptBalanceOutputPolicyL\">txSkelOptBalanceOutputPolicyL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a> <a href=\"Cooked.html#t:BalanceOutputPolicy\" title=\"Cooked\">BalanceOutputPolicy</a>","name":"txSkelOptBalanceOutputPolicyL","module":"Cooked","link":"Cooked.html#v:txSkelOptBalanceOutputPolicyL"},{"display_html":"<a href=\"#v:txSkelOptFeePolicyL\">txSkelOptFeePolicyL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a> <a href=\"Cooked.html#t:FeePolicy\" title=\"Cooked\">FeePolicy</a>","name":"txSkelOptFeePolicyL","module":"Cooked","link":"Cooked.html#v:txSkelOptFeePolicyL"},{"display_html":"<a href=\"#v:txSkelOptBalancingUtxosL\">txSkelOptBalancingUtxosL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a> <a href=\"Cooked.html#t:BalancingUtxos\" title=\"Cooked\">BalancingUtxos</a>","name":"txSkelOptBalancingUtxosL","module":"Cooked","link":"Cooked.html#v:txSkelOptBalancingUtxosL"},{"display_html":"<a href=\"#v:txSkelOptModParamsL\">txSkelOptModParamsL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a>)","name":"txSkelOptModParamsL","module":"Cooked","link":"Cooked.html#v:txSkelOptModParamsL"},{"display_html":"<a href=\"#v:txSkelOptCollateralUtxosL\">txSkelOptCollateralUtxosL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a> <a href=\"Cooked.html#t:CollateralUtxos\" title=\"Cooked\">CollateralUtxos</a>","name":"txSkelOptCollateralUtxosL","module":"Cooked","link":"Cooked.html#v:txSkelOptCollateralUtxosL"},{"display_html":"<a href=\"#v:txSkelOptAnchorResolutionL\">txSkelOptAnchorResolutionL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a> <a href=\"Cooked.html#t:AnchorResolution\" title=\"Cooked\">AnchorResolution</a>","name":"txSkelOptAnchorResolutionL","module":"Cooked","link":"Cooked.html#v:txSkelOptAnchorResolutionL"},{"display_html":"<a href=\"#v:txSkelOptAddModTx\">txSkelOptAddModTx</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Tx-Sign.html#t:Tx\" title=\"Cardano.Api.Internal.Tx.Sign\">Tx</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Api-Internal-Eras.html#t:ConwayEra\" title=\"Cardano.Api.Internal.Eras\">ConwayEra</a>) -&gt; <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a> -&gt; <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a>","name":"txSkelOptAddModTx","module":"Cooked","link":"Cooked.html#v:txSkelOptAddModTx"},{"display_html":"<a href=\"#v:txSkelOptAddModParams\">txSkelOptAddModParams</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Node-Emulator-Internal-Node-Params.html#t:Params\" title=\"Cardano.Node.Emulator.Internal.Node.Params\">Params</a>) -&gt; <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a> -&gt; <a href=\"Cooked.html#t:TxSkelOpts\" title=\"Cooked\">TxSkelOpts</a>","name":"txSkelOptAddModParams","module":"Cooked","link":"Cooked.html#v:txSkelOptAddModParams"},{"display_html":"<a href=\"#v:receives\">receives</a> :: <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> owner =&gt; owner -&gt; <a href=\"Cooked.html#t:Payable\" title=\"Cooked\">Payable</a> els -&gt; <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>","name":"receives","module":"Cooked","link":"Cooked.html#v:receives"},{"display_html":"<a href=\"#v:txSkelOutValueL\">txSkelOutValueL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"txSkelOutValueL","module":"Cooked","link":"Cooked.html#v:txSkelOutValueL"},{"display_html":"<a href=\"#v:txSkelOutValueAutoAdjustL\">txSkelOutValueAutoAdjustL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"txSkelOutValueAutoAdjustL","module":"Cooked","link":"Cooked.html#v:txSkelOutValueAutoAdjustL"},{"display_html":"<a href=\"#v:txSkelOutDatumL\">txSkelOutDatumL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> <a href=\"Cooked.html#t:TxSkelOutDatum\" title=\"Cooked\">TxSkelOutDatum</a>","name":"txSkelOutDatumL","module":"Cooked","link":"Cooked.html#v:txSkelOutDatumL"},{"display_html":"<a href=\"#v:txSkelOutReferenceScriptL\">txSkelOutReferenceScriptL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> <a href=\"Cooked.html#t:TxSkelOutReferenceScript\" title=\"Cooked\">TxSkelOutReferenceScript</a>","name":"txSkelOutReferenceScriptL","module":"Cooked","link":"Cooked.html#v:txSkelOutReferenceScriptL"},{"display_html":"<a href=\"#v:txSkelOutStakingCredentialL\">txSkelOutStakingCredentialL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:StakingCredential\" title=\"Ledger\">StakingCredential</a>)","name":"txSkelOutStakingCredentialL","module":"Cooked","link":"Cooked.html#v:txSkelOutStakingCredentialL"},{"display_html":"<a href=\"#v:txSkelOutValidatorAT\">txSkelOutValidatorAT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal-39-\" title=\"Optics.AffineTraversal\">AffineTraversal'</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Validator\" title=\"Ledger\">Validator</a>)","name":"txSkelOutValidatorAT","module":"Cooked","link":"Cooked.html#v:txSkelOutValidatorAT"},{"display_html":"<a href=\"#v:txSkelOutCredentialG\">txSkelOutCredentialG</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:Getter\" title=\"Optics.Getter\">Getter</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a>","name":"txSkelOutCredentialG","module":"Cooked","link":"Cooked.html#v:txSkelOutCredentialG"},{"display_html":"<a href=\"#v:txSkelOutAddressG\">txSkelOutAddressG</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:Getter\" title=\"Optics.Getter\">Getter</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a>","name":"txSkelOutAddressG","module":"Cooked","link":"Cooked.html#v:txSkelOutAddressG"},{"display_html":"<a href=\"#v:txSkelOutPKHashAT\">txSkelOutPKHashAT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal-39-\" title=\"Optics.AffineTraversal\">AffineTraversal'</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a>","name":"txSkelOutPKHashAT","module":"Cooked","link":"Cooked.html#v:txSkelOutPKHashAT"},{"display_html":"<a href=\"#v:txSkelOutTypedOwnerAT\">txSkelOutTypedOwnerAT</a> :: (<a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> a, <a href=\"Cooked.html#t:OwnerConstrs\" title=\"Cooked\">OwnerConstrs</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal\" title=\"Optics.AffineTraversal\">AffineTraversal</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> a b","name":"txSkelOutTypedOwnerAT","module":"Cooked","link":"Cooked.html#v:txSkelOutTypedOwnerAT"},{"display_html":"<a href=\"#v:txSkelOutValidatorHashAF\">txSkelOutValidatorHashAF</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:AffineFold\" title=\"Optics.AffineFold\">AffineFold</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ValidatorHash\" title=\"Ledger\">ValidatorHash</a>","name":"txSkelOutValidatorHashAF","module":"Cooked","link":"Cooked.html#v:txSkelOutValidatorHashAF"},{"display_html":"<a href=\"#v:valueAssetClassAmountL\">valueAssetClassAmountL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToMintingPolicyHash\" title=\"Ledger\">ToMintingPolicyHash</a> mp =&gt; mp -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"valueAssetClassAmountL","module":"Cooked","link":"Cooked.html#v:valueAssetClassAmountL"},{"display_html":"<a href=\"#v:lovelaceIntegerI\">lovelaceIntegerI</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Iso.html#t:Iso-39-\" title=\"Optics.Iso\">Iso'</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"lovelaceIntegerI","module":"Cooked","link":"Cooked.html#v:lovelaceIntegerI"},{"display_html":"<a href=\"#v:valueLovelaceL\">valueLovelaceL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"valueLovelaceL","module":"Cooked","link":"Cooked.html#v:valueLovelaceL"},{"display_html":"<a href=\"#v:valueAssetClassAmountP\">valueAssetClassAmountP</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToMintingPolicyHash\" title=\"Ledger\">ToMintingPolicyHash</a> mp =&gt; mp -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:TokenName\" title=\"PlutusLedgerApi.V1.Value\">TokenName</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>","name":"valueAssetClassAmountP","module":"Cooked","link":"Cooked.html#v:valueAssetClassAmountP"},{"display_html":"<a href=\"#v:valueLovelaceP\">valueLovelaceP</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Lovelace\" title=\"PlutusLedgerApi.V1.Value\">Lovelace</a>","name":"valueLovelaceP","module":"Cooked","link":"Cooked.html#v:valueLovelaceP"},{"display_html":"<a href=\"#v:ownerCredentialG\">ownerCredentialG</a> :: <a href=\"Cooked.html#t:IsTxSkelOutAllowedOwner\" title=\"Cooked\">IsTxSkelOutAllowedOwner</a> owner =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:Getter\" title=\"Optics.Getter\">Getter</a> owner <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Credential\" title=\"Ledger\">Credential</a>","name":"ownerCredentialG","module":"Cooked","link":"Cooked.html#v:ownerCredentialG"},{"display_html":"<a href=\"#v:txSkelProposalAddressL\">txSkelProposalAddressL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Address.html#t:Address\" title=\"Ledger.Address\">Address</a>","name":"txSkelProposalAddressL","module":"Cooked","link":"Cooked.html#v:txSkelProposalAddressL"},{"display_html":"<a href=\"#v:txSkelProposalActionL\">txSkelProposalActionL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a> <a href=\"Cooked.html#t:TxGovAction\" title=\"Cooked\">TxGovAction</a>","name":"txSkelProposalActionL","module":"Cooked","link":"Cooked.html#v:txSkelProposalActionL"},{"display_html":"<a href=\"#v:txSkelProposalWitnessL\">txSkelProposalWitnessL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>, <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>))","name":"txSkelProposalWitnessL","module":"Cooked","link":"Cooked.html#v:txSkelProposalWitnessL"},{"display_html":"<a href=\"#v:txSkelProposalAnchorL\">txSkelProposalAnchorL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>)","name":"txSkelProposalAnchorL","module":"Cooked","link":"Cooked.html#v:txSkelProposalAnchorL"},{"display_html":"<a href=\"#v:txSkelProposalAutoConstitutionL\">txSkelProposalAutoConstitutionL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"txSkelProposalAutoConstitutionL","module":"Cooked","link":"Cooked.html#v:txSkelProposalAutoConstitutionL"},{"display_html":"<a href=\"#v:simpleTxSkelProposal\">simpleTxSkelProposal</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToAddress\" title=\"Plutus.Script.Utils.Address\">ToAddress</a> a =&gt; a -&gt; <a href=\"Cooked.html#t:TxGovAction\" title=\"Cooked\">TxGovAction</a> -&gt; <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a>","name":"simpleTxSkelProposal","module":"Cooked","link":"Cooked.html#v:simpleTxSkelProposal"},{"display_html":"<a href=\"#v:withWitness\">withWitness</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> a =&gt; <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a> -&gt; (a, <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>) -&gt; <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a>","name":"withWitness","module":"Cooked","link":"Cooked.html#v:withWitness"},{"display_html":"<a href=\"#v:withConstitution\">withConstitution</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> a =&gt; <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a -&gt; <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a>","name":"withConstitution","module":"Cooked","link":"Cooked.html#v:withConstitution"},{"display_html":"<a href=\"#v:updateConstitution\">updateConstitution</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> a =&gt; <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a -&gt; <a href=\"Cooked.html#t:TxSkelProposal\" title=\"Cooked\">TxSkelProposal</a>","name":"updateConstitution","module":"Cooked","link":"Cooked.html#v:updateConstitution"},{"display_html":"<a href=\"#v:withReferenceInput\">withReferenceInput</a> :: <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>","name":"withReferenceInput","module":"Cooked","link":"Cooked.html#v:withReferenceInput"},{"display_html":"<a href=\"#v:someTxSkelRedeemer\">someTxSkelRedeemer</a> :: <a href=\"Cooked.html#t:RedeemerConstrs\" title=\"Cooked\">RedeemerConstrs</a> redeemer =&gt; redeemer -&gt; <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>","name":"someTxSkelRedeemer","module":"Cooked","link":"Cooked.html#v:someTxSkelRedeemer"},{"display_html":"<a href=\"#v:emptyTxSkelRedeemer\">emptyTxSkelRedeemer</a> :: <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>","name":"emptyTxSkelRedeemer","module":"Cooked","link":"Cooked.html#v:emptyTxSkelRedeemer"},{"display_html":"<a href=\"#v:txSkelRedeemerReferenceInputL\">txSkelRedeemerReferenceInputL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>)","name":"txSkelRedeemerReferenceInputL","module":"Cooked","link":"Cooked.html#v:txSkelRedeemerReferenceInputL"},{"display_html":"<a href=\"#v:txSkelRedeemerAutoFillL\">txSkelRedeemerAutoFillL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"txSkelRedeemerAutoFillL","module":"Cooked","link":"Cooked.html#v:txSkelRedeemerAutoFillL"},{"display_html":"<a href=\"#v:txSkelRedeemerTypedAT\">txSkelRedeemerTypedAT</a> :: (<a href=\"Cooked.html#t:RedeemerConstrs\" title=\"Cooked\">RedeemerConstrs</a> a, <a href=\"Cooked.html#t:RedeemerConstrs\" title=\"Cooked\">RedeemerConstrs</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineTraversal.html#t:AffineTraversal\" title=\"Optics.AffineTraversal\">AffineTraversal</a> <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> a b","name":"txSkelRedeemerTypedAT","module":"Cooked","link":"Cooked.html#v:txSkelRedeemerTypedAT"},{"display_html":"<a href=\"#v:someTxSkelRedeemerNoAutoFill\">someTxSkelRedeemerNoAutoFill</a> :: <a href=\"Cooked.html#t:RedeemerConstrs\" title=\"Cooked\">RedeemerConstrs</a> redeemer =&gt; redeemer -&gt; <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>","name":"someTxSkelRedeemerNoAutoFill","module":"Cooked","link":"Cooked.html#v:someTxSkelRedeemerNoAutoFill"},{"display_html":"<a href=\"#v:emptyTxSkelRedeemerNoAutoFill\">emptyTxSkelRedeemerNoAutoFill</a> :: <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>","name":"emptyTxSkelRedeemerNoAutoFill","module":"Cooked","link":"Cooked.html#v:emptyTxSkelRedeemerNoAutoFill"},{"display_html":"<a href=\"#v:txSkelRedeemerBuiltinDataL\">txSkelRedeemerBuiltinDataL</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Lens.html#t:Lens-39-\" title=\"Optics.Lens\">Lens'</a> <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinData\" title=\"PlutusLedgerApi.Common\">BuiltinData</a>","name":"txSkelRedeemerBuiltinDataL","module":"Cooked","link":"Cooked.html#v:txSkelRedeemerBuiltinDataL"},{"display_html":"<a href=\"#v:txSkelOutReferenceScriptHashAF\">txSkelOutReferenceScriptHashAF</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-AffineFold.html#t:AffineFold\" title=\"Optics.AffineFold\">AffineFold</a> <a href=\"Cooked.html#t:TxSkelOutReferenceScript\" title=\"Cooked\">TxSkelOutReferenceScript</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>","name":"txSkelOutReferenceScriptHashAF","module":"Cooked","link":"Cooked.html#v:txSkelOutReferenceScriptHashAF"},{"display_html":"<a href=\"#v:txSkelOutReferenceScriptTypedP\">txSkelOutReferenceScriptTypedP</a> :: (<a href=\"Cooked.html#t:ReferenceScriptConstrs\" title=\"Cooked\">ReferenceScriptConstrs</a> a, <a href=\"Cooked.html#t:ReferenceScriptConstrs\" title=\"Cooked\">ReferenceScriptConstrs</a> b) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism\" title=\"Optics.Prism\">Prism</a> <a href=\"Cooked.html#t:TxSkelOutReferenceScript\" title=\"Cooked\">TxSkelOutReferenceScript</a> <a href=\"Cooked.html#t:TxSkelOutReferenceScript\" title=\"Cooked\">TxSkelOutReferenceScript</a> a b","name":"txSkelOutReferenceScriptTypedP","module":"Cooked","link":"Cooked.html#v:txSkelOutReferenceScriptTypedP"},{"display_html":"<a href=\"#v:txSkelOutReferenceScriptVersionedP\">txSkelOutReferenceScriptVersionedP</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> <a href=\"Cooked.html#t:TxSkelOutReferenceScript\" title=\"Cooked\">TxSkelOutReferenceScript</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:Versioned\" title=\"Ledger.Tx.Internal\">Versioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a>)","name":"txSkelOutReferenceScriptVersionedP","module":"Cooked","link":"Cooked.html#v:txSkelOutReferenceScriptVersionedP"},{"display_html":"<a href=\"#v:pkWithdrawal\">pkWithdrawal</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Plutus-Script-Utils-Address.html#t:ToPubKeyHash\" title=\"Plutus.Script.Utils.Address\">ToPubKeyHash</a> pkh =&gt; pkh -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxSkelWithdrawals\" title=\"Cooked\">TxSkelWithdrawals</a>","name":"pkWithdrawal","module":"Cooked","link":"Cooked.html#v:pkWithdrawal"},{"display_html":"<a href=\"#v:scriptWithdrawal\">scriptWithdrawal</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ToVersioned\" title=\"Ledger\">ToVersioned</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:Script\" title=\"Ledger\">Script</a> script =&gt; script -&gt; <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:TxSkelWithdrawals\" title=\"Cooked\">TxSkelWithdrawals</a>","name":"scriptWithdrawal","module":"Cooked","link":"Cooked.html#v:scriptWithdrawal"},{"display_html":"<a href=\"#v:failingTweak\">failingTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; m a","name":"failingTweak","module":"Cooked","link":"Cooked.html#v:failingTweak"},{"display_html":"<a href=\"#v:doNothingTweak\">doNothingTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; m ()","name":"doNothingTweak","module":"Cooked","link":"Cooked.html#v:doNothingTweak"},{"display_html":"<a href=\"#v:viewTweak\">viewTweak</a> :: (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> a -&gt; m a","name":"viewTweak","module":"Cooked","link":"Cooked.html#v:viewTweak"},{"display_html":"<a href=\"#v:viewAllTweak\">viewAllTweak</a> :: (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Fold.html#t:A_Fold\" title=\"Optics.Fold\">A_Fold</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> a -&gt; m [a]","name":"viewAllTweak","module":"Cooked","link":"Cooked.html#v:viewAllTweak"},{"display_html":"<a href=\"#v:setTweak\">setTweak</a> :: (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-IxSetter.html#t:A_Setter\" title=\"Optics.IxSetter\">A_Setter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> a -&gt; a -&gt; m ()","name":"setTweak","module":"Cooked","link":"Cooked.html#v:setTweak"},{"display_html":"<a href=\"#v:overTweak\">overTweak</a> :: (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-IxSetter.html#t:A_Setter\" title=\"Optics.IxSetter\">A_Setter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> a -&gt; (a -&gt; a) -&gt; m ()","name":"overTweak","module":"Cooked","link":"Cooked.html#v:overTweak"},{"display_html":"<a href=\"#v:overMaybeTweak\">overMaybeTweak</a> :: (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; m [a]","name":"overMaybeTweak","module":"Cooked","link":"Cooked.html#v:overMaybeTweak"},{"display_html":"<a href=\"#v:overMaybeSelectingTweak\">overMaybeSelectingTweak</a> :: <span class=\"keyword\">forall</span> a m k is. (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k is <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [a]","name":"overMaybeSelectingTweak","module":"Cooked","link":"Cooked.html#v:overMaybeSelectingTweak"},{"display_html":"<a href=\"#v:selectP\">selectP</a> :: (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Prism.html#t:Prism-39-\" title=\"Optics.Prism\">Prism'</a> a a","name":"selectP","module":"Cooked","link":"Cooked.html#v:selectP"},{"display_html":"<a href=\"#v:combineModsTweak\">combineModsTweak</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> is, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Traversal.html#t:A_Traversal\" title=\"Optics.Traversal\">A_Traversal</a>, <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m) =&gt; ([is] -&gt; [[is]]) -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> x -&gt; (is -&gt; x -&gt; m [(x, l)]) -&gt; m [l]","name":"combineModsTweak","module":"Cooked","link":"Cooked.html#v:combineModsTweak"},{"display_html":"<a href=\"#v:iviewTweak\">iviewTweak</a> :: (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Is\" title=\"Optics.Optic\">Is</a> k <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Getter.html#t:A_Getter\" title=\"Optics.Getter\">A_Getter</a>) =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:Optic-39-\" title=\"Optics.Optic\">Optic'</a> k (<a href=\"https://hackage.haskell.org/package/-/docs/Optics-Optic.html#t:WithIx\" title=\"Optics.Optic\">WithIx</a> is) <a href=\"Cooked.html#t:TxSkel\" title=\"Cooked\">TxSkel</a> a -&gt; m (is, a)","name":"iviewTweak","module":"Cooked","link":"Cooked.html#v:iviewTweak"},{"display_html":"<a href=\"#v:ensureInputTweak\">ensureInputTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>))","name":"ensureInputTweak","module":"Cooked","link":"Cooked.html#v:ensureInputTweak"},{"display_html":"<a href=\"#v:addInputTweak\">addInputTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> -&gt; m ()","name":"addInputTweak","module":"Cooked","link":"Cooked.html#v:addInputTweak"},{"display_html":"<a href=\"#v:removeInputTweak\">removeInputTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> -&gt; <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [(<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>, <a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>)]","name":"removeInputTweak","module":"Cooked","link":"Cooked.html#v:removeInputTweak"},{"display_html":"<a href=\"#v:modifySpendRedeemersOfTypeTweak\">modifySpendRedeemersOfTypeTweak</a> :: <span class=\"keyword\">forall</span> a b m. (<a href=\"Cooked.html#t:RedeemerConstrs\" title=\"Cooked\">RedeemerConstrs</a> a, <a href=\"Cooked.html#t:RedeemerConstrs\" title=\"Cooked\">RedeemerConstrs</a> b, <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> b) -&gt; m [<a href=\"Cooked.html#t:TxSkelRedeemer\" title=\"Cooked\">TxSkelRedeemer</a>]","name":"modifySpendRedeemersOfTypeTweak","module":"Cooked","link":"Cooked.html#v:modifySpendRedeemersOfTypeTweak"},{"display_html":"<a href=\"#v:addLabelTweak\">addLabelTweak</a> :: (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"Cooked.html#t:LabelConstrs\" title=\"Cooked\">LabelConstrs</a> x) =&gt; x -&gt; m ()","name":"addLabelTweak","module":"Cooked","link":"Cooked.html#v:addLabelTweak"},{"display_html":"<a href=\"#v:removeLabelTweak\">removeLabelTweak</a> :: (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"Cooked.html#t:LabelConstrs\" title=\"Cooked\">LabelConstrs</a> x) =&gt; x -&gt; m ()","name":"removeLabelTweak","module":"Cooked","link":"Cooked.html#v:removeLabelTweak"},{"display_html":"<a href=\"#v:hasLabelTweak\">hasLabelTweak</a> :: (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"Cooked.html#t:LabelConstrs\" title=\"Cooked\">LabelConstrs</a> x) =&gt; x -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasLabelTweak","module":"Cooked","link":"Cooked.html#v:hasLabelTweak"},{"display_html":"<a href=\"#v:addMintsTweak\">addMintsTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; [<a href=\"Cooked.html#t:Mint\" title=\"Cooked\">Mint</a>] -&gt; m ()","name":"addMintsTweak","module":"Cooked","link":"Cooked.html#v:addMintsTweak"},{"display_html":"<a href=\"#v:removeMintTweak\">removeMintTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; (<a href=\"Cooked.html#t:Mint\" title=\"Cooked\">Mint</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [<a href=\"Cooked.html#t:Mint\" title=\"Cooked\">Mint</a>]","name":"removeMintTweak","module":"Cooked","link":"Cooked.html#v:removeMintTweak"},{"display_html":"<a href=\"#v:allOutPermutsTweak\">allOutPermutsTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"Cooked.html#t:PermutOutTweakMode\" title=\"Cooked\">PermutOutTweakMode</a> -&gt; m ()","name":"allOutPermutsTweak","module":"Cooked","link":"Cooked.html#v:allOutPermutsTweak"},{"display_html":"<a href=\"#v:singleOutPermutTweak\">singleOutPermutTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a> -&gt; m ()","name":"singleOutPermutTweak","module":"Cooked","link":"Cooked.html#v:singleOutPermutTweak"},{"display_html":"<a href=\"#v:ensureOutputTweak\">ensureOutputTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>)","name":"ensureOutputTweak","module":"Cooked","link":"Cooked.html#v:ensureOutputTweak"},{"display_html":"<a href=\"#v:addOutputTweak\">addOutputTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; m ()","name":"addOutputTweak","module":"Cooked","link":"Cooked.html#v:addOutputTweak"},{"display_html":"<a href=\"#v:removeOutputTweak\">removeOutputTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; (<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m [<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>]","name":"removeOutputTweak","module":"Cooked","link":"Cooked.html#v:removeOutputTweak"},{"display_html":"<a href=\"#v:tamperDatumTweak\">tamperDatumTweak</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"Cooked.html#t:DatumConstrs\" title=\"Cooked\">DatumConstrs</a> a) =&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> a) -&gt; m [a]","name":"tamperDatumTweak","module":"Cooked","link":"Cooked.html#v:tamperDatumTweak"},{"display_html":"<a href=\"#v:malformDatumTweak\">malformDatumTweak</a> :: <span class=\"keyword\">forall</span> a m. (<a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m, <a href=\"Cooked.html#t:DatumConstrs\" title=\"Cooked\">DatumConstrs</a> a) =&gt; (a -&gt; [<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinData\" title=\"PlutusLedgerApi.Common\">BuiltinData</a>]) -&gt; m ()","name":"malformDatumTweak","module":"Cooked","link":"Cooked.html#v:malformDatumTweak"},{"display_html":"<a href=\"#v:getSignersTweak\">getSignersTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; m [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>]","name":"getSignersTweak","module":"Cooked","link":"Cooked.html#v:getSignersTweak"},{"display_html":"<a href=\"#v:modifySignersTweak\">modifySignersTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; ([<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>] -&gt; [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>]) -&gt; m [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>]","name":"modifySignersTweak","module":"Cooked","link":"Cooked.html#v:modifySignersTweak"},{"display_html":"<a href=\"#v:setSignersTweak\">setSignersTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>] -&gt; m [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>]","name":"setSignersTweak","module":"Cooked","link":"Cooked.html#v:setSignersTweak"},{"display_html":"<a href=\"#v:signersSatisfyTweak\">signersSatisfyTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; ([<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"signersSatisfyTweak","module":"Cooked","link":"Cooked.html#v:signersSatisfyTweak"},{"display_html":"<a href=\"#v:isSignerTweak\">isSignerTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isSignerTweak","module":"Cooked","link":"Cooked.html#v:isSignerTweak"},{"display_html":"<a href=\"#v:hasSignersTweak\">hasSignersTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasSignersTweak","module":"Cooked","link":"Cooked.html#v:hasSignersTweak"},{"display_html":"<a href=\"#v:addFirstSignerTweak\">addFirstSignerTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> -&gt; m [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>]","name":"addFirstSignerTweak","module":"Cooked","link":"Cooked.html#v:addFirstSignerTweak"},{"display_html":"<a href=\"#v:addSignersTweak\">addSignersTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>] -&gt; m [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>]","name":"addSignersTweak","module":"Cooked","link":"Cooked.html#v:addSignersTweak"},{"display_html":"<a href=\"#v:addLastSignerTweak\">addLastSignerTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> -&gt; m [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>]","name":"addLastSignerTweak","module":"Cooked","link":"Cooked.html#v:addLastSignerTweak"},{"display_html":"<a href=\"#v:removeSignersTweak\">removeSignersTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>] -&gt; m [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>]","name":"removeSignersTweak","module":"Cooked","link":"Cooked.html#v:removeSignersTweak"},{"display_html":"<a href=\"#v:removeSignerTweak\">removeSignerTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> -&gt; m [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>]","name":"removeSignerTweak","module":"Cooked","link":"Cooked.html#v:removeSignerTweak"},{"display_html":"<a href=\"#v:replaceFirstSignerTweak\">replaceFirstSignerTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> -&gt; m [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>]","name":"replaceFirstSignerTweak","module":"Cooked","link":"Cooked.html#v:replaceFirstSignerTweak"},{"display_html":"<a href=\"#v:getValidityRangeTweak\">getValidityRangeTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"getValidityRangeTweak","module":"Cooked","link":"Cooked.html#v:getValidityRangeTweak"},{"display_html":"<a href=\"#v:knownWallets\">knownWallets</a> :: [<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>]","name":"knownWallets","module":"Cooked","link":"Cooked.html#v:knownWallets"},{"display_html":"<a href=\"#v:wallet\">wallet</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>","name":"wallet","module":"Cooked","link":"Cooked.html#v:wallet"},{"display_html":"<a href=\"#v:walletPKHashToId\">walletPKHashToId</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Int\" title=\"Distribution.Compat.Prelude\">Int</a>","name":"walletPKHashToId","module":"Cooked","link":"Cooked.html#v:walletPKHashToId"},{"display_html":"<a href=\"#v:walletPKHashToWallet\">walletPKHashToWallet</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>","name":"walletPKHashToWallet","module":"Cooked","link":"Cooked.html#v:walletPKHashToWallet"},{"display_html":"<a href=\"#v:walletPK\">walletPK</a> :: <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Crypto.html#t:PubKey\" title=\"Ledger.Crypto\">PubKey</a>","name":"walletPK","module":"Cooked","link":"Cooked.html#v:walletPK"},{"display_html":"<a href=\"#v:walletStakingPK\">walletStakingPK</a> :: <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Crypto.html#t:PubKey\" title=\"Ledger.Crypto\">PubKey</a>","name":"walletStakingPK","module":"Cooked","link":"Cooked.html#v:walletStakingPK"},{"display_html":"<a href=\"#v:walletStakingPKHash\">walletStakingPKHash</a> :: <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:PubKeyHash\" title=\"Ledger\">PubKeyHash</a>","name":"walletStakingPKHash","module":"Cooked","link":"Cooked.html#v:walletStakingPKHash"},{"display_html":"<a href=\"#v:walletSK\">walletSK</a> :: <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Crypto-Wallet.html#t:XPrv\" title=\"Cardano.Crypto.Wallet\">XPrv</a>","name":"walletSK","module":"Cooked","link":"Cooked.html#v:walletSK"},{"display_html":"<a href=\"#v:walletStakingSK\">walletStakingSK</a> :: <a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Cardano-Crypto-Wallet.html#t:XPrv\" title=\"Cardano.Crypto.Wallet\">XPrv</a>","name":"walletStakingSK","module":"Cooked","link":"Cooked.html#v:walletStakingSK"},{"display_html":"<a href=\"#v:utxoPayloadSet\">utxoPayloadSet</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayloadSet\" title=\"Cooked.MockChain.UtxoState\">UtxoPayloadSet</a> -&gt; [<a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a>]","name":"utxoPayloadSet","module":"Cooked","link":"Cooked.html#v:utxoPayloadSet"},{"display_html":"<a href=\"#v:utxoPayloadTxOutRef\">utxoPayloadTxOutRef</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a>","name":"utxoPayloadTxOutRef","module":"Cooked","link":"Cooked.html#v:utxoPayloadTxOutRef"},{"display_html":"<a href=\"#v:utxoPayloadValue\">utxoPayloadValue</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:Value\" title=\"PlutusLedgerApi.V1.Value\">Value</a>","name":"utxoPayloadValue","module":"Cooked","link":"Cooked.html#v:utxoPayloadValue"},{"display_html":"<a href=\"#v:utxoPayloadDatum\">utxoPayloadDatum</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"Cooked.html#t:UtxoPayloadDatum\" title=\"Cooked\">UtxoPayloadDatum</a>","name":"utxoPayloadDatum","module":"Cooked","link":"Cooked.html#v:utxoPayloadDatum"},{"display_html":"<a href=\"#v:utxoPayloadReferenceScript\">utxoPayloadReferenceScript</a> :: <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoPayload\" title=\"Cooked.MockChain.UtxoState\">UtxoPayload</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger.html#t:ScriptHash\" title=\"Ledger\">ScriptHash</a>","name":"utxoPayloadReferenceScript","module":"Cooked","link":"Cooked.html#v:utxoPayloadReferenceScript"},{"display_html":"<a href=\"#v:combineMockChainT\">combineMockChainT</a> :: (<span class=\"keyword\">forall</span> a. m a -&gt; m a -&gt; m a) -&gt; <a href=\"Cooked.html#t:MockChainT\" title=\"Cooked\">MockChainT</a> m x -&gt; <a href=\"Cooked.html#t:MockChainT\" title=\"Cooked\">MockChainT</a> m x -&gt; <a href=\"Cooked.html#t:MockChainT\" title=\"Cooked\">MockChainT</a> m x","name":"combineMockChainT","module":"Cooked","link":"Cooked.html#v:combineMockChainT"},{"display_html":"<a href=\"#v:mcrValue\">mcrValue</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Either\" title=\"Distribution.Compat.Prelude\">Either</a> <a href=\"Cooked.html#t:MockChainError\" title=\"Cooked\">MockChainError</a> a","name":"mcrValue","module":"Cooked","link":"Cooked.html#v:mcrValue"},{"display_html":"<a href=\"#v:mcrOutputs\">mcrOutputs</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Tx-Internal.html#t:TxOutRef\" title=\"Ledger.Tx.Internal\">TxOutRef</a> (<a href=\"Cooked.html#t:TxSkelOut\" title=\"Cooked\">TxSkelOut</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>)","name":"mcrOutputs","module":"Cooked","link":"Cooked.html#v:mcrOutputs"},{"display_html":"<a href=\"#v:mcrUtxoState\">mcrUtxoState</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a -&gt; <a href=\"Cooked-MockChain-UtxoState.html#t:UtxoState\" title=\"Cooked.MockChain.UtxoState\">UtxoState</a>","name":"mcrUtxoState","module":"Cooked","link":"Cooked.html#v:mcrUtxoState"},{"display_html":"<a href=\"#v:mcrJournal\">mcrJournal</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a -&gt; [<a href=\"Cooked-MockChain-BlockChain.html#t:MockChainLogEntry\" title=\"Cooked.MockChain.BlockChain\">MockChainLogEntry</a>]","name":"mcrJournal","module":"Cooked","link":"Cooked.html#v:mcrJournal"},{"display_html":"<a href=\"#v:mcrAliases\">mcrAliases</a> :: <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Map\" title=\"Distribution.Compat.Prelude\">Map</a> <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-Common.html#t:BuiltinByteString\" title=\"PlutusLedgerApi.Common\">BuiltinByteString</a> <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a>","name":"mcrAliases","module":"Cooked","link":"Cooked.html#v:mcrAliases"},{"display_html":"<a href=\"#v:runMockChainTRaw\">runMockChainTRaw</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:MockChainT\" title=\"Cooked\">MockChainT</a> m a -&gt; m (<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a)","name":"runMockChainTRaw","module":"Cooked","link":"Cooked.html#v:runMockChainTRaw"},{"display_html":"<a href=\"#v:runMockChainTFrom\">runMockChainTFrom</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:InitialDistribution\" title=\"Cooked\">InitialDistribution</a> -&gt; <a href=\"Cooked.html#t:MockChainT\" title=\"Cooked\">MockChainT</a> m a -&gt; m (<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a)","name":"runMockChainTFrom","module":"Cooked","link":"Cooked.html#v:runMockChainTFrom"},{"display_html":"<a href=\"#v:runMockChainT\">runMockChainT</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Monad\" title=\"Distribution.Compat.Prelude\">Monad</a> m =&gt; <a href=\"Cooked.html#t:MockChainT\" title=\"Cooked\">MockChainT</a> m a -&gt; m (<a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a)","name":"runMockChainT","module":"Cooked","link":"Cooked.html#v:runMockChainT"},{"display_html":"<a href=\"#v:runMockChainFrom\">runMockChainFrom</a> :: <a href=\"Cooked.html#t:InitialDistribution\" title=\"Cooked\">InitialDistribution</a> -&gt; <a href=\"Cooked.html#t:MockChain\" title=\"Cooked\">MockChain</a> a -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a","name":"runMockChainFrom","module":"Cooked","link":"Cooked.html#v:runMockChainFrom"},{"display_html":"<a href=\"#v:runMockChain\">runMockChain</a> :: <a href=\"Cooked.html#t:MockChain\" title=\"Cooked\">MockChain</a> a -&gt; <a href=\"Cooked-MockChain-Direct.html#t:MockChainReturn\" title=\"Cooked.MockChain.Direct\">MockChainReturn</a> a","name":"runMockChain","module":"Cooked","link":"Cooked.html#v:runMockChain"},{"display_html":"<a href=\"#v:testBool\">testBool</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a> -&gt; prop","name":"testBool","module":"Cooked","link":"Cooked.html#v:testBool"},{"display_html":"<a href=\"#v:testAll\">testAll</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; (a -&gt; prop) -&gt; [a] -&gt; prop","name":"testAll","module":"Cooked","link":"Cooked.html#v:testAll"},{"display_html":"<a href=\"#v:testAny\">testAny</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; (a -&gt; prop) -&gt; [a] -&gt; prop","name":"testAny","module":"Cooked","link":"Cooked.html#v:testAny"},{"display_html":"<a href=\"#v:assertionToMaybe\">assertionToMaybe</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:IO\" title=\"Distribution.Compat.Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Maybe\" title=\"Distribution.Compat.Prelude\">Maybe</a> <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:HUnitFailure\" title=\"Test.Tasty.HUnit\">HUnitFailure</a>)","name":"assertionToMaybe","module":"Cooked","link":"Cooked.html#v:assertionToMaybe"},{"display_html":"<a href=\"#v:assertSubset\">assertSubset</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; [a] -&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a>","name":"assertSubset","module":"Cooked","link":"Cooked.html#v:assertSubset"},{"display_html":"<a href=\"#v:assertSameSets\">assertSameSets</a> :: (<a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Eq\" title=\"Distribution.Compat.Prelude\">Eq</a> a) =&gt; [a] -&gt; [a] -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a>","name":"assertSameSets","module":"Cooked","link":"Cooked.html#v:assertSameSets"},{"display_html":"<a href=\"#v:testToProp\">testToProp</a> :: (<a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a) =&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop -&gt; prop","name":"testToProp","module":"Cooked","link":"Cooked.html#v:testToProp"},{"display_html":"<a href=\"#v:testCooked\">testCooked</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-HUnit.html#t:Assertion\" title=\"Test.Tasty.HUnit\">Assertion</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testCooked","module":"Cooked","link":"Cooked.html#v:testCooked"},{"display_html":"<a href=\"#v:testCookedQC\">testCookedQC</a> :: <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Show\" title=\"Distribution.Compat.Prelude\">Show</a> a =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a <a href=\"https://hackage.haskell.org/package/-/docs/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testCookedQC","module":"Cooked","link":"Cooked.html#v:testCookedQC"},{"display_html":"<a href=\"#v:mustSucceedTest\">mustSucceedTest</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"mustSucceedTest","module":"Cooked","link":"Cooked.html#v:mustSucceedTest"},{"display_html":"<a href=\"#v:mustFailTest\">mustFailTest</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"mustFailTest","module":"Cooked","link":"Cooked.html#v:mustFailTest"},{"display_html":"<a href=\"#v:withInitDist\">withInitDist</a> :: <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop -&gt; <a href=\"Cooked.html#t:InitialDistribution\" title=\"Cooked\">InitialDistribution</a> -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"withInitDist","module":"Cooked","link":"Cooked.html#v:withInitDist"},{"display_html":"<a href=\"#v:withPrettyOpts\">withPrettyOpts</a> :: <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop -&gt; <a href=\"Cooked.html#t:PrettyCookedOpts\" title=\"Cooked\">PrettyCookedOpts</a> -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"withPrettyOpts","module":"Cooked","link":"Cooked.html#v:withPrettyOpts"},{"display_html":"<a href=\"#v:withJournalProp\">withJournalProp</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop -&gt; <a href=\"Cooked.html#t:JournalProp\" title=\"Cooked\">JournalProp</a> prop -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"withJournalProp","module":"Cooked","link":"Cooked.html#v:withJournalProp"},{"display_html":"<a href=\"#v:withStateProp\">withStateProp</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop -&gt; <a href=\"Cooked.html#t:StateProp\" title=\"Cooked\">StateProp</a> prop -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"withStateProp","module":"Cooked","link":"Cooked.html#v:withStateProp"},{"display_html":"<a href=\"#v:withSuccessProp\">withSuccessProp</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop -&gt; <a href=\"Cooked.html#t:SuccessProp\" title=\"Cooked\">SuccessProp</a> a prop -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"withSuccessProp","module":"Cooked","link":"Cooked.html#v:withSuccessProp"},{"display_html":"<a href=\"#v:withResultProp\">withResultProp</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop -&gt; (a -&gt; prop) -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"withResultProp","module":"Cooked","link":"Cooked.html#v:withResultProp"},{"display_html":"<a href=\"#v:withSizeProp\">withSizeProp</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop -&gt; <a href=\"Cooked.html#t:SizeProp\" title=\"Cooked\">SizeProp</a> prop -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"withSizeProp","module":"Cooked","link":"Cooked.html#v:withSizeProp"},{"display_html":"<a href=\"#v:withFailureProp\">withFailureProp</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop -&gt; <a href=\"Cooked.html#t:FailureProp\" title=\"Cooked\">FailureProp</a> prop -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"withFailureProp","module":"Cooked","link":"Cooked.html#v:withFailureProp"},{"display_html":"<a href=\"#v:withErrorProp\">withErrorProp</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop -&gt; (<a href=\"Cooked.html#t:MockChainError\" title=\"Cooked\">MockChainError</a> -&gt; prop) -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"withErrorProp","module":"Cooked","link":"Cooked.html#v:withErrorProp"},{"display_html":"<a href=\"#v:isPhase1Failure\">isPhase1Failure</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked.html#t:FailureProp\" title=\"Cooked\">FailureProp</a> prop","name":"isPhase1Failure","module":"Cooked","link":"Cooked.html#v:isPhase1Failure"},{"display_html":"<a href=\"#v:isPhase2Failure\">isPhase2Failure</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked.html#t:FailureProp\" title=\"Cooked\">FailureProp</a> prop","name":"isPhase2Failure","module":"Cooked","link":"Cooked.html#v:isPhase2Failure"},{"display_html":"<a href=\"#v:isPhase1FailureWithMsg\">isPhase1FailureWithMsg</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked.html#t:FailureProp\" title=\"Cooked\">FailureProp</a> prop","name":"isPhase1FailureWithMsg","module":"Cooked","link":"Cooked.html#v:isPhase1FailureWithMsg"},{"display_html":"<a href=\"#v:isPhase2FailureWithMsg\">isPhase2FailureWithMsg</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked.html#t:FailureProp\" title=\"Cooked\">FailureProp</a> prop","name":"isPhase2FailureWithMsg","module":"Cooked","link":"Cooked.html#v:isPhase2FailureWithMsg"},{"display_html":"<a href=\"#v:isOfSize\">isOfSize</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:SizeProp\" title=\"Cooked\">SizeProp</a> prop","name":"isOfSize","module":"Cooked","link":"Cooked.html#v:isOfSize"},{"display_html":"<a href=\"#v:isAtLeastOfSize\">isAtLeastOfSize</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:SizeProp\" title=\"Cooked\">SizeProp</a> prop","name":"isAtLeastOfSize","module":"Cooked","link":"Cooked.html#v:isAtLeastOfSize"},{"display_html":"<a href=\"#v:isAtMostOfSize\">isAtMostOfSize</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked.html#t:SizeProp\" title=\"Cooked\">SizeProp</a> prop","name":"isAtMostOfSize","module":"Cooked","link":"Cooked.html#v:isAtMostOfSize"},{"display_html":"<a href=\"#v:happened\">happened</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked.html#t:JournalProp\" title=\"Cooked\">JournalProp</a> prop","name":"happened","module":"Cooked","link":"Cooked.html#v:happened"},{"display_html":"<a href=\"#v:didNotHappen\">didNotHappen</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked.html#t:JournalProp\" title=\"Cooked\">JournalProp</a> prop","name":"didNotHappen","module":"Cooked","link":"Cooked.html#v:didNotHappen"},{"display_html":"<a href=\"#v:isInWallets\">isInWallets</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; [(<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>, [(<a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:AssetClass\" title=\"PlutusLedgerApi.V1.Value\">AssetClass</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>)])] -&gt; <a href=\"Cooked.html#t:SuccessProp\" title=\"Cooked\">SuccessProp</a> a prop","name":"isInWallets","module":"Cooked","link":"Cooked.html#v:isInWallets"},{"display_html":"<a href=\"#v:isInWallet\">isInWallet</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; (<a href=\"Cooked.html#t:Wallet\" title=\"Cooked\">Wallet</a>, <a href=\"https://hackage.haskell.org/package/-/docs/PlutusLedgerApi-V1-Value.html#t:AssetClass\" title=\"PlutusLedgerApi.V1.Value\">AssetClass</a>, <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a>) -&gt; <a href=\"Cooked.html#t:SuccessProp\" title=\"Cooked\">SuccessProp</a> a prop","name":"isInWallet","module":"Cooked","link":"Cooked.html#v:isInWallet"},{"display_html":"<a href=\"#v:mustFailInPhase2Test\">mustFailInPhase2Test</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"mustFailInPhase2Test","module":"Cooked","link":"Cooked.html#v:mustFailInPhase2Test"},{"display_html":"<a href=\"#v:mustFailInPhase2WithMsgTest\">mustFailInPhase2WithMsgTest</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"mustFailInPhase2WithMsgTest","module":"Cooked","link":"Cooked.html#v:mustFailInPhase2WithMsgTest"},{"display_html":"<a href=\"#v:mustFailInPhase1Test\">mustFailInPhase1Test</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"mustFailInPhase1Test","module":"Cooked","link":"Cooked.html#v:mustFailInPhase1Test"},{"display_html":"<a href=\"#v:mustFailInPhase1WithMsgTest\">mustFailInPhase1WithMsgTest</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:String\" title=\"Distribution.Compat.Prelude\">String</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"mustFailInPhase1WithMsgTest","module":"Cooked","link":"Cooked.html#v:mustFailInPhase1WithMsgTest"},{"display_html":"<a href=\"#v:mustSucceedWithSizeTest\">mustSucceedWithSizeTest</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"mustSucceedWithSizeTest","module":"Cooked","link":"Cooked.html#v:mustSucceedWithSizeTest"},{"display_html":"<a href=\"#v:mustFailWithSizeTest\">mustFailWithSizeTest</a> :: <a href=\"Cooked.html#t:IsProp\" title=\"Cooked\">IsProp</a> prop =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; <a href=\"Cooked-MockChain-Staged.html#t:StagedMockChain\" title=\"Cooked.MockChain.Staged\">StagedMockChain</a> a -&gt; <a href=\"Cooked.html#t:Test\" title=\"Cooked\">Test</a> a prop","name":"mustFailWithSizeTest","module":"Cooked","link":"Cooked.html#v:mustFailWithSizeTest"},{"display_html":"<a href=\"#v:setValidityRangeTweak\">setValidityRangeTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityRangeTweak","module":"Cooked","link":"Cooked.html#v:setValidityRangeTweak"},{"display_html":"<a href=\"#v:setAlwaysValidRangeTweak\">setAlwaysValidRangeTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setAlwaysValidRangeTweak","module":"Cooked","link":"Cooked.html#v:setAlwaysValidRangeTweak"},{"display_html":"<a href=\"#v:setValidityStartTweak\">setValidityStartTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityStartTweak","module":"Cooked","link":"Cooked.html#v:setValidityStartTweak"},{"display_html":"<a href=\"#v:setValidityEndTweak\">setValidityEndTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"setValidityEndTweak","module":"Cooked","link":"Cooked.html#v:setValidityEndTweak"},{"display_html":"<a href=\"#v:validityRangeSatisfiesTweak\">validityRangeSatisfiesTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>) -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"validityRangeSatisfiesTweak","module":"Cooked","link":"Cooked.html#v:validityRangeSatisfiesTweak"},{"display_html":"<a href=\"#v:isValidAtTweak\">isValidAtTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidAtTweak","module":"Cooked","link":"Cooked.html#v:isValidAtTweak"},{"display_html":"<a href=\"#v:isValidNowTweak\">isValidNowTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidNowTweak","module":"Cooked","link":"Cooked.html#v:isValidNowTweak"},{"display_html":"<a href=\"#v:isValidDuringTweak\">isValidDuringTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"isValidDuringTweak","module":"Cooked","link":"Cooked.html#v:isValidDuringTweak"},{"display_html":"<a href=\"#v:hasEmptyTimeRangeTweak\">hasEmptyTimeRangeTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasEmptyTimeRangeTweak","module":"Cooked","link":"Cooked.html#v:hasEmptyTimeRangeTweak"},{"display_html":"<a href=\"#v:hasFullTimeRangeTweak\">hasFullTimeRangeTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Bool\" title=\"Distribution.Compat.Prelude\">Bool</a>","name":"hasFullTimeRangeTweak","module":"Cooked","link":"Cooked.html#v:hasFullTimeRangeTweak"},{"display_html":"<a href=\"#v:intersectValidityRangeTweak\">intersectValidityRangeTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"intersectValidityRangeTweak","module":"Cooked","link":"Cooked.html#v:intersectValidityRangeTweak"},{"display_html":"<a href=\"#v:centerAroundValidityRangeTweak\">centerAroundValidityRangeTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Distribution-Compat-Prelude.html#t:Integer\" title=\"Distribution.Compat.Prelude\">Integer</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"centerAroundValidityRangeTweak","module":"Cooked","link":"Cooked.html#v:centerAroundValidityRangeTweak"},{"display_html":"<a href=\"#v:makeValidityRangeSingletonTweak\">makeValidityRangeSingletonTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a> -&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"makeValidityRangeSingletonTweak","module":"Cooked","link":"Cooked.html#v:makeValidityRangeSingletonTweak"},{"display_html":"<a href=\"#v:makeValidityRangeNowTweak\">makeValidityRangeNowTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:SlotRange\" title=\"Ledger.Slot\">SlotRange</a>","name":"makeValidityRangeNowTweak","module":"Cooked","link":"Cooked.html#v:makeValidityRangeNowTweak"},{"display_html":"<a href=\"#v:waitUntilValidTweak\">waitUntilValidTweak</a> :: <a href=\"Cooked.html#t:MonadTweak\" title=\"Cooked\">MonadTweak</a> m =&gt; m <a href=\"https://hackage.haskell.org/package/-/docs/Ledger-Slot.html#t:Slot\" title=\"Ledger.Slot\">Slot</a>","name":"waitUntilValidTweak","module":"Cooked","link":"Cooked.html#v:waitUntilValidTweak"}]